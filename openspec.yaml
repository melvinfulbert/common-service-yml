openapi: 3.0.1
info:
  title: Common Services REST API Documentation
  description: Common services acts as a single source of master data. It stands on top of basic REST API's discussed below.
  version: 2023.1.3.0
servers:
  - url: http://localhost:8094
    description: Generated server url
tags:
  - name: 1.2 - Master Data - Location Capacity Cost Configuration
    description: REST API for location-capacity-cost.
  - name: 1.4 - Admin - Product Gtin Configuration
    description: REST API for product gtin.
  - name: 1.1 - Master Data - Fulfillment Type and Service Configuration
    description: REST API for Fulfillment Type and Service Configuration.
  - name: 1.6 - Master Data - Calendar Configuration
    description: REST API for Calendar.
  - name: 1.3 - Master Data - Organization Configuration
    description: REST API for org selling channel configuration.
  - name: 1.4 - Admin - Read Aggregated Product Configuration
    description: REST API to read Aggregated data for a given product
  - name: 1.5 - Master Data - Configuration Hierarchy
    description: REST API for configuration hierarchy.
  - name: 2.3 - Admin - MapStore Service
    description: REST API for map stores empty status for pre-calculate optimizations
  - name: 1.9 - Master Data - Item Association Configuration
    description: REST API for item-association-service.
  - name: 2.1 - Cache Load Service
    description: REST API for Cache Load Service
  - name: 2.0 Pre-Calculation Services
    description: REST API for Precalculate APIs.
  - name: 1.8 - Master Data - Dynamic Priority Configuration
    description: REST API for location dynamic priority.
  - name: 2.3 - Master Data - Periodic Updates Configuration
    description: REST API for configuring durations for scheduling Master Data attributes.
  - name: 1.4 - Master Data - Product Configuration
    description: REST API for product-services.
  - name: 1.2 - Master Data - Location Configuration
    description: REST API for location configuration.
  - name: 1.2 - Master Data - Location Type Capacity Cost Configuration
    description: REST API for location-type-capacity-cost.
  - name: 3.1 - Backup Load Service
    description: REST API for Back up Load Service
  - name: 1.9 - Admin Data - Item Association Configuration
    description: REST API for item-association-service.
  - name: 2.2 Validation Configuration
    description: REST API for Validation Config.
  - name: 1.7 - Kafka Rest Proxy
    description: REST API for kafka proxy server.
paths:
  /validation-config:
    put:
      tags:
        - 2.2 Validation Configuration
      summary: Update Validation Config
      description: This API will update the given Validation Config. For more information on Validation Config refer to the respective POST API notes.
      operationId: update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationConfigDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ValidationConfigDetailResponse'
    post:
      tags:
        - 2.2 Validation Configuration
      summary: Create Validation Config
      description: This API provides the ability to define Validation Config for properties validation.
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationConfigDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ValidationConfigDetailResponse'
  /product-services/product:
    put:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Update Product Data
      description: This API will update the given Product. For more information on Product refer to the respective POST API notes.
      operationId: update_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductDetailResponse'
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Create Product Data
      description: This API allows to define Product for an organization. Product can be associated with Product Class and Product category. An unit of measure can also be defined for the Product Id.
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductDetailResponse'
  /product-services/product-supplier-association:
    put:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Update Product Supplier Association Data
      description: This API will update the given Product Supplier Association attributes. For more information on Product Supplier Association refer to the respective POST API notes.
      operationId: update_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSupplierAssociationDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductSupplierAssociationDetailResponse'
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Create Product Supplier Association Data
      description: This API provides ability to define attributes for Product Supplier Association.
      operationId: create_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSupplierAssociationDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductSupplierAssociationDetailResponse'
  /product-services/product-gtin:
    put:
      tags:
        - 1.4 - Admin - Product Gtin Configuration
      summary: Update Product Gtin Data
      description: This Admin API overrides the association between Gtin and products without performing any check. This is not the master API for updating the association and must be used only to correct the mismatch/error. It must not be used as primary source to update the association between Gtin and products. The association is automatically created/updated/deleted on addition/update/delete of Gtin info of a product through Product master APIs
      operationId: update_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductGtinDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductGtinDetailResponse'
    post:
      tags:
        - 1.4 - Admin - Product Gtin Configuration
      summary: Create Product Gtin Data
      description: This Admin API creates the association between Gtin and products without performing any check.This is not the master API for creating/maintaining the association and must be used only to correct the mismatch/error. It must not be used as primary source to create the association between Gtin and products.The association is automatically created/updated/deleted on addition/update/delete of Gtin info of a product through Product master APIs
      operationId: create_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductGtinDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductGtinDetailResponse'
  /product-services/product-fulfillment-type:
    put:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Read Product-Fulfillment Type Data
      description: This API will update the given Product-Fulfillment Type. For more information on Product-Fulfillment Type refer to the respective POST API notes.
      operationId: update_4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductFulfillmentTypeDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductFulfillmentTypeDetailResponse'
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Create Product-Fulfillment Type Data
      description: This API provides ability to define supported fulfillment types for an item. You will be able to define if a specific item Item101 which supports Fulfillment types SHIP or SHIP_TO_STORE or BOPUS etc. Along with the fulfillment type, you can also define Location processing time (how long it will take to process this in item using the fulfillment type), Selling Channel (dotcom or B2B or 3rdParty) and System processing time. You can also make a particular item  enable or disable for the fulfillment type.
      operationId: create_4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductFulfillmentTypeDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductFulfillmentTypeDetailResponse'
  /product-services/product-fulfillment-service:
    put:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Update Product-Fulfillment Service Data
      description: This API will update the given Product-Fulfillment Service. For more information on Product-Fulfillment Service refer to the respective POST API notes.
      operationId: update_5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductFulfillmentServiceDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductFulfillmentServiceDetailResponse'
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Create Product-Fulfillment Service Data
      description: This API provides ability to define supported fulfillment services for an item. You will be able to define if a specific item Item101 which supports Express, 1 day Shipping, Ground shipping etc. Along with the fulfillment service, you can also define Selling Channel (dotcom or B2B or 3rdParty). You can also make a particular item enable or disable for the fulfillment service.
      operationId: create_5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductFulfillmentServiceDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductFulfillmentServiceDetailResponse'
  /product-services/product-class:
    put:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Update Product Class Data
      description: This API will update the given Product Class. For more information on Product Class refer to the respective POST API notes.
      operationId: update_6
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductClassDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductClassDetailResponse'
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Create Product Class Data
      description: This API supports defining various product classes under an Product Category and Selling channel.Typically Product Classes will have different product categories within them. For e.g Electronics is a Product Class and Cameras, Laptops,Mobile Phones are different Categories within the Product Class.
      operationId: create_6
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductClassDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductClassDetailResponse'
  /product-services/product-class-location-type-fulfillment-type:
    put:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Update Product Class-Location Type Fulfillment Type Data
      description: This API will update the given Product Class-Location Type Fulfillment Type. For more information on Product-Class-Location-Type-Fulfillment-Type refer to the respective POST API notes.
      operationId: update_7
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductClassLocationTypeFulfillmentTypeDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductClassLocationTypeFulfillmentTypeDetailResponse'
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Create Product Class-Location Type Fulfillment Type Data
      description: This API allows you to define an eligibility at location type, fulfillment type applicable for a product class. For e.g. you may want to exclude a Consumer Electronics to be picked from all the stores. This is helpful when you do not want to define such rules at each Product level as they are common across products of a given class.
      operationId: create_7
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductClassLocationTypeFulfillmentTypeDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductClassLocationTypeFulfillmentTypeDetailResponse'
  /product-services/product-class-location-type-fulfillment-service:
    put:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Update Product Class-Location Type Fulfillment Service Data
      description: This API will update the given Product Class-Location Type Fulfillment Service. For more information on Product-Class-Location-Type-Fulfillment-Service refer to the respective POST API notes.
      operationId: update_8
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductClassLocationTypeFulfillmentServiceDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductClassLocationTypeFulfillmentServiceDetailResponse'
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Create Product Class-Location Type Fulfillment Service Data
      description: This API allows you to define an eligibility at location type, fulfillment service applicable for a product class. For e.g. you may want to exclude a Consumer Electronics to be shipped as STANDARD from all the stores. This is helpful when you do not want to define such rules at each Product level as they are common across products of a given class.
      operationId: create_8
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductClassLocationTypeFulfillmentServiceDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductClassLocationTypeFulfillmentServiceDetailResponse'
  /product-services/product-class-fulfillment-type:
    put:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Update Product Class-Fulfillment Type Data
      description: This API will update the given Product Class-Fulfillment Type. For more information on Product Class-Fulfillment Type refer to the respective POST API notes.
      operationId: update_9
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductClassFulfillmentTypeDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductClassFulfillmentTypeDetailResponse'
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Create Product Class-Fulfillment Type Data
      description: This API allows you to define a fulfillment type applicable for a product class. For e.g. you may want to configure Consumer Electronics -Pick as well as Ship whereas Accessories  - Ship. So this will mean that Consumer Electronics will be shipped as well as allowed pick up and Accessories will be shipped and not allowed for pick up.  This is helpful when you do not want to define such rules at each Product level as they are common across products of similar class. You can also define location processing time (range - min and max) for this fulfillment type and Product class and temporary disable expiration time (it is time until when set the fulfillment service will be disabled for the Product class). Safety stock for a Product class for a fulfillment type can also be define.
      operationId: create_9
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductClassFulfillmentTypeDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductClassFulfillmentTypeDetailResponse'
  /product-services/product-class-fulfillment-service:
    put:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Update Product Class-Fulfillment Service Data
      description: This API will update the given Product Class-Fulfillment Service. For more information on Product Class-Fulfillment Service refer to the respective POST API notes.
      operationId: update_10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductClassFulfillmentServiceDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductClassFulfillmentServiceDetailResponse'
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Create Product Class-Fulfillment Service Data
      description: This API allows you to define a fulfillment service applicable for a product class. For e.g. you may want to configure Consumer Electronics - Express and 1 day whereas Accessories - Ground. So this will mean that Consumer Electronics will not be shipped by Ground and Accessories will not be shipped by Express or 1 day services. This is helpful when you do not want to define such rules at each Product level as they are common across products of similar class. You can also define Product class and temporary disable expiration time (it is time until when set the fulfillment service will be disabled for the Product class).
      operationId: create_10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductClassFulfillmentServiceDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductClassFulfillmentServiceDetailResponse'
  /product-services/product-category:
    put:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Update Product Category Data
      description: This API will update the given Product Category. For more information on Product Category refer to the respective POST API notes.
      operationId: update_11
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategoryDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductCategoryDetailResponse'
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Create Product Category Data
      description: This API supports defining various product categories under an Product Category, Product class and Selling channel.Typically Product categories will be either various classifications of the product in the catalogue like Electronics,Accessories, Gifts, Home Appliances etc.
      operationId: create_12
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategoryDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductCategoryDetailResponse'
  /product-services/product-category-location-type-fulfillment-type:
    put:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Update Product Category-Location Type Fulfillment Type Data
      description: This API will update the given Product Category-Location Type Fulfillment Type. For more information on Product-Category-Location-Type-Fulfillment-Type refer to the respective POST API notes.
      operationId: update_12
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategoryLocationTypeFulfillmentTypeDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductCategoryLocationTypeFulfillmentTypeDetailResponse'
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Create Product Category-Location Type Fulfillment Type Data
      description: This API allows you to define an eligibility at location type, fulfillment type applicable for a product category. For e.g. you may want to exclude a television to be picked from all the stores. This is helpful when you do not want to define such rules at each Product level as they are common across products of a given category.
      operationId: create_13
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategoryLocationTypeFulfillmentTypeDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductCategoryLocationTypeFulfillmentTypeDetailResponse'
  /product-services/product-category-location-type-fulfillment-service:
    put:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Update Product Category-Location Type Fulfillment Service Data
      description: This API will update the given Product Category-Location Type Fulfillment Service. For more information on Product-Category-Location-Type-Fulfillment-Service refer to the respective POST API notes.
      operationId: update_13
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategoryLocationTypeFulfillmentServiceDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductCategoryLocationTypeFulfillmentServiceDetailResponse'
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Create Product Category-Location Type Fulfillment Service Data
      description: This API allows you to define an eligibility at location type, fulfillment service applicable for a product category. For e.g. you may want to exclude a television to be shipped as STANDARD from all the stores. This is helpful when you do not want to define such rules at each Product level as they are common across products of a given category.
      operationId: create_14
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategoryLocationTypeFulfillmentServiceDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductCategoryLocationTypeFulfillmentServiceDetailResponse'
  /product-services/product-category-fulfillment-type:
    put:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Update Product Category-Fulfillment Type Data
      description: This API will update the given Product Category-Fulfillment Type. For more information on Product Category-Fulfillment Type refer to the respective POST API notes.
      operationId: update_14
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategoryFulfillmentTypeDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductCategoryFulfillmentTypeDetailResponse'
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Create Product Category-Fulfillment Type Data
      description: This API allows you to define a fulfillment type applicable for a product category. For e.g. you may want to say Electronics -Pick and Ship whereas Home Appliances - Ship. So this will mean that Electronics will support both Store Pickup and Ship but Home Appliances will not be allowed for Store Pick up.  This is helpful when you do not want to define such rules at each Product level as they are common across products of similar categories.
      operationId: create_15
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategoryFulfillmentTypeDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductCategoryFulfillmentTypeDetailResponse'
  /product-services/product-category-fulfillment-service:
    put:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Update Product Category-Fulfillment Service Data
      description: This API will update the given Product Category-Fulfillment Service. For more information on Product Category-Fulfillment Service refer to the respective POST API notes.
      operationId: update_15
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategoryFulfillmentServiceDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductCategoryFulfillmentServiceDetailResponse'
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Create Product Category-Fulfillment Service Data
      description: This API allows you to define a fulfillment service applicable for a product category. For e.g. you may want to say Electronics - Express and 1 day Where as Home Appliances - Ground. So this will mean that Electronics willnot be shipped by Ground and Home Appliances will not be shipped by Express or 1 day services.  This is helpful when you do not want to define such rules at each Product level as they are common across products of similar categories.
      operationId: create_16
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategoryFulfillmentServiceDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductCategoryFulfillmentServiceDetailResponse'
  /product-location-services/product-location-type-fulfillment-type:
    put:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Read Product-Location Type Fulfillment Type Data
      description: This API will update the given Product-Location Type Fulfillment Type. For more information on Product-Location-Type-Fulfillment Type refer to the respective POST API notes.
      operationId: update_16
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductLocationTypeFulfillmentTypeDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductLocationTypeFulfillmentTypeDetailResponse'
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Create Product-Location Type Fulfillment Type Data
      description: TThis API allows you to define an eligibility at location type, fulfillment type applicable for an item. For e.g. you may want to exclude a specific item Item101 which is available in Inventory location like Store101 supports SHIP, SHIP_TO_STORE etc. to be picked from all the stores.
      operationId: create_17
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductLocationTypeFulfillmentTypeDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductLocationTypeFulfillmentTypeDetailResponse'
  /product-location-services/product-location-type-fulfillment-service:
    put:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Update Product-Location Type Fulfillment Service Data
      description: This API will update the given Product-Location Type Fulfillment Service. For more information on Product-Location-Type-Fulfillment Service refer to the respective POST API notes.
      operationId: update_17
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductLocationTypeFulfillmentServiceDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductLocationTypeFulfillmentServiceDetailResponse'
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Create Product-Location Type Fulfillment Service Data
      description: This API allows you to define an eligibility at location type, fulfillment service applicable for an item. For e.g. you may want to exclude a specific item Item101 which supports Express, 1 day Shipping, Ground shipping etc to be shipped from all the stores.
      operationId: create_18
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductLocationTypeFulfillmentServiceDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductLocationTypeFulfillmentServiceDetailResponse'
  /product-location-services/product-location-fulfillment-type:
    put:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Update Product Location-Fulfillment Type Data
      description: This API will update the given Product Location-Fulfillment Type. For more information on Product Location-Fulfillment Type refer to the respective POST API notes.
      operationId: update_18
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductLocationFulfillmentTypeDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductLocationFulfillmentTypeDetailResponse'
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Create Product Location-Fulfillment Type Data
      description: This API provides ability to define supported fulfillment types for an item in an Inventory location. You will be able to define if a specific item Item101 which is available in Inventory location like Store101 supports SHIP, SHIP_TO_STORE etc. Along with the fulfillment type, you can also define Location processing time (how long it will take to process this in item in the location with the fulfillment type), Location type (for e.g. Store, DC, RH), Selling Channel (dotcom or B2B or 3rdParty) and System processing time . You can also make a particular item with particular fulfillment type enable or disable for the location.
      operationId: create_19
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductLocationFulfillmentTypeDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductLocationFulfillmentTypeDetailResponse'
  /product-location-services/product-location-fulfillment-service:
    put:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Update Product Location-Fulfillment Service Data
      description: This API will update the given Product Location-Fulfillment Service. For more information on Product Location-Fulfillment Service refer to the respective POST API notes.
      operationId: update_19
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductLocationFulfillmentServiceDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductLocationFulfillmentServiceDetailResponse'
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Create Product Location-Fulfillment Service Data
      description: This API provides ability to define supported fulfillment services for an item in an Inventory location. You will be able to define if a specific item Item101 which is available in Inventory location like Store101 supports Express, 1 day Shipping, Ground shipping etc. Along with the fulfillment service, you can also define Location type (for e.g. Store, DC, RH), Selling Channel (dotcom or B2B or 3rdParty). You can alsomake a particular item with particular fulfillment service enable or disable for the location.
      operationId: create_20
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductLocationFulfillmentServiceDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductLocationFulfillmentServiceDetailResponse'
  /periodic-updates-configuration/:
    put:
      tags:
        - 2.3 - Master Data - Periodic Updates Configuration
      summary: Update Configuration Hierarchy Data
      operationId: update_20
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PeriodicUpdatesConfigurationDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PeriodicUpdatesConfigurationDetailResponse'
    post:
      tags:
        - 2.3 - Master Data - Periodic Updates Configuration
      summary: Create Periodic Updates Configuration Data
      operationId: create_21
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PeriodicUpdatesConfigurationDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PeriodicUpdatesConfigurationDetailResponse'
  /organization-services/org:
    put:
      tags:
        - 1.3 - Master Data - Organization Configuration
      summary: Update Org Data
      description: This API will update the given Organization. For more information on Organization refer to the respective POST API notes.
      operationId: update_21
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrgDetailResponse'
    post:
      tags:
        - 1.3 - Master Data - Organization Configuration
      summary: Create Org Data
      description: This API provides the ability to define an organization by providing a unique organization id and the locale at which it is situated. Usually locale values are America/New_York  or America/Chicago  etc based on the the time zone of the organization. We also define the system hold time in this API.
      operationId: create_22
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrgDetailResponse'
  /organization-services/org-selling-channel:
    put:
      tags:
        - 1.3 - Master Data - Organization Configuration
      summary: Update Org Selling Channel Data
      description: This API will update the given Organization Selling Channel. For more information on Organization Selling Channel refer to the respective POST API notes.
      operationId: update_22
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgSellingChannelDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrgSellingChannelDetailResponse'
    post:
      tags:
        - 1.3 - Master Data - Organization Configuration
      summary: Create Org Selling Channel Data
      description: This API supports defining valid Selling channels for the Organization. You will use this if the Organization has multiple channel like Web, Offline, B2B etc and you want to create the mapping. Along with Selling channel you can also define System Hold Time. System hold time is time you want an order to be kept on hold before processing it. This is typically configured to enable any order modification, cancellation etc.
      operationId: create_23
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgSellingChannelDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrgSellingChannelDetailResponse'
  /location-services/location:
    put:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Update Location Data
      description: This API will update the given Location. For more information on Location refer to the respective POST API notes.
      operationId: update_23
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LocationDetailResponse'
    post:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Create Location Data
      description: This API provides ability to define an Inventory location in the Network. You will configure each and every facility aslocation where inventory is tracked. The facility could be store, a distribution center or a regional hub etc.You will also need to define other attributes of the location like Address, working calendar, Processing time (like 1 hour is processing time for all orders). The API also allows you to enable / disable a location in the network.
      operationId: create_24
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LocationDetailResponse'
  /location-services/location-type:
    put:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Update Location Type Data
      description: This API will update the given Location Type. For more information on Location Type refer to the respective POST API notes.
      operationId: update_24
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationTypeDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LocationTypeDetailResponse'
    post:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Create Location Type Data
      description: This API supports defining a location type. Location type is a logical group of similar inventory storage locations. For e.g. Stores, DG, RDC, FC are location types. /nAlong with this you can also define if they support specific selling channels. For e.g. you can define all stores supports Web Channel, All DG supports Web Channel and Offline Channel
      operationId: create_25
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationTypeDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LocationTypeDetailResponse'
  /location-services/location-type-fulfillment-type:
    put:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Update Location Type - Fulfillment Type Data
      description: This API will update the given Location Type Fulfillment Type. For more information on Location Type Fulfillment Type refer to the respective POST API notes.
      operationId: update_25
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationTypeAndFulfillmentTypeDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LocationTypeAndFulfillmentTypeDetailResponse'
    post:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Create Location Type - Fulfillment Type Data
      description: This API provides ability to define supported fulfillment types (Pick, Ship etc) by location type.You will be able to define if a location type like DGs supports Ship or not. Along with fulfillment type, you can also define Cut off (order received after the cut off time will be processed next day for the defined fulfillment type. For e.g. same day store pick up not allowed if order is place after 4.00 PM), Location processing time range (Ship order takes 4 hours to 8 hours time for processing for this particular location), System processing time range (time required by the system to keep order on hold to allow cancel, edit etc), day wise working calendar for the fulfillment type (scenarios where you have to enable that Ship order from Stores are only allowed on Day1, Day3 and Day5 of the week).The purpose of the API is to enable fulfillment type related rules for a type of Location (for e.g. when you have similar rules for Pick for all Stores, then it will be efficient to define at Location Type Store instead of each individual Stores. You will only define at specific store if you have say separate working calendar for In-store Pickup or Cut off time for a specific store is different from the rest).
      operationId: create_26
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationTypeAndFulfillmentTypeDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LocationTypeAndFulfillmentTypeDetailResponse'
  /location-services/location-type-fulfillment-service:
    put:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Update Location Type - FulfillmentService Data
      description: This API will update the given Location Type Fulfillment Service. For more information on Location Type Fulfillment Service refer to the respective POST API notes.
      operationId: update_26
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationTypeAndFulfillmentServiceDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LocationTypeAndFulfillmentServiceDetailResponse'
    post:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Create Location Type - FulfillmentService Data
      description: This API provides ability to define supported fulfillment services by an Location type. You will define if a specific Type of inventory location like DCs  supports Express, 1 day Shipping, Ground shipping etc.be able to Along with the fulfillment service, you can also define Cut off (order received after the cut off time will be processed next day for the defined fulfillment service. For e.g. same day shipping cut off 4.00 PM), day wise delivery calendar, day wise working calendar, day wise Transfer calendar, Transit time buffer, processing time, delivery buffer, distance limit (for e.g. same day shipping will be restricted within 75 miles). You can also make a particular fulfillment service enable or disable for the location type.The purpose of the API is to enable fulfillment service related rules for a type of Location (for e.g. when you have similar rules for Express shipping for all Stores, then it will be efficient to define at Location Type Store instead of each individual Stores. You will only define at specific store if you have say separate working calendar for Express shipping)
      operationId: create_27
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationTypeAndFulfillmentServiceDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LocationTypeAndFulfillmentServiceDetailResponse'
  /location-services/location-type-capacity-cost:
    put:
      tags:
        - 1.2 - Master Data - Location Type Capacity Cost Configuration
      summary: Update Location Type Capacity Cost Data
      description: This API will update the given Location type capacity cost. For more information on Location refer to the respective POST API notes.
      operationId: update_27
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationTypeCapacityCostDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LocationTypeCapacityCostDetailResponse'
    post:
      tags:
        - 1.2 - Master Data - Location Type Capacity Cost Configuration
      summary: Create Location Type Capacity Cost Data
      description: This API provides ability to define a capacity cost on location type level.
      operationId: create_28
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationTypeCapacityCostDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LocationTypeCapacityCostDetailResponse'
  /location-services/location-fulfillment-type:
    put:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Update Location Fulfillment Type Data
      description: This API will update the given Location Fulfillment Type. For more information on Location Fulfillment Type refer to the respective POST API notes.
      operationId: update_28
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationAndFulfillmentTypeDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LocationAndFulfillmentTypeDetailResponse'
    post:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Create Location Fulfillment Type Data
      description: This API provides ability to define supported fulfillment types (Pick, Ship etc) by an Inventory location.You will be able to define if a specific Inventory location like Store 101 supports Store Pick or not. Along with fulfillment type, you can also define Cut off (order received after thecut off time will be processed next day for the defined fulfillment type. For e.g. same day store pick up notallowed if order is place after 4.00 PM), Location processing time range (Ship order takes 4 hours to 8 hours time forprocessing for this particular location), System processing time range (time required by the system to keep orderon hold to allow cancel, edit etc), day wise working calendar for the fulfillment type (scenarios where you have to enable that Ship order from Store001 are only allowed on Day1, Day3 and Day5 of the week).
      operationId: create_29
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationAndFulfillmentTypeDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LocationAndFulfillmentTypeDetailResponse'
  /location-services/location-fulfillment-service:
    put:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Update Location Fulfillment Service Data
      description: This API will update the given Location Fulfillment Service. For more information on Location Fulfillment Service refer to the respective POST API notes.
      operationId: update_29
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationAndFulfillmentServiceDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LocationAndFulfillmentServiceDetailResponse'
    post:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Create Location Fulfillment Service Data
      description: This API provides ability to define supported fulfillment services by an Inventory location. You will be able to define if a specific Inventory location like Store101 supports Express, 1 day Shipping, Ground shipping etc. Along with the fulfillment service, you can also define Cut off (order received after the cut off time will be processed next day for the defined fulfillment service. For e.g. same day shipping cut off 4.00 PM), day wise delivery calendar, day wise working calendar, day wise Transfer calendar, Transit time buffer, processing time, delivery buffer, distance limit (for e.g. same day shipping will be restricted within 75 miles). You can also make a particular fulfillment service enable or disable for the location.
      operationId: create_30
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationAndFulfillmentServiceDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LocationAndFulfillmentServiceDetailResponse'
  /location-services/location-capacity-cost:
    put:
      tags:
        - 1.2 - Master Data - Location Capacity Cost Configuration
      summary: Update Location Capacity Cost Data
      description: This API will update the given Location capacity cost. For more information on Location refer to the respective POST API notes.
      operationId: update_30
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationCapacityCostDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LocationCapacityCostDetailResponse'
    post:
      tags:
        - 1.2 - Master Data - Location Capacity Cost Configuration
      summary: Create Location Capacity Cost Data
      description: This API provides ability to define a capacity cost on location level.
      operationId: create_31
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationCapacityCostDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LocationCapacityCostDetailResponse'
  /item-association-substitution-services/item-association-substitution:
    put:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Update Item Substitution Association Data
      description: This API will update the given item Association entities values.
      operationId: update_31
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemAssociationSubstitutionDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ItemAssociationSubstitutionDetailResponse'
    post:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Create Item Substitution Association Data
      description: This API provides ability to define supported item association by an Availability Product.
      operationId: create_32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemAssociationSubstitutionDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ItemAssociationSubstitutionDetailResponse'
  /item-association-substitution-services/item-association-substitution/substitution-type:
    put:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Updates Substitution Type
      description: This API will update the given item Association entities values.
      operationId: update_32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemAssociationSubstitutionTypeDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ItemAssociationSubstitutionTypeDetailResponse'
    post:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Creates Substitution Type
      description: This API provides ability to define supported item association by an Availability Product.
      operationId: create_33
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemAssociationSubstitutionTypeDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ItemAssociationSubstitutionTypeDetailResponse'
  /item-association-group-services/item-association-group:
    put:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Update Item Association Data
      description: This API will update the given item Association entities values.
      operationId: update_33
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemAssociationGroupDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ItemAssociationGroupDetailResponse'
    post:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Create Item Association Data
      description: This API provides ability to define supported item association by an Availability Product.
      operationId: create_34
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemAssociationGroupDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ItemAssociationGroupDetailResponse'
  /item-association-bundle-services/item-association-bundle:
    put:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Update Item Association Data
      description: This API will update the given item Association entities values.
      operationId: update_34
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemAssociationBundleDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ItemAssociationBundleDetailResponse'
    post:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Create Item Association Data
      description: This API provides ability to define supported item association by an Availability Product.
      operationId: create_35
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemAssociationBundleDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ItemAssociationBundleDetailResponse'
  /item-association-alias-services/item-association-alias:
    put:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Update Item Association Alias Data
      description: This API will update the given item Association entities values.
      operationId: update_35
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemAssociationAliasDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ItemAssociationAliasDetailResponse'
    post:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Create Item Association Alias Data
      description: This API provides ability to define supported item association by an Availability Product.
      operationId: create_36
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemAssociationAliasDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ItemAssociationAliasDetailResponse'
  /item-association-alias-services/item-association-alias-transpose:
    put:
      tags:
        - 1.9 - Admin Data - Item Association Configuration
      summary: Update Product Alias Data
      description: This Admin API overrides the association between Product and aliases without performing any check. This is not the master API for updating the association and must be used only to correct the mismatch/error. It must not be used as primary source to update the association between Product and aliases. The association is automatically created/updated/deleted on addition/update/delete of alias info of a product through Item Association alias master APIs
      operationId: update_36
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemAssociationAliasTransposeDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ItemAssociationAliasTransposeDetailResponse'
    post:
      tags:
        - 1.9 - Admin Data - Item Association Configuration
      summary: Create Product Aliases Data
      description: This Admin API creates the association between Product and aliases without performing any check.This is not the master API for creating/maintaining the association and must be used only to correct the mismatch/error. It must not be used as primary source to create the association between Product and aliases.The association is automatically created/updated/deleted on addition/update/delete of alias info of a product through Item Association alias master APIs
      operationId: create_37
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemAssociationAliasTransposeDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ItemAssociationAliasTransposeDetailResponse'
  /fulfillment-services/fulfillment-type:
    put:
      tags:
        - 1.1 - Master Data - Fulfillment Type and Service Configuration
      summary: Update Fulfillment Type Data
      description: This API will update the given Fulfillment Type. For more information on Fulfillment Type refer to the respective POST API notes.
      operationId: update_37
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillmentTypeDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FulfillmentTypeDetailResponse'
    post:
      tags:
        - 1.1 - Master Data - Fulfillment Type and Service Configuration
      summary: Create Fulfillment Type Data
      description: "This API provides ability to define supported fulfillment types (Pick, Ship etc) by an Organization.  You will be able to define if an Organization supports Ship or not. Along with fulfillment type, you can also define Selling Channel, Cut off (order received after the cut off time will be processed next day for the defined fulfillment type. For e.g. same day store pick up not allowed if order is place after 4.00 PM), Location processing time range (Ship order takes 4 hours to 8 hours time for processing for this particular location), System processing time range (time required by the system to keep order on hold to allow cancel, edit etc), day wise working calendar for the fulfillment type (scenarios where you have to enable that Ship order are only allowed on Day1, Day3 and Day5 of the week).\r\nYou can also make a particular fulfillment type enable or disable for the organization."
      operationId: create_38
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillmentTypeDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FulfillmentTypeDetailResponse'
  /fulfillment-services/fulfillment-service:
    put:
      tags:
        - 1.1 - Master Data - Fulfillment Type and Service Configuration
      summary: Update Fulfillment Service Data
      description: This API will update the given Fulfillment Service. For more information on Fulfillment Service refer to the respective POST API notes.
      operationId: update_38
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillmentServiceDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FulfillmentServiceDetailResponse'
    post:
      tags:
        - 1.1 - Master Data - Fulfillment Type and Service Configuration
      summary: Create Fulfillment Service Data
      description: This API provides ability to define supported fulfillment services for an Organization. Along with the fulfillment service, you can also define Selling Channel (if the fulfillment service is applicable for specific selling channel), Cut off (order received after the cut off time will be processed next day for the defined fulfillment service. For e.g. same day shipping cut off 4.00 PM), day wise delivery calendar, day wise working calendar, day wise Transfer calendar, Transit time buffer, delivery buffer, distance limit (for e.g. same day shipping will be restricted within 75 miles), Time when the temporary disable will be enabled. You can also make a particular fulfillment service enable or disable for the location.
      operationId: create_39
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillmentServiceDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FulfillmentServiceDetailResponse'
  /fulfillment-services/fulfillment-service-fulfillment-type:
    put:
      tags:
        - 1.1 - Master Data - Fulfillment Type and Service Configuration
      summary: Update Fulfillment Service Association Data
      description: This API will update the given Fulfillment Service Association. For more information on  Fulfillment Service - Fulfillment Type refer to the respective POST API notes.
      operationId: update_39
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillmentServiceAssociationDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FulfillmentServiceAssociationDetailResponse'
    post:
      tags:
        - 1.1 - Master Data - Fulfillment Type and Service Configuration
      summary: Create Fulfillment Service Association Data
      description: |-
        This API provides ability to define supported fulfillment services for a fulfillment type. For example, Express is supported for Pick fulfillment type whereas Express, Ground, 2 day Ship is supported for Ship fulfillment type. You will define this at Organization and Selling Channel (optional) level. For  examples, Org = ABC Retail, Selling Channel  = Dot.com, fulfillment type = Ship, fulfillment service = Express.
        Org = ABC Retail, fulfillment type = Ship, fulfillment service = 2 day shipping.You can also make a particular configuration enable or disable by passing the enable flag = Y/N.
      operationId: create_40
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillmentServiceAssociationDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FulfillmentServiceAssociationDetailResponse'
  /dynamic-priority-services/location-type-dynamic-priority:
    put:
      tags:
        - 1.8 - Master Data - Dynamic Priority Configuration
      summary: Update Location Type Dynamic Priority Data
      description: This API will update the given Location Type Dynamic Priority definition.
      operationId: update_40
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationTypeDynamicPriorityDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LocationTypeDynamicPriorityDetailResponse'
    post:
      tags:
        - 1.8 - Master Data - Dynamic Priority Configuration
      summary: Create Location Type Dynamic Priority Data
      description: This API will create the given Location Type Dynamic Priority definition.
      operationId: create_41
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationTypeDynamicPriorityDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LocationTypeDynamicPriorityDetailResponse'
  /dynamic-priority-services/location-dynamic-priority:
    put:
      tags:
        - 1.8 - Master Data - Dynamic Priority Configuration
      summary: Update Location Dynamic Priority Data
      description: This API will update the given Location Dynamic Priority definition.
      operationId: update_41
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationDynamicPriorityDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LocationDynamicPriorityDetailResponse'
    post:
      tags:
        - 1.8 - Master Data - Dynamic Priority Configuration
      summary: Create Location Dynamic Priority Data
      description: This API will create the given Location Dynamic Priority definition.
      operationId: create_42
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationDynamicPriorityDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LocationDynamicPriorityDetailResponse'
  /configuration-hierarchy-services/configuration-hierarchy:
    put:
      tags:
        - 1.5 - Master Data - Configuration Hierarchy
      summary: Update Configuration Hierarchy Data
      description: This API will update the given Configuration Hierarchy. For more information on Configuration Hierarchy refer to the respective POST API notes.
      operationId: update_42
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationHierarchyDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfigurationHierarchyDetailResponse'
    post:
      tags:
        - 1.5 - Master Data - Configuration Hierarchy
      summary: Create Configuration Hierarchy Data
      description: This API provides the ability to define Hierarchies between different entities (tables in YSO predefined in an order) using different operation types ( ALL_TRUE, SEQUENCE, MIN and MAX). ALL_TRUE uses the join type AND and checks all predefined entities for true value, SEQUENCE uses the join type OR and checks for predefined entities untill non null values are found. MIN checks for minimum non null values in the predefined entities. MAX check for the max non null values in the predefined entities.
      operationId: create_43
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationHierarchyDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfigurationHierarchyDetailResponse'
  /calendar-services/calendar-definition:
    put:
      tags:
        - 1.6 - Master Data - Calendar Configuration
      summary: Update Calendar Data
      description: This API will update the given Calendar. For more information on Calendar refer to the respective POST API notes.
      operationId: update_43
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalendarDefinitionDetailRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CalendarDefinitionDetailResponse'
    post:
      tags:
        - 1.6 - Master Data - Calendar Configuration
      summary: Create Calendar Definition Data
      description: This API provides the ability to define a calendar by providing a unique organization id and calendar id.  Usually locale values are America/New_York or America/Chicago etc based on the the time zone of the organization. We also define the system hold time in this API.
      operationId: create_44
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalendarDefinitionDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CalendarDefinitionDetailResponse'
  /validation-config/replicate:
    post:
      tags:
        - 2.2 Validation Configuration
      operationId: updateReplicationEvent
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationConfigDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 2.2 Validation Configuration
      operationId: deleteReplicatedEvent
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationConfigDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /product-services/product/replicate:
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: updateReplicationEvent_1
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: deleteReplicatedEvent_1
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /product-services/product-supplier-association/replicate:
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: updateReplicationEvent_2
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSupplierAssociationDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: deleteReplicatedEvent_2
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSupplierAssociationDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /product-services/product-gtin/replicate:
    post:
      tags:
        - 1.4 - Admin - Product Gtin Configuration
      operationId: updateReplicationEvent_3
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GtinDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.4 - Admin - Product Gtin Configuration
      operationId: deleteReplicatedEvent_3
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GtinDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /product-services/product-fulfillment-type/replicate:
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: updateReplicationEvent_4
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductFulfillmentTypeDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: deleteReplicatedEvent_4
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductFulfillmentTypeDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /product-services/product-fulfillment-service/replicate:
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: updateReplicationEvent_5
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductFulfillmentServiceDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: deleteReplicatedEvent_5
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductFulfillmentServiceDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /product-services/product-class/replicate:
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: updateReplicationEvent_6
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductClassDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: deleteReplicatedEvent_6
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductClassDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /product-services/product-class-location-type-fulfillment-type/replicate:
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: updateReplicationEvent_7
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductClassLocationTypeFulfillmentTypeDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: deleteReplicatedEvent_7
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductClassLocationTypeFulfillmentTypeDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /product-services/product-class-location-type-fulfillment-service/replicate:
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: updateReplicationEvent_8
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductClassLocationTypeFulfillmentServiceDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: deleteReplicatedEvent_8
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductClassLocationTypeFulfillmentServiceDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /product-services/product-class-fulfillment-type/replicate:
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: updateReplicationEvent_9
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductClassFulfillmentTypeDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: deleteReplicatedEvent_9
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductClassFulfillmentTypeDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /product-services/product-class-fulfillment-service/replicate:
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: updateReplicationEvent_10
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductClassFulfillmentServiceDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: deleteReplicatedEvent_10
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductClassFulfillmentServiceDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /product-services/product-class-category-transpose:
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Create Product Class Category Transpose Data
      description: This API allows to define Product Class Category Transpose for an organization. Product can be associated with Product Class and Product category. An unit of measure can also be defined for the Product Id.
      operationId: create_11
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductClassCategoryTransposeDetailRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductClassCategoryTransposeDetailResponse'
  /product-services/product-class-category-transpose/replicate:
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: updateReplicationEvent_11
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductClassCategoryTransposeDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: deleteReplicatedEvent_11
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductClassCategoryTransposeDetail'
        required: true
      responses:
        '200':
          description: OK
  /product-services/product-category/replicate:
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: updateReplicationEvent_12
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategoryDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: deleteReplicatedEvent_12
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategoryDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /product-services/product-category-location-type-fulfillment-type/replicate:
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: updateReplicationEvent_13
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategoryLocationTypeFulfillmentTypeDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: deleteReplicatedEvent_13
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategoryLocationTypeFulfillmentTypeDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /product-services/product-category-location-type-fulfillment-service/replicate:
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: updateReplicationEvent_14
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategoryLocationTypeFulfillmentServiceDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: deleteReplicatedEvent_14
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategoryLocationTypeFulfillmentServiceDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /product-services/product-category-fulfillment-type/replicate:
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: updateReplicationEvent_15
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategoryFulfillmentTypeDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: deleteReplicatedEvent_15
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategoryFulfillmentTypeDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /product-services/product-category-fulfillment-service/replicate:
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: updateReplicationEvent_16
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategoryFulfillmentServiceDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: deleteReplicatedEvent_16
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategoryFulfillmentServiceDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /product-location-services/product-location-type-fulfillment-type/replicate:
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: updateReplicationEvent_17
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductLocationTypeFulfillmentTypeDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: deleteReplicatedEvent_17
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductLocationTypeFulfillmentTypeDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /product-location-services/product-location-type-fulfillment-service/replicate:
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: updateReplicationEvent_18
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductLocationTypeFulfillmentServiceDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: deleteReplicatedEvent_18
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductLocationTypeFulfillmentServiceDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /product-location-services/product-location-fulfillment-type/replicate:
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: updateReplicationEvent_19
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductLocationFulfillmentTypeDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: deleteReplicatedEvent_19
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductLocationFulfillmentTypeDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /product-location-services/product-location-fulfillment-service/replicate:
    post:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: updateReplicationEvent_20
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductLocationFulfillmentServiceDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      operationId: deleteReplicatedEvent_20
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductLocationFulfillmentServiceDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /organization-services/org/replicate:
    post:
      tags:
        - 1.3 - Master Data - Organization Configuration
      operationId: updateReplicationEvent_21
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.3 - Master Data - Organization Configuration
      operationId: deleteReplicatedEvent_21
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /organization-services/org-selling-channel/replicate:
    post:
      tags:
        - 1.3 - Master Data - Organization Configuration
      operationId: updateReplicationEvent_22
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgSellingChannelDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.3 - Master Data - Organization Configuration
      operationId: deleteReplicatedEvent_22
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrgSellingChannelDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /location-services/location/replicate:
    post:
      tags:
        - 1.2 - Master Data - Location Configuration
      operationId: updateReplicationEvent_23
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.2 - Master Data - Location Configuration
      operationId: deleteReplicatedEvent_23
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /location-services/location/disable/{orgId}/{locationType}/{locationId}:
    post:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Update Temporary Disable Expiration Date
      description: This API will update the given Location. For more information on Location refer to the respective POST API notes.
      operationId: temporaryDisable
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemporaryDisableExpirationTimeRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationDetailResponse'
  /location-services/location-type/replicate:
    post:
      tags:
        - 1.2 - Master Data - Location Configuration
      operationId: updateReplicationEvent_24
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationTypeDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.2 - Master Data - Location Configuration
      operationId: deleteReplicatedEvent_24
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationTypeDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /location-services/location-type/disable/{orgId}/{locationType}/{sellingChannel}:
    post:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Update Temporary Disable Expiration Date
      description: This API will temporarily disable the given Location Type.
      operationId: temporaryDisable_1
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemporaryDisableExpirationTimeRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationTypeDetailResponse'
  /location-services/location-type-fulfillment-type/replicate:
    post:
      tags:
        - 1.2 - Master Data - Location Configuration
      operationId: updateReplicationEvent_25
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationTypeAndFulfillmentTypeDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.2 - Master Data - Location Configuration
      operationId: deleteReplicatedEvent_25
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationTypeAndFulfillmentTypeDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /location-services/location-type-fulfillment-type/disable/{orgId}/{locationType}/{sellingChannel}/{fulfillmentType}:
    post:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Update Temporary Disable Expiration Date
      description: This API will temporarily disable the given Location Type Fulfillment Type.
      operationId: temporaryDisable_2
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemporaryDisableExpirationTimeRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationTypeAndFulfillmentTypeDetailResponse'
  /location-services/location-type-fulfillment-service/replicate:
    post:
      tags:
        - 1.2 - Master Data - Location Configuration
      operationId: updateReplicationEvent_26
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationTypeAndFulfillmentServiceDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.2 - Master Data - Location Configuration
      operationId: deleteReplicatedEvent_26
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationTypeAndFulfillmentServiceDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /location-services/location-type-fulfillment-service/disable/{orgId}/{locationType}/{sellingChannel}/{fulfillmentService}:
    post:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Update Temporary Disable Expiration Date
      description: This API will temporarily disable the given Location Type Fulfillment Service.
      operationId: temporaryDisable_3
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemporaryDisableExpirationTimeRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationTypeAndFulfillmentServiceDetailResponse'
  /location-services/location-type-capacity-cost/replicate:
    post:
      tags:
        - 1.2 - Master Data - Location Type Capacity Cost Configuration
      operationId: updateReplicationEvent_27
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationTypeCapacityCostDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.2 - Master Data - Location Type Capacity Cost Configuration
      operationId: deleteReplicatedEvent_27
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationTypeCapacityCostDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /location-services/location-fulfillment-type/replicate:
    post:
      tags:
        - 1.2 - Master Data - Location Configuration
      operationId: updateReplicationEvent_28
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationAndFulfillmentTypeDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.2 - Master Data - Location Configuration
      operationId: deleteReplicatedEvent_28
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationAndFulfillmentTypeDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /location-services/location-fulfillment-type/disable/{orgId}/{locationType}/{locationId}/{sellingChannel}/{fulfillmentType}:
    post:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Update Temporary Disable Expiration Date
      description: This API will temporarily disable the given Location Fulfillment Type.
      operationId: temporaryDisable_4
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemporaryDisableExpirationTimeRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationAndFulfillmentTypeDetailResponse'
  /location-services/location-fulfillment-service/replicate:
    post:
      tags:
        - 1.2 - Master Data - Location Configuration
      operationId: updateReplicationEvent_29
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationAndFulfillmentServiceDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.2 - Master Data - Location Configuration
      operationId: deleteReplicatedEvent_29
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationAndFulfillmentServiceDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /location-services/location-fulfillment-service/disable/{orgId}/{locationType}/{locationId}/{sellingChannel}/{fulfillmentService}:
    post:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Update Temporary Disable Expiration Date
      description: This API will temporarily disable the given Location Fulfillment Service.
      operationId: temporaryDisable_5
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemporaryDisableExpirationTimeRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationAndFulfillmentServiceDetailResponse'
  /location-services/location-capacity-cost/replicate:
    post:
      tags:
        - 1.2 - Master Data - Location Capacity Cost Configuration
      operationId: updateReplicationEvent_30
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationCapacityCostDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.2 - Master Data - Location Capacity Cost Configuration
      operationId: deleteReplicatedEvent_30
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationCapacityCostDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /kafka-rest-services:
    post:
      tags:
        - 1.7 - Kafka Rest Proxy
      summary: Produce to Kafka Topic
      description: This API is to produce message to given kafka topic.
      operationId: publishRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KafkaRestProxyRequest'
        required: true
      responses:
        '200':
          description: OK
  /kafka-rest-services/{topic}:
    post:
      tags:
        - 1.7 - Kafka Rest Proxy
      summary: Produce to Kafka Topic(Only value) with publish operation as CREATE
      description: This API is to produce message to given kafka topic.
      operationId: publishWithoutKey
      parameters:
        - name: topic
          in: path
          description: Kafka topic name.
          required: true
          schema:
            type: string
          example: product
        - name: isFullyQualifiedTopicName
          in: query
          description: Is Kafka topic name fully qualified?
          required: false
          schema:
            type: boolean
            default: false
          example: false
      requestBody:
        content:
          application/json:
            schema:
              type: string
              description: Value to publish
        required: true
      responses:
        '200':
          description: OK
  /kafka-rest-services/{topic}/{key}:
    post:
      tags:
        - 1.7 - Kafka Rest Proxy
      summary: Produce to Kafka Topic(Key or Value)
      description: This API is to produce message to given kafka topic.
      operationId: publishWithKey
      parameters:
        - name: topic
          in: path
          description: Kafka topic name.
          required: true
          schema:
            type: string
          example: product
        - name: key
          in: path
          description: Key to publish
          required: true
          schema:
            type: string
          example:
            orgId: ORG001
            productId: '1266009'
            uom: EACH
        - name: operation
          in: query
          description: Publish Operation(Create/Delete/Patch)
          required: false
          schema:
            type: string
            enum:
              - CREATE
              - UPDATE
              - DELETE
              - RELOAD
              - EVICT
              - UPDATE_TRANSIENT
              - PATCH
              - UPDATE_OR_CREATE
              - CLEAR_ALL
          example: DELETE
        - name: isFullyQualifiedTopicName
          in: query
          description: Is Kafka topic name fully qualified?
          required: false
          schema:
            type: boolean
            default: false
          example: false
      requestBody:
        content:
          application/json:
            schema:
              type: string
              description: Value to publish
      responses:
        '200':
          description: OK
  /kafka-rest-services/batch:
    post:
      tags:
        - 1.7 - Kafka Rest Proxy
      summary: Produce to Kafka Topic with a batch of messages, each message can be sent to different topic
      description: This API is to produce message to given kafka topic.
      operationId: publishRequest_1
      requestBody:
        content:
          application/json:
            schema:
              maxItems: 50
              minItems: 1
              type: array
              description: Request contain Kafka message information.
              items:
                $ref: '#/components/schemas/KafkaRestProxyRequest'
        required: true
      responses:
        '200':
          description: OK
  /kafka-rest-services/batch/{topic}:
    post:
      tags:
        - 1.7 - Kafka Rest Proxy
      summary: 'Produce to Kafka Topic with a batch of messages , All messages go to same topic '
      description: This API is to produce message to given kafka topic.
      operationId: publishRequest_2
      parameters:
        - name: topic
          in: path
          description: Kafka topic name.
          required: true
          schema:
            type: string
          example: product
        - name: isFullyQualifiedTopicName
          in: query
          description: Is Kafka topic name fully qualified?
          required: false
          schema:
            type: boolean
            default: false
          example: false
      requestBody:
        content:
          application/json:
            schema:
              maxItems: 50
              minItems: 1
              type: array
              description: Request contain Kafka message information.
              items:
                $ref: '#/components/schemas/KafkaRequest'
        required: true
      responses:
        '200':
          description: OK
  /item-association-substitution-services/item-association-substitution/substitution-type/replicate:
    post:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      operationId: updateReplicationEvent_31
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemAssociationSubstitutionTypeDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      operationId: deleteReplicatedEvent_31
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemAssociationSubstitutionTypeDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /item-association-substitution-services/item-association-substitution/replicate:
    post:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      operationId: updateReplicationEvent_32
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemAssociationSubstitutionDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      operationId: deleteReplicatedEvent_32
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemAssociationSubstitutionDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /item-association-group-services/item-association-group/replicate:
    post:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      operationId: updateReplicationEvent_33
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemAssociationGroupDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      operationId: deleteReplicatedEvent_33
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemAssociationGroupDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /item-association-bundle-services/item-association-bundle/replicate:
    post:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      operationId: updateReplicationEvent_34
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemAssociationBundleDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      operationId: deleteReplicatedEvent_34
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemAssociationBundleDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /item-association-alias-services/item-association-alias/replicate:
    post:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      operationId: updateReplicationEvent_35
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemAssociationAliasDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      operationId: deleteReplicatedEvent_35
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemAssociationAliasDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /item-association-alias-services/item-association-alias-transpose/replicate:
    post:
      tags:
        - 1.9 - Admin Data - Item Association Configuration
      operationId: updateReplicationEvent_36
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemAssociationAliasTransposeDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.9 - Admin Data - Item Association Configuration
      operationId: deleteReplicatedEvent_36
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemAssociationAliasTransposeDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /fulfillment-services/fulfillment-type/replicate:
    post:
      tags:
        - 1.1 - Master Data - Fulfillment Type and Service Configuration
      operationId: updateReplicationEvent_37
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillmentTypeDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.1 - Master Data - Fulfillment Type and Service Configuration
      operationId: deleteReplicatedEvent_37
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillmentTypeDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /fulfillment-services/fulfillment-type/disable/{orgId}/{sellingChannel}/{fulfillmentType}:
    post:
      tags:
        - 1.1 - Master Data - Fulfillment Type and Service Configuration
      summary: Update Temporary Disable Expiration Date
      description: This API will temporarily disable the given Fulfillment Type.
      operationId: temporaryDisable_6
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemporaryDisableExpirationTimeRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentTypeDetailResponse'
  /fulfillment-services/fulfillment-service/replicate:
    post:
      tags:
        - 1.1 - Master Data - Fulfillment Type and Service Configuration
      operationId: updateReplicationEvent_38
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillmentServiceDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.1 - Master Data - Fulfillment Type and Service Configuration
      operationId: deleteReplicatedEvent_38
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillmentServiceDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /fulfillment-services/fulfillment-service/disable/{orgId}/{sellingChannel}/{fulfillmentService}:
    post:
      tags:
        - 1.1 - Master Data - Fulfillment Type and Service Configuration
      summary: Update Temporary Disable Expiration Date
      description: This API will temporarily disable the given Fulfillment Service.
      operationId: temporaryDisable_7
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemporaryDisableExpirationTimeRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentServiceDetailResponse'
  /fulfillment-services/fulfillment-service-fulfillment-type/replicate:
    post:
      tags:
        - 1.1 - Master Data - Fulfillment Type and Service Configuration
      operationId: updateReplicationEvent_39
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillmentServiceAssociationDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.1 - Master Data - Fulfillment Type and Service Configuration
      operationId: deleteReplicatedEvent_39
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FulfillmentServiceAssociationDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /dynamic-priority-services/location-type-dynamic-priority/replicate:
    post:
      tags:
        - 1.8 - Master Data - Dynamic Priority Configuration
      operationId: updateReplicationEvent_40
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationTypeDynamicPriorityDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.8 - Master Data - Dynamic Priority Configuration
      operationId: deleteReplicatedEvent_40
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationTypeDynamicPriorityDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /dynamic-priority-services/location-dynamic-priority/replicate:
    post:
      tags:
        - 1.8 - Master Data - Dynamic Priority Configuration
      operationId: updateReplicationEvent_41
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationDynamicPriorityDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.8 - Master Data - Dynamic Priority Configuration
      operationId: deleteReplicatedEvent_41
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationDynamicPriorityDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /configuration-hierarchy-services/configuration-hierarchy/replicate:
    post:
      tags:
        - 1.5 - Master Data - Configuration Hierarchy
      operationId: updateReplicationEvent_42
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationHierarchyDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.5 - Master Data - Configuration Hierarchy
      operationId: deleteReplicatedEvent_42
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationHierarchyDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /calendar-services/calendar-definition/replicate:
    post:
      tags:
        - 1.6 - Master Data - Calendar Configuration
      operationId: updateReplicationEvent_43
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalendarDefinitionDetail'
        required: true
      responses:
        '200':
          description: OK
    delete:
      tags:
        - 1.6 - Master Data - Calendar Configuration
      operationId: deleteReplicatedEvent_43
      parameters:
        - name: publishTime
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: isMigration
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalendarDefinitionDetailKey'
        required: true
      responses:
        '200':
          description: OK
  /cache-load-service/stop/{tableName}:
    post:
      tags:
        - 2.1 - Cache Load Service
      summary: Stop Cache Load of given table
      operationId: stopCacheLoad
      parameters:
        - name: tableName
          in: path
          required: true
          schema:
            type: string
          example: PRODUCT
      responses:
        '200':
          description: OK
  /cache-load-service/start/{tableName}:
    post:
      tags:
        - 2.1 - Cache Load Service
      summary: Start Cache Load of given table and for a given orgId
      operationId: startCacheLoad
      parameters:
        - name: orgId
          in: query
          description: starts cache loads for all the orgIds in list
          required: false
          schema:
            type: array
            items:
              type: string
          example: orgId1,orgId2
        - name: tableName
          in: path
          required: true
          schema:
            type: string
          example: PRODUCT
      responses:
        '200':
          description: OK
  /backup-load-service/stop/{tableName}/{backupId}:
    post:
      tags:
        - 3.1 - Backup Load Service
      summary: Stop Backup Load of given table
      operationId: stopBackupLoad
      parameters:
        - name: tableName
          in: path
          required: true
          schema:
            type: string
          example: PRODUCT
        - name: backupId
          in: path
          required: true
          schema:
            type: string
          example: abc-abc
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BackupLoadResponse'
  /backup-load-service/start/{tableName}:
    post:
      tags:
        - 3.1 - Backup Load Service
      summary: Start Backup Load of given table and for a given orgId
      operationId: startBackupLoad
      parameters:
        - name: orgId
          in: query
          description: starts backup loads for all the orgIds in list
          required: false
          schema:
            type: array
            items:
              type: string
          example: orgId1,orgId2
        - name: tableName
          in: path
          required: true
          schema:
            type: string
          example: PRODUCT
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BackupLoadResponse'
  /backup-load-service/start/tokens:
    post:
      tags:
        - 3.1 - Backup Load Service
      summary: start backup with provided tokens
      operationId: getBackupTokenStatus
      parameters:
        - name: orgId
          in: query
          description: starts backup loads for all the orgIds in list
          required: false
          schema:
            type: array
            items:
              type: string
          example: orgId1,orgId2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupLoadTokenRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BackupLoadResponse'
  /product-services/product/{orgId}/{productId}/{uom}:
    get:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Read Product Data
      description: This API will return the given Product. For more information on Product refer to the respective POST API notes.
      operationId: read_1
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetailResponse'
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Delete Product Data
      description: This API will delete the given Product. For more information on Product refer to the respective POST API notes.
      operationId: delete_1
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Patch Product Data
      description: This API will incrementally update the given Product. For more information on Product refer to the respective POST API notes.
      operationId: patch
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDetailResponse'
  /product-services/product-supplier-association/{orgId}/{productId}/{uom}/{locationId}/{locationType}:
    get:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Read Product Supplier Association Data
      description: This API will return the given Product Supplier Association attributes. For more information on Product Supplier Association refer to the respective POST API notes.
      operationId: read_2
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSupplierAssociationDetailResponse'
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Delete Product Supplier Association Data
      description: This API will delete the given Product Supplier Association attributes. For more information on Product Supplier Association refer to the respective POST API notes.
      operationId: delete_2
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Patch Product Supplier Association Data
      description: This API will incrementally update the given Product Supplier Association attributes. For more information on Product Supplier Association refer to the respective POST API notes.
      operationId: patch_1
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSupplierAssociationDetailResponse'
  /product-services/product-gtin/{orgId}/{gtin}:
    get:
      tags:
        - 1.4 - Admin - Product Gtin Configuration
      summary: Read Product Gtin Data
      description: This API will return list of products, that are associated with the Gtin
      operationId: read_3
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: gtin
          in: path
          required: true
          schema:
            type: string
          example: 12345678
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductGtinDetailResponse'
    delete:
      tags:
        - 1.4 - Admin - Product Gtin Configuration
      summary: Delete Gtin Data
      description: This Admin API will delete the Gtin.
      operationId: delete_3
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: gtin
          in: path
          required: true
          schema:
            type: string
          example: 12345678
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.4 - Admin - Product Gtin Configuration
      summary: Patch Product Gtin Data
      description: This API will incrementally update the association between GTIN and products.This is not the master API for updating the association and must be used only to correct the mismatch/error.
      operationId: patch_2
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: gtin
          in: path
          required: true
          schema:
            type: string
          example: 12345678
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductGtinDetailResponse'
  /product-services/product-fulfillment-type/{orgId}/{productId}/{uom}/{sellingChannel}/{fulfillmentType}:
    get:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Read Product-Fulfillment Type Data
      description: This API will return the given Product-Fulfillment Type. For more information on Product-Fulfillment Type refer to the respective POST API notes.
      operationId: read_4
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFulfillmentTypeDetailResponse'
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Delete Product-Fulfillment Type Data
      description: This API will delete the given Product-Fulfillment Type. For more information on Product-Fulfillment Type refer to the respective POST API notes.
      operationId: delete_4
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Patch Product-Fulfillment Type Data
      description: This API will incrementally update the given Product-Fulfillment Type. For more information on Product-Fulfillment Type refer to the respective POST API notes.
      operationId: patch_3
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFulfillmentTypeDetailResponse'
  /product-services/product-fulfillment-service/{orgId}/{productId}/{uom}/{sellingChannel}/{fulfillmentService}:
    get:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Read Product-Fulfillment Service Data
      description: This API will return the given Product-Fulfillment Service. For more information on Product-Fulfillment Service refer to the respective POST API notes.
      operationId: read_5
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFulfillmentServiceDetailResponse'
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Delete Product-Fulfillment Service Data
      description: This API will delete the given Product-Fulfillment Service. For more information on Product-Fulfillment Service refer to the respective POST API notes.
      operationId: delete_5
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Patch Product-Fulfillment Service Data
      description: This API will incrementally update the given Product-Fulfillment Service. For more information on Product-Fulfillment Service refer to the respective POST API notes.
      operationId: patch_4
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductFulfillmentServiceDetailResponse'
  /product-services/product-class/{orgId}/{sellingChannel}/{productClass}:
    get:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Read Product Class Data
      description: This API will return the given Product Class. For more information on Product Class refer to the respective POST API notes.
      operationId: read_6
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: productClass
          in: path
          required: true
          schema:
            type: string
          example: Electronics
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductClassDetailResponse'
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Delete Product Class Data
      description: This API will delete the given Product Class. For more information on Product Class refer to the respective POST API notes.
      operationId: delete_6
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: productClass
          in: path
          required: true
          schema:
            type: string
          example: Electronics
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Patch Product Class Data
      description: This API will incrementally update the given Product Class. For more information on Product Class refer to the respective POST API notes.
      operationId: patch_5
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: productClass
          in: path
          required: true
          schema:
            type: string
          example: Electronics
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductClassDetailResponse'
  /product-services/product-class-location-type-fulfillment-type/{orgId}/{productClass}/{sellingChannel}/{locationType}/{fulfillmentType}:
    get:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Read Product Class-Location Type Fulfillment Type Data
      description: This API will return the given Product Class-Location Type Fulfillment Type. For more information on Product-Class-Location-Type-Fulfillment-Type refer to the respective POST API notes.
      operationId: read_7
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productClass
          in: path
          required: true
          schema:
            type: string
          example: Electronics
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductClassLocationTypeFulfillmentTypeDetailResponse'
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Delete Product Class-Location Type Fulfillment Type Data
      description: This API will delete the given Product Class-Location Type Fulfillment Type. For more information on Product-Class-Location-Type-Fulfillment-Type refer to the respective POST API notes.
      operationId: delete_7
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productClass
          in: path
          required: true
          schema:
            type: string
          example: Electronics
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Patch Product Class-Location Type Fulfillment Type Data
      description: This API will incrementally update the given Product Class-Location Type Fulfillment Type. For more information on Product-Class-Location-Type-Fulfillment-Type refer to the respective POST API notes.
      operationId: patch_6
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productClass
          in: path
          required: true
          schema:
            type: string
          example: Electronics
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductClassLocationTypeFulfillmentTypeDetailResponse'
  /product-services/product-class-location-type-fulfillment-service/{orgId}/{productClass}/{sellingChannel}/{locationType}/{fulfillmentService}:
    get:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Read Product Class-Location Type Fulfillment Service Data
      description: This API will return the given Product Class-Location Type Fulfillment Service. For more information on Product-Class-Location-Type-Fulfillment-Service refer to the respective POST API notes.
      operationId: read_8
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productClass
          in: path
          required: true
          schema:
            type: string
          example: Electronics
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductClassLocationTypeFulfillmentServiceDetailResponse'
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Delete Product Class-Location Type Fulfillment Service Data
      description: This API will delete the given Product Class-Location Type Fulfillment Service. For more information on Product-Class-Location-Type-Fulfillment-Service refer to the respective POST API notes.
      operationId: delete_8
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productClass
          in: path
          required: true
          schema:
            type: string
          example: Electronics
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Patch Product Class-Location Type Fulfillment Service Data
      description: This API will incrementally update the given Product Class-Location Type Fulfillment Service. For more information on Product-Class-Location-Type-Fulfillment-Service refer to the respective POST API notes.
      operationId: patch_7
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productClass
          in: path
          required: true
          schema:
            type: string
          example: Electronics
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductClassLocationTypeFulfillmentServiceDetailResponse'
  /product-services/product-class-fulfillment-type/{orgId}/{productClass}/{sellingChannel}/{fulfillmentType}:
    get:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Read Product Class-Fulfillment Type Data
      description: This API will return the given Product Class-Fulfillment Type. For more information on Product Class-Fulfillment Type refer to the respective POST API notes.
      operationId: read_9
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productClass
          in: path
          required: true
          schema:
            type: string
          example: Electronics
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductClassFulfillmentTypeDetailResponse'
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Delete Product Class-Fulfillment Type Data
      description: This API will delete the given Product Class-Fulfillment Type. For more information on Product Class-Fulfillment Type refer to the respective POST API notes.
      operationId: delete_9
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productClass
          in: path
          required: true
          schema:
            type: string
          example: Electronics
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Patch Product Class-Fulfillment Type Data
      description: This API will incrementally update the given Product Class-Fulfillment Type. For more information on Product Class-Fulfillment Type refer to the respective POST API notes.
      operationId: patch_8
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productClass
          in: path
          required: true
          schema:
            type: string
          example: Electronics
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductClassFulfillmentTypeDetailResponse'
  /product-services/product-class-fulfillment-service/{orgId}/{productClass}/{sellingChannel}/{fulfillmentService}:
    get:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Read Product Class-Fulfillment Service Data
      description: This API will return the given Product Class-Fulfillment Service. For more information on Product Class-Fulfillment Service refer to the respective POST API notes.
      operationId: read_10
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productClass
          in: path
          required: true
          schema:
            type: string
          example: Electronics
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductClassFulfillmentServiceDetailResponse'
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Delete Product Class-Fulfillment Service Data
      description: This API will delete the given Product Class-Fulfillment Service. For more information on Product Class-Fulfillment Service refer to the respective POST API notes.
      operationId: delete_10
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productClass
          in: path
          required: true
          schema:
            type: string
          example: Electronics
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Patch Product Class-Fulfillment Service Data
      description: This API will incrementally update the given Product Class-Fulfillment Service. For more information on Product Class-Fulfillment Service refer to the respective POST API notes.
      operationId: patch_9
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productClass
          in: path
          required: true
          schema:
            type: string
          example: Electronics
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductClassFulfillmentServiceDetailResponse'
  /product-services/product-category/{orgId}/{productCategory}/{productClass}/{sellingChannel}:
    get:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Read Product Category Data
      description: This API will return the given Product Category. For more information on Product Category refer to the respective POST API notes.
      operationId: read_14
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productCategory
          in: path
          required: true
          schema:
            type: string
          example: Camera
        - name: productClass
          in: path
          required: true
          schema:
            type: string
          example: Electronics
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategoryDetailResponse'
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Delete Product Category Data
      description: This API will delete the given Product Category. For more information on Product Category refer to the respective POST API notes.
      operationId: delete_12
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productCategory
          in: path
          required: true
          schema:
            type: string
          example: Camera
        - name: productClass
          in: path
          required: true
          schema:
            type: string
          example: Electronics
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Patch Product Category Data
      description: This API will incrementally update the given Product Category. For more information on Product Category refer to the respective POST API notes.
      operationId: patch_10
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productCategory
          in: path
          required: true
          schema:
            type: string
          example: Camera
        - name: productClass
          in: path
          required: true
          schema:
            type: string
          example: Electronics
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategoryDetailResponse'
  /product-services/product-category-location-type-fulfillment-type/{orgId}/{productCategory}/{sellingChannel}/{locationType}/{fulfillmentType}:
    get:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Read Product Category-Location Type Fulfillment Type Data
      description: This API will return the given Product Category-Location Type Fulfillment Type. For more information on Product-Category-Location-Type-Fulfillment-Type refer to the respective POST API notes.
      operationId: read_15
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productCategory
          in: path
          required: true
          schema:
            type: string
          example: Camera
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategoryLocationTypeFulfillmentTypeDetailResponse'
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Delete Product Category-Location Type Fulfillment Type Data
      description: This API will delete the given Product Category-Location Type Fulfillment Type. For more information on Product Category-Location-Type-Fulfillment-Type refer to the respective POST API notes.
      operationId: delete_13
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productCategory
          in: path
          required: true
          schema:
            type: string
          example: Camera
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Patch Product Category-Location Type Fulfillment Type Data
      description: This API will incrementally update the given Product Category-Location Type Fulfillment Type. For more information on Product-Category-Location-Type-Fulfillment-Type refer to the respective POST API notes.
      operationId: patch_11
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productCategory
          in: path
          required: true
          schema:
            type: string
          example: Camera
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategoryLocationTypeFulfillmentTypeDetailResponse'
  /product-services/product-category-location-type-fulfillment-service/{orgId}/{productCategory}/{sellingChannel}/{locationType}/{fulfillmentService}:
    get:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Read Product Category-Location Type Fulfillment Service Data
      description: This API will return the given Product Category-Location Type Fulfillment Service. For more information on Product-Category-Location-Type-Fulfillment-Service refer to the respective POST API notes.
      operationId: read_16
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productCategory
          in: path
          required: true
          schema:
            type: string
          example: Camera
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategoryLocationTypeFulfillmentServiceDetailResponse'
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Delete Product Category-Location Type Fulfillment Service Data
      description: This API will delete the given Product Category-Location Type Fulfillment Service. For more information on Product Category-Location-Type-Fulfillment-Service refer to the respective POST API notes.
      operationId: delete_14
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productCategory
          in: path
          required: true
          schema:
            type: string
          example: Camera
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Patch Product Category-Location Type Fulfillment Service Data
      description: This API will incrementally update the given Product Category-Location Type Fulfillment Service. For more information on Product-Category-Location-Type-Fulfillment-Service refer to the respective POST API notes.
      operationId: patch_12
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productCategory
          in: path
          required: true
          schema:
            type: string
          example: Camera
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategoryLocationTypeFulfillmentServiceDetailResponse'
  /product-services/product-category-fulfillment-type/{orgId}/{productCategory}/{sellingChannel}/{fulfillmentType}:
    get:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Read Product Category-Fulfillment Type Data
      description: This API will return the given Product Category-Fulfillment Type. For more information on Product Category-Fulfillment Type refer to the respective POST API notes.
      operationId: read_17
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productCategory
          in: path
          required: true
          schema:
            type: string
          example: Camera
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategoryFulfillmentTypeDetailResponse'
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Delete Product Category-Fulfillment Type Data
      description: This API will delete the given Product Category-Fulfillment Type. For more information on Product Category-Fulfillment Type refer to the respective POST API notes.
      operationId: delete_15
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productCategory
          in: path
          required: true
          schema:
            type: string
          example: Camera
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Patch Product Category-Fulfillment Type Data
      description: This API will incrementally update the given Product Category-Fulfillment Type. For more information on Product Category-Fulfillment Type refer to the respective POST API notes.
      operationId: patch_13
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productCategory
          in: path
          required: true
          schema:
            type: string
          example: Camera
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategoryFulfillmentTypeDetailResponse'
  /product-services/product-category-fulfillment-service/{orgId}/{productCategory}/{sellingChannel}/{fulfillmentService}:
    get:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Read Product Category-Fulfillment Service Data
      description: This API will return the given Product Category-Fulfillment Service. For more information on Product Category-Fulfillment Service refer to the respective POST API notes.
      operationId: read_18
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productCategory
          in: path
          required: true
          schema:
            type: string
          example: Camera
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategoryFulfillmentServiceDetailResponse'
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Delete Product Category-Fulfillment Service Data
      description: This API will delete the given Product Category-Fulfillment Service. For more information on Product Category-Fulfillment Service refer to the respective POST API notes.
      operationId: delete_16
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productCategory
          in: path
          required: true
          schema:
            type: string
          example: Camera
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Patch Product Category-Fulfillment Service Data
      description: This API will incrementally update the given Product Category-Fulfillment Service. For more information on Product Category-Fulfillment Service refer to the respective POST API notes.
      operationId: patch_14
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productCategory
          in: path
          required: true
          schema:
            type: string
          example: Camera
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategoryFulfillmentServiceDetailResponse'
  /product-location-services/product-location-type-fulfillment-type/{orgId}/{productId}/{uom}/{sellingChannel}/{locationType}/{fulfillmentType}:
    get:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Read Product-Location Type Fulfillment Type Data
      description: This API will return the given Product-Location Type Fulfillment Type. For more information on Product-Location-Type-Fulfillment Type refer to the respective POST API notes.
      operationId: read_19
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductLocationTypeFulfillmentTypeDetailResponse'
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Delete Product-Location Type Fulfillment Type Data
      description: This API will delete the given Product-Location Type Fulfillment Type. For more information on Product-Location-Type-Fulfillment Type refer to the respective POST API notes.
      operationId: delete_17
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Patch Product-Location Type Fulfillment Type Data
      description: This API will incrementally update the given Product-Location Type Fulfillment Type. For more information on Product-Location-Type-Fulfillment Type refer to the respective POST API notes.
      operationId: patch_15
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductLocationTypeFulfillmentTypeDetailResponse'
  /product-location-services/product-location-type-fulfillment-service/{orgId}/{productId}/{uom}/{sellingChannel}/{locationType}/{fulfillmentService}:
    get:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Read Product-Location Type Fulfillment Service Data
      description: This API will return the given Product-Location Type Fulfillment Service. For more information on Product-Location-Type-Fulfillment Service refer to the respective POST API notes.
      operationId: read_20
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductLocationTypeFulfillmentServiceDetailResponse'
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Delete Product-Location Type Fulfillment Service Data
      description: This API will delete the given Product-Location Type Fulfillment Service. For more information on Product-Location-Type-Fulfillment Service refer to the respective POST API notes.
      operationId: delete_18
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Patch Product-Location Type Fulfillment Service Data
      description: This API will incrementally update the given Product-Location Type Fulfillment Service. For more information on Product-Location-Type-Fulfillment Service refer to the respective POST API notes.
      operationId: patch_16
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductLocationTypeFulfillmentServiceDetailResponse'
  /product-location-services/product-location-fulfillment-type/{orgId}/{productId}/{uom}/{locationType}/{locationId}/{sellingChannel}/{fulfillmentType}:
    get:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Read Product Location-Fulfillment Type Data
      description: This API will return the given Product Location-Fulfillment Type. For more information on Product Location-Fulfillment Type refer to the respective POST API notes.
      operationId: read_21
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductLocationFulfillmentTypeDetailResponse'
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Delete Product Location-Fulfillment Type Data
      description: This API will delete the given Product Location-Fulfillment Type. For more information on Product Location-Fulfillment Type refer to the respective POST API notes.
      operationId: delete_19
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Patch Product Location-Fulfillment Type Data
      description: This API will incrementally update the given Product Location-Fulfillment Type. For more information on Product Location-Fulfillment Type refer to the respective POST API notes.
      operationId: patch_17
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductLocationFulfillmentTypeDetailResponse'
  /product-location-services/product-location-fulfillment-service/{orgId}/{productId}/{uom}/{locationType}/{locationId}/{sellingChannel}/{fulfillmentService}:
    get:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Read Product Location-Fulfillment Service Data
      description: This API will return the given Product Location-Fulfillment Service. For more information on Product Location-Fulfillment Service refer to the respective POST API notes.
      operationId: read_22
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductLocationFulfillmentServiceDetailResponse'
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Delete Product Location-Fulfillment Service Data
      description: This API will delete the given Product Location-Fulfillment Service. For more information on Product Location-Fulfillment Service refer to the respective POST API notes.
      operationId: delete_20
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Patch Product Location-Fulfillment Service Data
      description: This API will incrementally update the given Product Location-Fulfillment Service. For more information on Product Location-Fulfillment Service refer to the respective POST API notes.
      operationId: patch_18
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductLocationFulfillmentServiceDetailResponse'
  /organization-services/org/{orgId}:
    get:
      tags:
        - 1.3 - Master Data - Organization Configuration
      summary: Read Org Data
      description: This API will return the given Organization. For more information on Organization refer to the respective POST API notes.
      operationId: read_24
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgDetailResponse'
    delete:
      tags:
        - 1.3 - Master Data - Organization Configuration
      summary: Delete Org Data
      description: This API will delete the given Organization. For more information on Organization refer to the respective POST API notes.
      operationId: delete_22
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.3 - Master Data - Organization Configuration
      summary: Patch Org Data
      description: This API will incrementally update the given Organization. For more information on Organization refer to the respective POST API notes.
      operationId: patch_19
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgDetailResponse'
  /organization-services/org-selling-channel/{orgId}/{sellingChannel}:
    get:
      tags:
        - 1.3 - Master Data - Organization Configuration
      summary: Read Org Selling Channel Data
      description: This API will return the given Organization Selling Channel. For more information on Organization Selling Channel refer to the respective POST API notes.
      operationId: read_25
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgSellingChannelDetailResponse'
    delete:
      tags:
        - 1.3 - Master Data - Organization Configuration
      summary: Delete Org Selling Channel Data
      description: This API will delete the given Organization Selling Channel. For more information on Organization Selling Channel refer to the respective POST API notes.
      operationId: delete_23
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.3 - Master Data - Organization Configuration
      summary: Patch Org Selling Channel Data
      description: This API will incrementally update the given Organization Selling Channel. For more information on Organization Selling Channel refer to the respective POST API notes.
      operationId: patch_20
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrgSellingChannelDetailResponse'
  /location-services/location/{orgId}/{locationType}/{locationId}:
    get:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Read Location Data
      description: This API will return the given Location. For more information on Location refer to the respective POST API notes.
      operationId: read_26
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationDetailResponse'
    delete:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Delete Location Data
      description: This API will delete the given Location. For more information on Location refer to the respective POST API notes.
      operationId: delete_24
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Patch Location Data
      description: This API will incrementally update the given Location. For more information on Location refer to the respective POST API notes.
      operationId: patch_21
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationDetailResponse'
  /location-services/location-type/{orgId}/{locationType}/{sellingChannel}:
    get:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Read Location Type Data
      description: This API will return the given Location Type. For more information on Location Type refer to the respective POST API notes.
      operationId: read_27
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationTypeDetailResponse'
    delete:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Delete Location Type Data
      description: This API will delete the given Location Type. For more information on Location Type refer to the respective POST API notes.
      operationId: delete_25
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Patch Location Type Data
      description: This API will incrementally update the given Location Type. For more information on Location Type refer to the respective POST API notes.
      operationId: patch_22
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LocationTypeDetailResponse'
  /location-services/location-type-fulfillment-type/{orgId}/{locationType}/{sellingChannel}/{fulfillmentType}:
    get:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Read Location Type - Fulfillment Type Data
      description: This API will return the given Location Type Fulfillment Type. For more information on Location Type Fulfillment Type refer to the respective POST API notes.
      operationId: read_28
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationTypeAndFulfillmentTypeDetailResponse'
    delete:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Delete Location Type - Fulfillment Type Data
      description: This API will delete the given Location Type Fulfillment Type. For more information on Location Type Fulfillment Type refer to the respective POST API notes.
      operationId: delete_26
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Patch Location Type - Fulfillment Type Data
      description: This API will incrementally update the given Location Type Fulfillment Type. For more information on Location Type Fulfillment Type refer to the respective POST API notes.
      operationId: patch_23
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationTypeAndFulfillmentTypeDetailResponse'
  /location-services/location-type-fulfillment-service/{orgId}/{locationType}/{sellingChannel}/{fulfillmentService}:
    get:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Read Location Type - FulfillmentService Data
      description: This API will return the given Location Type Fulfillment Service. For more information on Location Type Fulfillment Service refer to the respective POST API notes.
      operationId: read_29
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationTypeAndFulfillmentServiceDetailResponse'
    delete:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Delete Location Type - FulfillmentService Data
      description: This API will delete the given Location Type Fulfillment Service. For more information on Location Type Fulfillment Service refer to the respective POST API notes.
      operationId: delete_27
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Patch Location Type - FulfillmentService Data
      description: This API will incrementally update the given Location Type Fulfillment Service. For more information on Location Type Fulfillment Service refer to the respective POST API notes.
      operationId: patch_24
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationTypeAndFulfillmentServiceDetailResponse'
  /location-services/location-type-capacity-cost/{orgId}/{locationType}/{capacitySegment}:
    get:
      tags:
        - 1.2 - Master Data - Location Type Capacity Cost Configuration
      summary: Read Location Type Capacity Cost Data
      description: This API will return the given Location type capacity cost. For more information on Location refer to the respective POST API notes.
      operationId: read_30
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: capacitySegment
          in: path
          required: true
          schema:
            type: string
          example: B2B
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationTypeCapacityCostDetailResponse'
    delete:
      tags:
        - 1.2 - Master Data - Location Type Capacity Cost Configuration
      summary: Delete Location Type Capacity Cost Data
      description: This API will delete the given Location type capacity cost. For more information on Location refer to the respective POST API notes.
      operationId: delete_28
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: capacitySegment
          in: path
          required: true
          schema:
            type: string
          example: B2B
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.2 - Master Data - Location Type Capacity Cost Configuration
      summary: Patch Location Type Capacity Cost Data
      description: This API will incrementally update the given Location type capacity cost. For more information on Location refer to the respective POST API notes.
      operationId: patch_25
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: capacitySegment
          in: path
          required: true
          schema:
            type: string
          example: B2B
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationTypeCapacityCostDetailResponse'
  /location-services/location-fulfillment-type/{orgId}/{locationType}/{locationId}/{sellingChannel}/{fulfillmentType}:
    get:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Read Location Fulfillment Type Data
      description: This API will return the given Location Fulfillment Type. For more information on Location Fulfillment Type refer to the respective POST API notes.
      operationId: read_31
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationAndFulfillmentTypeDetailResponse'
    delete:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Delete Location Fulfillment Type Data
      description: This API will delete the given Location Fulfillment Type. For more information on Location Fulfillment Type refer to the respective POST API notes.
      operationId: delete_29
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Patch Location Fulfillment Type Data
      description: This API will incrementally update the given Location Fulfillment Type. For more information on Location Fulfillment Type refer to the respective POST API notes.
      operationId: patch_26
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationAndFulfillmentTypeDetailResponse'
  /location-services/location-fulfillment-service/{orgId}/{locationType}/{locationId}/{sellingChannel}/{fulfillmentService}:
    get:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Read Location Fulfillment Service Data
      description: This API will return the given Location Fulfillment Service. For more information on Location Fulfillment Service refer to the respective POST API notes.
      operationId: read_32
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationAndFulfillmentServiceDetailResponse'
    delete:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Delete Location Fulfillment Service Data
      description: This API will delete the given Location Fulfillment Service. For more information on Location Fulfillment Service refer to the respective POST API notes.
      operationId: delete_30
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Patch Location Fulfillment Service Data
      description: This API will incrementally update the given Location Fulfillment Service. For more information on Location Fulfillment Service refer to the respective POST API notes.
      operationId: patch_27
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationAndFulfillmentServiceDetailResponse'
  /location-services/location-capacity-cost/{orgId}/{locationType}/{locationId}/{capacitySegment}:
    get:
      tags:
        - 1.2 - Master Data - Location Capacity Cost Configuration
      summary: Read Location Capacity Cost Data
      description: This API will return the given Location capacity cost. For more information on Location refer to the respective POST API notes.
      operationId: read_33
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
        - name: capacitySegment
          in: path
          required: true
          schema:
            type: string
          example: B2B
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationCapacityCostDetailResponse'
    delete:
      tags:
        - 1.2 - Master Data - Location Capacity Cost Configuration
      summary: Delete Location Capacity Cost Data
      description: This API will delete the given Location capacity cost. For more information on Location refer to the respective POST API notes.
      operationId: delete_31
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
        - name: capacitySegment
          in: path
          required: true
          schema:
            type: string
          example: B2B
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.2 - Master Data - Location Capacity Cost Configuration
      summary: Patch Location Capacity Cost Data
      description: This API will incrementally update the given Location capacity cost. For more information on Location refer to the respective POST API notes.
      operationId: patch_28
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
        - name: capacitySegment
          in: path
          required: true
          schema:
            type: string
          example: B2B
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationCapacityCostDetailResponse'
  /item-association-substitution-services/item-association-substitution/{orgId}/{parentItem}/{parentUom}/{sequenceId}:
    get:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Read Item Substitution Association Data
      description: This API will return the given Item Association Services. For more information on Item Association Services refer to the respective POST API notes.
      operationId: read_34
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: parentItem
          in: path
          required: true
          schema:
            type: string
          example: Prod1
        - name: parentUom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: sequenceId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          example: 1
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemAssociationSubstitutionDetailResponse'
    delete:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Delete Item Substitution Association Data
      description: This API will delete the given Item Association.
      operationId: delete_32
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: parentItem
          in: path
          required: true
          schema:
            type: string
          example: Prod1
        - name: parentUom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: sequenceId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          example: 1
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Patch Item Substitution Association Data
      description: This API will incrementally update the given Item Association Services.
      operationId: patch_29
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: parentItem
          in: path
          required: true
          schema:
            type: string
          example: Prod1
        - name: parentUom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: sequenceId
          in: path
          required: true
          schema:
            type: integer
            format: int32
          example: 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemAssociationSubstitutionDetailResponse'
  /item-association-substitution-services/item-association-substitution/substitution-type/{orgId}/{parentItem}/{parentUom}:
    get:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Reads Substitution Type
      description: This API will return the given Item Association Services. For more information on Item Association Services refer to the respective POST API notes.
      operationId: read_35
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: parentItem
          in: path
          required: true
          schema:
            type: string
          example: Prod1
        - name: parentUom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemAssociationSubstitutionTypeDetailResponse'
    delete:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Deletes Substitution Type
      description: This API will delete the given Item Association.
      operationId: delete_33
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: parentItem
          in: path
          required: true
          schema:
            type: string
          example: Prod1
        - name: parentUom
          in: path
          required: true
          schema:
            type: string
          example: EACH
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Patch Substitution Type
      description: This API will incrementally update the given Item Association Services.
      operationId: patch_30
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: parentItem
          in: path
          required: true
          schema:
            type: string
          example: Prod1
        - name: parentUom
          in: path
          required: true
          schema:
            type: string
          example: EACH
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemAssociationSubstitutionTypeDetailResponse'
  /item-association-group-services/item-association-group/{orgId}/{groupId}:
    get:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Read Item Association Data
      description: This API will return the given Item Association Services. For more information on Item Association Services refer to the respective POST API notes.
      operationId: read_36
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: groupId
          in: path
          required: true
          schema:
            type: string
          example: 123
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemAssociationGroupDetailResponse'
    delete:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Delete Item Association Data
      description: This API will delete the given Item Association.
      operationId: delete_34
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: groupId
          in: path
          required: true
          schema:
            type: string
          example: 123
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Patch Item Association Data
      description: This API will incrementally update the given Item Association Services.
      operationId: patch_31
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: groupId
          in: path
          required: true
          schema:
            type: string
          example: 123
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemAssociationGroupDetailResponse'
  /item-association-group-services/item-association-group/product/delete:
    patch:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Delete a product(s) in the Association group
      description: Deletes the product in the existing group
      operationId: deleteProducts
      parameters:
        - name: orgId
          in: query
          required: true
          schema:
            type: string
          example: ORG001
        - name: groupId
          in: query
          required: true
          schema:
            type: string
          example: group1
      requestBody:
        content:
          application/json:
            schema:
              uniqueItems: true
              type: array
              description: item information
              items:
                $ref: '#/components/schemas/ProductGroupDetailRequest'
        required: true
      responses:
        '202':
          description: Accepted
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ItemAssociationGroupDetailResponse'
  /item-association-group-services/item-association-group/product/add:
    patch:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Add or update a product(s) in the Association Group
      description: Add or update the product in the existing Group
      operationId: addProducts
      parameters:
        - name: orgId
          in: query
          description: Organization code
          required: true
          schema:
            type: string
          example: ORG001
        - name: groupId
          in: query
          description: groupId for which product needs to be added
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              uniqueItems: true
              type: array
              description: item information
              items:
                $ref: '#/components/schemas/ProductGroupDetailRequest'
        required: true
      responses:
        '202':
          description: Accepted
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ItemAssociationGroupDetailResponse'
  /item-association-group-services/item-association-group/add-product:
    patch:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Add a product in the Association group
      description: Adds the product in the existing group
      operationId: addProduct
      parameters:
        - name: orgId
          in: query
          description: Organization code
          required: true
          schema:
            type: string
          example: ORG001
        - name: groupId
          in: query
          description: groupId for which product needs to be added
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductGroupDetailRequest'
        required: true
      responses:
        '202':
          description: Accepted
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ItemAssociationGroupDetailResponse'
  /item-association-bundle-services/item-association-bundle/{orgId}/{bundleId}/{uom}:
    get:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Read Item Association Data
      description: This API will return the given Item Association Services. For more information on Item Association Services refer to the respective POST API notes.
      operationId: read_37
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: bundleId
          in: path
          required: true
          schema:
            type: string
          example: bundle1
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemAssociationBundleDetailResponse'
    delete:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Delete Item Association Data
      description: This API will delete the given Item Association.
      operationId: delete_35
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: bundleId
          in: path
          required: true
          schema:
            type: string
          example: bundle1
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Patch Item Association Data
      description: This API will incrementally update the given Item Association Services.
      operationId: patch_32
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: bundleId
          in: path
          required: true
          schema:
            type: string
          example: bundle1
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemAssociationBundleDetailResponse'
  /item-association-bundle-services/item-association-bundle/product/delete:
    patch:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Delete a product in the Association bundle
      description: Deletes the product in the existing bundle
      operationId: deleteProduct
      parameters:
        - name: orgId
          in: query
          required: true
          schema:
            type: string
          example: ORG001
        - name: bundleId
          in: query
          required: true
          schema:
            type: string
          example: bundle1
        - name: uom
          in: query
          required: true
          schema:
            type: string
          example: EACH
      requestBody:
        content:
          application/json:
            schema:
              uniqueItems: true
              type: array
              description: item information
              items:
                $ref: '#/components/schemas/ProductBundleDetailDeleteRequest'
        required: true
      responses:
        '202':
          description: Accepted
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ItemAssociationBundleDetailResponse'
  /item-association-bundle-services/item-association-bundle/product/add:
    patch:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Add or update a product in the Association Bundle
      description: Add or update the product in the existing Bundle
      operationId: addProduct_1
      parameters:
        - name: orgId
          in: query
          description: Organization code
          required: true
          schema:
            type: string
          example: ORG001
        - name: bundleId
          in: query
          description: bundleId for which product needs to be added
          required: true
          schema:
            type: string
          example: bundle1
        - name: uom
          in: query
          required: true
          schema:
            type: string
          example: EACH
      requestBody:
        content:
          application/json:
            schema:
              uniqueItems: true
              type: array
              description: item information
              items:
                $ref: '#/components/schemas/ProductBundleDetailRequest'
        required: true
      responses:
        '202':
          description: Accepted
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ItemAssociationBundleDetailResponse'
  /item-association-alias-services/item-association-alias/{orgId}/{productAlias}:
    get:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Read Item Association Alias Data
      description: This API will return the given Item Association Services. For more information on Item Association Services refer to the respective POST API notes.
      operationId: read_38
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productAlias
          in: path
          required: true
          schema:
            type: string
          example: Prod1
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemAssociationAliasDetailResponse'
    delete:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Delete Item Association Data
      description: This API will delete the given Item Association.
      operationId: delete_36
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productAlias
          in: path
          required: true
          schema:
            type: string
          example: Prod1
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Patch Item Association Data
      description: This API will incrementally update the given Item Association Services.
      operationId: patch_33
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productAlias
          in: path
          required: true
          schema:
            type: string
          example: Prod1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemAssociationAliasDetailResponse'
  /item-association-alias-services/item-association-alias-transpose/{orgId}/{productId}:
    get:
      tags:
        - 1.9 - Admin Data - Item Association Configuration
      summary: Read Product Alias Data
      description: This API will return list of alias, that are associated with the Product
      operationId: read_39
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemAssociationAliasTransposeDetailResponse'
    delete:
      tags:
        - 1.9 - Admin Data - Item Association Configuration
      summary: Delete Product Alas Data
      description: This Admin API will delete the Product.
      operationId: delete_37
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.9 - Admin Data - Item Association Configuration
      summary: Patch Product Alias Data
      description: This API will incrementally update the association between Product and alias.This is not the master API for updating the association and must be used only to correct the mismatch/error.
      operationId: patch_34
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemAssociationAliasTransposeDetailResponse'
  /fulfillment-services/fulfillment-type/{orgId}/{sellingChannel}/{fulfillmentType}:
    get:
      tags:
        - 1.1 - Master Data - Fulfillment Type and Service Configuration
      summary: Read Fulfillment Type Data
      description: This API will return the given Fulfillment Type. For more information on Fulfillment Type refer to the respective POST API notes.
      operationId: read_40
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentTypeDetailResponse'
    delete:
      tags:
        - 1.1 - Master Data - Fulfillment Type and Service Configuration
      summary: Delete Fulfillment Type Data
      description: This API will delete the given Fulfillment Type. For more information on Fulfillment Type refer to the respective POST API notes.
      operationId: delete_38
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.1 - Master Data - Fulfillment Type and Service Configuration
      summary: Patch Fulfillment Type Data
      description: This API will incrementally update the given Fulfillment Type. For more information on Fulfillment Type refer to the respective POST API notes.
      operationId: patch_35
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentTypeDetailResponse'
  /fulfillment-services/fulfillment-service/{orgId}/{sellingChannel}/{fulfillmentService}:
    get:
      tags:
        - 1.1 - Master Data - Fulfillment Type and Service Configuration
      summary: Read Fulfillment Service Data
      description: This API will return the given Fulfillment Service. For more information on Fulfillment Service refer to the respective POST API notes.
      operationId: read_41
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentServiceDetailResponse'
    delete:
      tags:
        - 1.1 - Master Data - Fulfillment Type and Service Configuration
      summary: Delete Fulfillment Service Data
      description: This API will delete the given Fulfillment Service. For more information on Fulfillment Service refer to the respective POST API notes.
      operationId: delete_39
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.1 - Master Data - Fulfillment Type and Service Configuration
      summary: Patch Fulfillment Service Data
      description: This API will incrementally update the given Fulfillment Service. For more information on Fulfillment Service refer to the respective POST API notes.
      operationId: patch_36
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentServiceDetailResponse'
  /fulfillment-services/fulfillment-service-fulfillment-type/{orgId}/{sellingChannel}/{fulfillmentType}/{fulfillmentService}:
    get:
      tags:
        - 1.1 - Master Data - Fulfillment Type and Service Configuration
      summary: Read Fulfillment Service Association Data
      description: This API will return the given Fulfillment Service - Fulfillment Type. For more information on Fulfillment Service - Fulfillment Type refer to the respective POST API notes.
      operationId: read_42
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentServiceAssociationDetailResponse'
    delete:
      tags:
        - 1.1 - Master Data - Fulfillment Type and Service Configuration
      summary: Delete Fulfillment Service Association Data
      description: This API will delete the given Fulfillment Service Association. For more information on  Fulfillment Service - Fulfillment Type refer to the respective POST API notes.
      operationId: delete_40
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.1 - Master Data - Fulfillment Type and Service Configuration
      summary: Patch Fulfillment Service Association Data
      description: This API will incrementally update the given Fulfillment Service Association. For more information on  Fulfillment Service - Fulfillment Type refer to the respective POST API notes.
      operationId: patch_37
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FulfillmentServiceAssociationDetailResponse'
  /dynamic-priority-services/location-type-dynamic-priority/{orgId}/{sellingChannel}/{locationType}/{scoreType}:
    get:
      tags:
        - 1.8 - Master Data - Dynamic Priority Configuration
      summary: Read Location Type Dynamic Priority Data
      description: This API will return the given Location Type Dynamic Priority definition.
      operationId: read_43
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: scoreType
          in: path
          required: true
          schema:
            type: string
          example: Replenishment
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationTypeDynamicPriorityDetailResponse'
    delete:
      tags:
        - 1.8 - Master Data - Dynamic Priority Configuration
      summary: Delete Location Type Dynamic Priority Data
      description: This API will delete the given Location Type Dynamic Priority definition.
      operationId: delete_41
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: scoreType
          in: path
          required: true
          schema:
            type: string
          example: Replenishment
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.8 - Master Data - Dynamic Priority Configuration
      summary: Patch Location Type Dynamic Priority Data
      description: This API will incrementally update the given Location Type Dynamic Priority definition.
      operationId: patch_38
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: scoreType
          in: path
          required: true
          schema:
            type: string
          example: Replenishment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationTypeDynamicPriorityDetailResponse'
  /dynamic-priority-services/location-dynamic-priority/{orgId}/{locationType}/{locationId}/{scoreType}:
    get:
      tags:
        - 1.8 - Master Data - Dynamic Priority Configuration
      summary: Read Location Dynamic Priority Data
      description: This API will return the given Location Dynamic Priority definition.
      operationId: read_44
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
        - name: scoreType
          in: path
          required: true
          schema:
            type: string
          example: Replenishment
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationDynamicPriorityDetailResponse'
    delete:
      tags:
        - 1.8 - Master Data - Dynamic Priority Configuration
      summary: Delete Location Dynamic Priority Data
      description: This API will delete the given Location Dynamic Priority definition.
      operationId: delete_42
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
        - name: scoreType
          in: path
          required: true
          schema:
            type: string
          example: Replenishment
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.8 - Master Data - Dynamic Priority Configuration
      summary: Patch Location Dynamic Priority Data
      description: This API will incrementally update the given Location Dynamic Priority definition.
      operationId: patch_39
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
        - name: scoreType
          in: path
          required: true
          schema:
            type: string
          example: Replenishment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationDynamicPriorityDetailResponse'
  /configuration-hierarchy-services/configuration-hierarchy/{orgId}/{configurationType}:
    get:
      tags:
        - 1.5 - Master Data - Configuration Hierarchy
      summary: Read Configuration Hierarchy Data
      description: This API will return the given Configuration Hierarchy. For more information on Configuration Hierarchy refer to the respective POST API notes.
      operationId: read_45
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: configurationType
          in: path
          required: true
          schema:
            type: string
          example: LOCATION_ENABLED
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationHierarchyDetailResponse'
    delete:
      tags:
        - 1.5 - Master Data - Configuration Hierarchy
      summary: Delete Configuration Hierarchy Data
      description: This API will delete the given Configuration Hierarchy. For more information on Configuration Hierarchy refer to the respective POST API notes.
      operationId: delete_43
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: configurationType
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.5 - Master Data - Configuration Hierarchy
      summary: Patch Configuration Hierarchy Data
      description: This API will incrementally update the given Configuration Hierarchy. For more information on Configuration Hierarchy refer to the respective POST API notes.
      operationId: patch_40
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: configurationType
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfigurationHierarchyDetailResponse'
  /calendar-services/calendar-definition/{orgId}/{calendarId}:
    get:
      tags:
        - 1.6 - Master Data - Calendar Configuration
      summary: Read Calendar Data
      description: This API will return the given Calendar. For more information on Calendar refer to the respective POST API notes.
      operationId: read_46
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: calendarId
          in: path
          required: true
          schema:
            type: string
          example: CAL_001
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarDefinitionDetailResponse'
    delete:
      tags:
        - 1.6 - Master Data - Calendar Configuration
      summary: Delete Calendar Data
      description: This API will delete the given Calendar. For more information on Calendar refer to the respective POST API notes.
      operationId: delete_44
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: calendarId
          in: path
          required: true
          schema:
            type: string
          example: CAL_001
      responses:
        '200':
          description: OK
    patch:
      tags:
        - 1.6 - Master Data - Calendar Configuration
      summary: Patch Calendar Data
      description: This API will incrementally update the given Calendar. For more information on Calendar refer to the respective POST API notes.
      operationId: patch_41
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: calendarId
          in: path
          required: true
          schema:
            type: string
          example: CAL_001
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CalendarDefinitionDetailResponse'
  /validation-config/{validationType}/{propertyName}:
    get:
      tags:
        - 2.2 Validation Configuration
      summary: Read Validation Config
      description: This API will return the given Validation Config. For more information on Validation Config refer to the respective POST API notes.
      operationId: read
      parameters:
        - name: validationType
          in: path
          required: true
          schema:
            type: string
            enum:
              - STRING
              - NUMBER
              - DATE
          example: STRING
        - name: propertyName
          in: path
          required: true
          schema:
            type: string
          example: description
        - name: cacheOnly
          in: query
          required: false
          schema:
            type: boolean
          example: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationConfigDetailResponse'
    delete:
      tags:
        - 2.2 Validation Configuration
      summary: Delete Validation Config
      description: This API will delete the given Validation Config. For more information on Validation Config refer to the respective POST API notes.
      operationId: delete
      parameters:
        - name: validationType
          in: path
          required: true
          schema:
            type: string
            enum:
              - STRING
              - NUMBER
              - DATE
          example: STRING
        - name: propertyName
          in: path
          required: true
          schema:
            type: string
          example: description
      responses:
        '200':
          description: OK
  /product-services/product-supplier-association/{orgId}/{productId}/{uom}:
    get:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Read Product Supplier Association Data By Product
      description: This API will fetch all the product suppliers associated with the given product.
      operationId: getSuppliers
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSupplierDetailsByProductResponse'
  /product-services/product-supplier-association/aggregate/{orgId}/{productId}/{uom}:
    get:
      tags:
        - 1.4 - Admin - Read Aggregated Product Configuration
        - 1.4 - Master Data - Product Configuration
      summary: Read Product Supplier Association Data From Aggregate Map
      description: This API will return the given Product-Location Type Fulfillment Type. For more information on Product-Location-Type-Fulfillment Type refer to the respective POST API notes.
      operationId: getFromAggregateMap
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CachedProductSupplierAssociationAggregatedValue'
  /product-services/product-fulfillment-type/aggregate/{orgId}/{productId}/{uom}:
    get:
      tags:
        - 1.4 - Admin - Read Aggregated Product Configuration
        - 1.4 - Master Data - Product Configuration
      summary: Read Product Fulfillment Type Data From Aggregate Map
      description: This API will return the given Product-Fulfillment Type. For more information on Product-Fulfillment Type refer to the respective POST API notes.
      operationId: getFromAggregateMap_1
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CachedProductFulfillmentTypeAggregatedValue'
  /product-services/product-class/keys/{orgId}:
    get:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Read all Product Class keys
      description: This API will return all the keys associated with a particular organization. For more information on Product Class refer to the respective POST API notes.
      operationId: readAllKeys
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/ProductClassKeyResponse'
  /product-services/product-class-location-type-fulfillment-type/aggregate/{orgId}/{productClass}:
    get:
      tags:
        - 1.4 - Admin - Read Aggregated Product Configuration
        - 1.4 - Master Data - Product Configuration
      summary: Read Product Class Location Type Fulfillment Type Data From Aggregate Map
      description: This API will return the given Product Class-Location Type Fulfillment Type. For more information on Product-Class-Location-Type-Fulfillment-Type refer to the respective POST API notes.
      operationId: getFromAggregateMap_2
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productClass
          in: path
          required: true
          schema:
            type: string
          example: Electronics
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CachedProductClassLocationTypeFulfillmentTypeAggregatedValue'
  /product-services/product-class-location-type-fulfillment-service/aggregate/{orgId}/{productClass}:
    get:
      tags:
        - 1.4 - Admin - Read Aggregated Product Configuration
        - 1.4 - Master Data - Product Configuration
      summary: Read Product Class Location Type Fulfillment Service Data From Aggregate Map
      description: This API will return the given Product Class-Location Type Fulfillment Service. For more information on Product-Class-Location-Type-Fulfillment-Service refer to the respective POST API notes.
      operationId: getFromAggregateMap_3
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productClass
          in: path
          required: true
          schema:
            type: string
          example: Electronics
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CachedProductClassLocationTypeFulfillmentServiceAggregatedValue'
  /product-services/product-class-category-transpose/{orgId}/{productClass}/{productCategory}/{productId}/{uom}:
    get:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Read Product Class Category Transpose Data
      description: This API will return the given Product Class Category Transpose. For more information on Product refer to the respective POST API notes.
      operationId: read_11
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productClass
          in: path
          required: true
          schema:
            type: string
          example: Electronics
        - name: productCategory
          in: path
          required: true
          schema:
            type: string
          example: Camera
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductClassCategoryTransposeDetailResponse'
    delete:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Delete Product Data
      description: This API will delete the given Product Class Category Transpose. For more information on Product refer to the respective POST API notes.
      operationId: delete_11
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productClass
          in: path
          required: true
          schema:
            type: string
          example: Electronics
        - name: productCategory
          in: path
          required: true
          schema:
            type: string
          example: Camera
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
      responses:
        '200':
          description: OK
  /product-services/product-class-category-transpose/{orgId}/{productClass}/{productCategory}:
    get:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Read Product Ids
      description: This API will return the given Product Class Category Transpose. For more information on Product refer to the respective POST API notes.
      operationId: read_12
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productClass
          in: path
          required: true
          schema:
            type: string
          example: Electronics
        - name: productCategory
          in: path
          required: true
          schema:
            type: string
          example: Camera
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductKeyResponse'
  /product-services/product-class-category-transpose/{orgId}/{productClass}:
    get:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Read Product Ids
      description: This API will return the given Product Class Category Transpose. For more information on Product refer to the respective POST API notes.
      operationId: read_13
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productClass
          in: path
          required: true
          schema:
            type: string
          example: Electronics
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductKeyResponse'
  /product-services/product-category/keys/{orgId}:
    get:
      tags:
        - 1.4 - Master Data - Product Configuration
      summary: Read all Product Category keys
      description: This API will return all the keys associated with a particular organization. For more information on Product Category refer to the respective POST API notes.
      operationId: readAllKeys_1
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/ProductCategoryKeyResponse'
  /product-services/product-category-location-type-fulfillment-type/aggregate/{orgId}/{productCategory}:
    get:
      tags:
        - 1.4 - Admin - Read Aggregated Product Configuration
        - 1.4 - Master Data - Product Configuration
      summary: Read Product Category Location Type Fulfillment Type Data From Aggregate Map
      description: This API will return the given Product Category-Location Type Fulfillment Type. For more information on Product-Category-Location-Type-Fulfillment-Type refer to the respective POST API notes.
      operationId: getFromAggregateMap_4
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productCategory
          in: path
          required: true
          schema:
            type: string
          example: Camera
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CachedProductCategoryLocationTypeFulfillmentTypeAggregatedValue'
  /product-services/product-category-location-type-fulfillment-service/aggregate/{orgId}/{productCategory}:
    get:
      tags:
        - 1.4 - Admin - Read Aggregated Product Configuration
        - 1.4 - Master Data - Product Configuration
      summary: Read Product Category Location Type Fulfillment Service Data From Aggregate Map
      description: This API will return the given Product Category-Location Type Fulfillment Service. For more information on Product-Category-Location-Type-Fulfillment-Service refer to the respective POST API notes.
      operationId: getFromAggregateMap_5
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productCategory
          in: path
          required: true
          schema:
            type: string
          example: Camera
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CachedProductCategoryLocationTypeFulfillmentServiceAggregatedValue'
  /product-location-services/product-location-type-fulfillment-type/aggregate/{orgId}/{productId}/{uom}:
    get:
      tags:
        - 1.4 - Admin - Read Aggregated Product Configuration
        - 1.4 - Master Data - Product Configuration
      summary: Read Product Location-Type-Fulfillment Type Data From Aggregate Map
      description: This API will return the given Product-Location Type Fulfillment Type. For more information on Product-Location-Type-Fulfillment Type refer to the respective POST API notes.
      operationId: getFromAggregateMap_6
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CachedProductLocationTypeFulfillmentTypeAggregatedValue'
  /product-location-services/product-location-type-fulfillment-service/aggregate/{orgId}/{productId}/{uom}:
    get:
      tags:
        - 1.4 - Admin - Read Aggregated Product Configuration
        - 1.4 - Master Data - Product Configuration
      summary: Read Product Location Type-Fulfillment Service Data From Aggregate Map
      description: This API will return the given Product-Location Type Fulfillment Service. For more information on Product-Location-Type-Fulfillment Service refer to the respective POST API notes.
      operationId: getFromAggregateMap_7
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CachedProductLocationTypeFulfillmentServiceAggregatedValue'
  /product-location-services/product-location-fulfillment-type/aggregate/{orgId}/{productId}/{uom}:
    get:
      tags:
        - 1.4 - Admin - Read Aggregated Product Configuration
        - 1.4 - Master Data - Product Configuration
      summary: Read Product Location-Fulfillment Type Data From Aggregate Map
      description: This API will return the given Product Location-Fulfillment Type. For more information on Product Location-Fulfillment Type refer to the respective POST API notes.
      operationId: getFromAggregateMap_8
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CachedProductLocationFulfillmentTypeAggregatedValue'
  /product-location-services/product-location-fulfillment-service/aggregate/{orgId}/{productId}/{uom}:
    get:
      tags:
        - 1.4 - Admin - Read Aggregated Product Configuration
        - 1.4 - Master Data - Product Configuration
      summary: Read Product Location-Fulfillment Service Data From Aggregate Map
      description: This API will return the given Product Location-Fulfillment Service. For more information on Product Location-Fulfillment Service refer to the respective POST API notes.
      operationId: getFromAggregateMap_9
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CachedProductLocationFulfillmentServiceAggregatedValue'
  /periodic-updates-configuration/{orgId}/{entityType}/{propertyName}:
    get:
      tags:
        - 2.3 - Master Data - Periodic Updates Configuration
      summary: Read Periodic updates configuration defined on a property
      operationId: read_23
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: entityType
          in: path
          required: true
          schema:
            type: string
          example: LOCATION
        - name: entityKey
          in: query
          required: true
          schema:
            type: object
            additionalProperties:
              type: object
          example: '{"orgId": ORG001, "locationId": LOC1, "locationType": STORE}'
        - name: propertyName
          in: path
          required: true
          schema:
            type: string
          example: priority
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/PeriodicUpdatesConfigurationDetailResponse'
    delete:
      tags:
        - 2.3 - Master Data - Periodic Updates Configuration
      summary: Delete periodic updates configuration
      operationId: delete_21
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: entityType
          in: path
          required: true
          schema:
            type: string
          example: LOCATION
        - name: propertyName
          in: path
          required: true
          schema:
            type: string
          example: priority
        - name: startDateTime
          in: query
          required: true
          schema:
            type: string
            format: date-time
          example: '2018-06-26T23:24:08'
        - name: endDateTime
          in: query
          required: true
          schema:
            type: string
            format: date-time
          example: '2018-06-26T23:24:08'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
              description: Entity Key value of provided entity type
        required: true
      responses:
        '200':
          description: OK
  /organization-services/org/keys:
    get:
      tags:
        - 1.3 - Master Data - Organization Configuration
      summary: Read All Org Keys
      description: This API will return all the keys. For more information on Organization refer to the respective POST API notes.
      operationId: readAllKeys_2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/OrgKeyResponse'
  /organization-services/org-selling-channel/keys/{orgId}:
    get:
      tags:
        - 1.3 - Master Data - Organization Configuration
      summary: Read all Selling Channel keys
      description: This API will return all the keys associated with a particular organization. For more information on Organization Selling Channel refer to the respective POST API notes.
      operationId: readAllKeys_3
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/OrgAndSellingChannelResponse'
  /organization-services/org-selling-channel/keys:
    get:
      tags:
        - 1.3 - Master Data - Organization Configuration
      summary: Read All Selling Channel Keys
      description: This API will return all the keys. For more information on Organization Selling Channel refer to the respective POST API notes.
      operationId: readAllKeys_4
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/OrgAndSellingChannelResponse'
  /location-services/location/keys/{orgId}:
    get:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Read all location keys
      description: This API will return all the keys associated with a particular organization. For more information on Location refer to the respective POST API notes.
      operationId: readAllKeys_5
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/LocationKeyResponse'
  /location-services/location-type/keys/{orgId}:
    get:
      tags:
        - 1.2 - Master Data - Location Configuration
      summary: Read all location type keys
      description: This API will return all the keys associated with a particular organization. For more information on Location refer to the respective POST API notes.
      operationId: readAllKeys_6
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/LocationTypeKeyResponse'
  /item-association-substitution-services/item-association-substitution/{orgId}/{parentItem}/{parentUom}:
    get:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Read All Items Substitution Association Data for a product
      description: This API will return the given Item Association Services. For more information on Item Association Services refer to the respective POST API notes.
      operationId: readAll
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: parentItem
          in: path
          required: true
          schema:
            type: string
          example: Prod1
        - name: parentUom
          in: path
          required: true
          schema:
            type: string
          example: EACH
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemAssociationSubstitutionGetAllDetailResponse'
  /item-association-substitution-services/item-association-substitution/aggregate/{orgId}/{parentItem}/{parentUom}:
    get:
      tags:
        - 1.4 - Admin - Read Aggregated Product Configuration
        - 1.9 - Master Data - Item Association Configuration
      summary: Read Product Category Location Type Fulfillment Service Data From Aggregate Map
      description: This API will return the given Item Association Services. For more information on Item Association Services refer to the respective POST API notes.
      operationId: getFromAggregateMap_10
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: parentItem
          in: path
          required: true
          schema:
            type: string
          example: Prod1
        - name: parentUom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: reload
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CachedItemAssociationSubstitutionAggregatedValue'
  /fulfillment-services/fulfillment-type/keys/{orgId}:
    get:
      tags:
        - 1.1 - Master Data - Fulfillment Type and Service Configuration
      summary: Read all fulfillment Type keys
      description: This API will return all the keys associated with a particular organization. For more information on Fulfillment Type refer to the respective POST API notes.
      operationId: readAllKeys_7
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/FulfillmentTypeKeyResponse'
  /fulfillment-services/fulfillment-service/keys/{orgId}:
    get:
      tags:
        - 1.1 - Master Data - Fulfillment Type and Service Configuration
      summary: Read all fulfillment service keys
      description: This API will return all the keys associated with a particular organization. For more information on Fulfillment Service refer to the respective POST API notes.
      operationId: readAllKeys_8
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/FulfillmentServiceKeyResponse'
  /fulfillment-services/fulfillment-service-fulfillment-type/keys/{orgId}:
    get:
      tags:
        - 1.1 - Master Data - Fulfillment Type and Service Configuration
      summary: Read Fulfillment Service Association keys
      description: This API will return all the keys associated with a particular organization. For more information on Fulfillment Service - Fulfillment Type refer to the respective POST API notes.
      operationId: readAllKeys_9
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/FulfillmentServiceAssociationKeyResponse'
  /common-services/tracking-level/{orgId}/{productId}/{uom}/{locationType}/{locationId}:
    get:
      tags:
        - 2.0 Pre-Calculation Services
      summary: Find EPC of product
      description: This API will give Tracking level of product,Tracking level will be calculated from product as well as location, if tracking level is different in product and location then tracking level will be considered as SKU
      operationId: calculate
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculatedTrackingLevelServiceResponse'
  /common-services/product/{orgId}/{sellingChannel}/{productId}/{uom}/{fulfillmentType}/{fulfillmentService}:
    get:
      tags:
        - 2.0 Pre-Calculation Services
      summary: Calculate Product Details
      description: This API provides ability to calculate eligibility of a product for a given organization, selling channel, fulfillment type and fulfillment service. The eligibility is calculated dynamically and takes into account pre-defined Master Data.
      operationId: calculate_1
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
        - name: considerLocationOverrides
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: false
        - name: considerLocationTypeOverrides
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculatedProductFSResponse'
  /common-services/product/{orgId}/{sellingChannel}/{productId}/{uom}/{fulfillmentType}:
    get:
      tags:
        - 2.0 Pre-Calculation Services
      summary: Calculate Product Details
      description: This API provides ability to calculate eligibility of a product for a given organization, selling channel, fulfillment type and fulfillment service. The eligibility is calculated dynamically and takes into account pre-defined Master Data.
      operationId: calculate_2
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
        - name: considerLocationOverrides
          in: query
          required: false
          schema:
            type: boolean
            default: false
        - name: considerLocationTypeOverrides
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculatedProductFTResponse'
  /common-services/product/{orgId}/{productId}/{uom}:
    get:
      tags:
        - 2.0 Pre-Calculation Services
      summary: Calculate Product Details
      description: This API provides ability to calculate eligibility of a product for a given organization, selling channel, fulfillment type and fulfillment service. The eligibility is calculated dynamically and takes into account pre-defined Master Data.
      operationId: calculate_3
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculatedProductResponse'
  /common-services/product-location/{orgId}/{sellingChannel}/{productId}/{uom}/{fulfillmentType}/{locationType}/{locationId}:
    get:
      tags:
        - 2.0 Pre-Calculation Services
      summary: Calculate Product Location Details
      description: This API provides ability to calculate eligibility of a product/location pair for a given organization, selling channel, fulfillment type and fulfillment service. The eligibility is calculated dynamically and takes into account pre-defined Master Data.
      operationId: calculate_4
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculatedProductLocationFTResponse'
  /common-services/product-location/{orgId}/{sellingChannel}/{productId}/{uom}/{fulfillmentType}/{fulfillmentService}/{locationType}/{locationId}:
    get:
      tags:
        - 2.0 Pre-Calculation Services
      summary: Calculate Product Location Details
      description: This API provides ability to calculate eligibility of a product/location pair for a given organization, selling channel, fulfillment type and fulfillment service. The eligibility is calculated dynamically and takes into account pre-defined Master Data.
      operationId: calculate_5
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculatedProductLocationFSResponse'
  /common-services/product-location-type/{orgId}/{sellingChannel}/{productId}/{uom}/{fulfillmentType}/{locationType}:
    get:
      tags:
        - 2.0 Pre-Calculation Services
      summary: Calculate Product Location Details
      description: This API provides ability to calculate eligibility of a product/location pair for a given organization, selling channel, fulfillment type and fulfillment service. The eligibility is calculated dynamically and takes into account pre-defined Master Data.
      operationId: calculate_6
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculatedProductLocationTypeFTResponse'
  /common-services/product-location-type/{orgId}/{sellingChannel}/{productId}/{uom}/{fulfillmentType}/{fulfillmentService}/{locationType}:
    get:
      tags:
        - 2.0 Pre-Calculation Services
      summary: Calculate Product Location Type FS Details
      description: This API provides ability to calculate eligibility of a product/location-type pair for a given organization, selling channel, fulfillment type and fulfillment service. The eligibility is calculated dynamically and takes into account pre-defined Master Data.
      operationId: calculate_7
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculatedProductLocationTypeFSResponse'
  /common-services/product-gtin/{orgId}/{gtin}:
    get:
      tags:
        - 2.0 Pre-Calculation Services
      summary: Calculate Product Gtin Details
      description: This API returns Gtin details
      operationId: calculate_8
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: gtin
          in: path
          required: true
          schema:
            type: string
          example: Global Trade Item Number(GTIN)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculatedProductGtinResponse'
  /common-services/product-class-category/{orgId}/{sellingChannel}/{productClass}/{productCategory}/{fulfillmentType}/{fulfillmentService}:
    get:
      tags:
        - 2.0 Pre-Calculation Services
      summary: Calculate Product Class Category Details
      description: This API provides ability to calculate eligibility of a product for a given organization, selling channel, product class, product category, fulfillment type and fulfillment service. The eligibility is calculated dynamically and takes into account pre-defined Master Data.
      operationId: calculate_9
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: productClass
          in: path
          required: true
          schema:
            type: string
          example: Electronics
        - name: productCategory
          in: path
          required: true
          schema:
            type: string
          example: Camera
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
        - name: considerLocationTypeOverrides
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculatedProductClassCategoryFSResponse'
  /common-services/product-class-category/{orgId}/{sellingChannel}/{productClass}/{productCategory}/{fulfillmentType}:
    get:
      tags:
        - 2.0 Pre-Calculation Services
      summary: Calculate Product Class Category Details
      description: This API provides ability to calculate eligibility of a product for a given organization, selling channel, product class, product category, fulfillment type and fulfillment service. The eligibility is calculated dynamically and takes into account pre-defined Master Data.
      operationId: calculate_10
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: productClass
          in: path
          required: true
          schema:
            type: string
          example: Electronics
        - name: productCategory
          in: path
          required: true
          schema:
            type: string
          example: Camera
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
        - name: considerLocationTypeOverrides
          in: query
          required: false
          schema:
            type: boolean
            default: false
          example: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculatedProductClassCategoryFTResponse'
  /common-services/product-class-category-location-type/{orgId}/{sellingChannel}/{productClass}/{productCategory}/{fulfillmentType}/{locationType}:
    get:
      tags:
        - 2.0 Pre-Calculation Services
      summary: Calculate Product Class Category Location Type Details
      description: This API provides ability to calculate eligibility of a product for a given organization, selling channel, product class, product category, fulfillment type , fulfillment service and location type. The eligibility is calculated dynamically and takes into account pre-defined Master Data.
      operationId: calculate_11
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: productClass
          in: path
          required: true
          schema:
            type: string
          example: Electronics
        - name: productCategory
          in: path
          required: true
          schema:
            type: string
          example: Camera
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculatedProductClassCategoryLocationTypeFTResponse'
  /common-services/product-class-category-location-type/{orgId}/{sellingChannel}/{productClass}/{productCategory}/{fulfillmentType}/{fulfillmentService}/{locationType}:
    get:
      tags:
        - 2.0 Pre-Calculation Services
      summary: Calculate Product Class Category Location Type Details
      description: This API provides ability to calculate eligibility of a product for a given organization, selling channel, product class, product category, fulfillment type , fulfillment service and location type. The eligibility is calculated dynamically and takes into account pre-defined Master Data.
      operationId: calculate_12
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: productClass
          in: path
          required: true
          schema:
            type: string
          example: Electronics
        - name: productCategory
          in: path
          required: true
          schema:
            type: string
          example: Camera
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculatedProductClassCategoryLocationTypeFSResponse'
  /common-services/product-association/{orgId}/{productId}/{uom}:
    get:
      tags:
        - 2.0 Pre-Calculation Services
      summary: This API returns PRODUCT and its associated bundle or substitution details
      description: This API returns PRODUCT and its associated bundle or substitution details
      operationId: calculate_13
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: 1266009
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculatedProductAssociationResponse'
  /common-services/org/{orgId}/{sellingChannel}:
    get:
      tags:
        - 2.0 Pre-Calculation Services
      summary: Calculate Organization Details
      description: This API provides ability to calculate eligibility of a selling channel for a given organization. The eligibility is calculated dynamically and takes into account pre-defined Master Data.
      operationId: calculate_14
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculatedSellingChannelResponse'
  /common-services/location/{orgId}/{sellingChannel}/{locationType}/{locationId}/{fulfillmentType}/{fulfillmentService}:
    get:
      tags:
        - 2.0 Pre-Calculation Services
      summary: Calculate Location Details
      description: This API provides ability to calculate eligibility of a location for a given organization, selling channel, fulfillment type and fulfillment service. The eligibility is calculated dynamically and takes into account pre-defined Master Data.
      operationId: calculate_15
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculatedLocationFSResponse'
  /common-services/location/{orgId}/{sellingChannel}/{locationType}/{locationId}/{fulfillmentType}:
    get:
      tags:
        - 2.0 Pre-Calculation Services
      summary: Calculate Location Details
      description: This API provides ability to calculate eligibility of a location for a given organization, selling channel, fulfillment type and fulfillment service. The eligibility is calculated dynamically and takes into account pre-defined Master Data.
      operationId: calculate_16
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculatedLocationFTResponse'
  /common-services/location/{orgId}/{locationType}/{locationId}:
    get:
      tags:
        - 2.0 Pre-Calculation Services
      summary: Calculate Location Details
      description: This API provides ability to calculate eligibility of a location for a given organization, selling channel, fulfillment type and fulfillment service. The eligibility is calculated dynamically and takes into account pre-defined Master Data.
      operationId: calculate_17
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: locationType
          in: path
          required: true
          schema:
            type: string
          example: STORE
        - name: locationId
          in: path
          required: true
          schema:
            type: string
          example: S001
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculatedLocationResponse'
  /common-services/item-association-group/{orgId}/{groupId}:
    get:
      tags:
        - 2.0 Pre-Calculation Services
      summary: This API returns item association Group details
      description: This API returns item association Group details
      operationId: calculate_18
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: groupId
          in: path
          required: true
          schema:
            type: string
          example: 123
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculatedItemAssociationGroupResponse'
  /common-services/item-association-alias/{orgId}/{productAlias}:
    get:
      tags:
        - 2.0 Pre-Calculation Services
      summary: This API returns item association Alias details
      description: This API returns item association Group details
      operationId: calculate_19
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: productAlias
          in: path
          required: true
          schema:
            type: string
          example: Prod1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculatedItemAssociationAliasResponse'
  /common-services/fulfillment-type/{orgId}/{sellingChannel}/{fulfillmentType}:
    get:
      tags:
        - 2.0 Pre-Calculation Services
      summary: Calculate Fulfillment Type Details
      description: This API provides ability to calculate eligibility of a fulfillment type for a given organization, selling channel. The eligibility is calculated dynamically and takes into account pre-defined Master Data.
      operationId: calculate_20
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculatedFulfillmentTypeResponse'
  /common-services/fulfillment-service/{orgId}/{sellingChannel}/{fulfillmentType}/{fulfillmentService}:
    get:
      tags:
        - 2.0 Pre-Calculation Services
      summary: Calculate Fulfillment Service Details
      description: This API provides ability to calculate eligibility of a fulfillment service for a given organization, selling channel and  fulfillment type. The eligibility is calculated dynamically and takes into account pre-defined Master Data.
      operationId: calculate_21
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: sellingChannel
          in: path
          required: true
          schema:
            type: string
          example: dotcom
        - name: fulfillmentType
          in: path
          required: true
          schema:
            type: string
          example: SHIP
        - name: fulfillmentService
          in: path
          required: true
          schema:
            type: string
          example: EXPRESS
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculatedFulfillmentServiceResponse'
  /calendar-services/calendar-definition/keys/{orgId}:
    get:
      tags:
        - 1.6 - Master Data - Calendar Configuration
      summary: Read all Calendar keys
      description: This API will return all the keys associated with a particular calendar. For more information on calendar refer to the respective POST API notes.
      operationId: readAllKeys_10
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                uniqueItems: true
                type: array
                items:
                  $ref: '#/components/schemas/CalendarDefinitionDetailKeyResponse'
  /cache-load-service/status/{tableName}:
    get:
      tags:
        - 2.1 - Cache Load Service
      summary: 'Check Cache Load status of given table '
      operationId: getCacheLoadStatus
      parameters:
        - name: tableName
          in: path
          required: true
          schema:
            type: string
          example: PRODUCT
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/CacheLoadStateDetail'
  /cache-load-service/status/{tableName}/tokens:
    get:
      tags:
        - 2.1 - Cache Load Service
      summary: Check Cache Load status of Tokens for given table
      operationId: getCacheTokenStatus
      parameters:
        - name: tableName
          in: path
          required: true
          schema:
            type: string
          example: PRODUCT
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/CacheLoadStateDetail'
  /backup-load-service/status/{tableName}/{backupId}:
    get:
      tags:
        - 3.1 - Backup Load Service
      summary: 'Check Backup Load status of given table '
      operationId: getBackupLoadStatus
      parameters:
        - name: tableName
          in: path
          required: true
          schema:
            type: string
          example: PRODUCT
        - name: hasTokenDetails
          in: query
          description: whether require token detail in response
          required: false
          schema:
            type: boolean
            default: false
          example: true
        - name: backupId
          in: path
          required: true
          schema:
            type: string
          example: 2712f89c-3fd3-4a7d-911e-7247f2f29cdc
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BackupLoadResponse'
  /admin/map-store-service/empty/status:
    get:
      tags:
        - 2.3 - Admin - MapStore Service
      summary: Get status of all map stores. Empty map stores will skip loading from database
      operationId: getIsEmptyStatus
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: boolean
  /admin/map-store-service/empty/reload:
    get:
      tags:
        - 2.3 - Admin - MapStore Service
      summary: Refreshes empty status for empty map store
      operationId: reloadEmptyStatus
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: boolean
  /item-association-group-services/item-association-group/{orgId}/{groupId}/{productId}/{uom}:
    delete:
      tags:
        - 1.9 - Master Data - Item Association Configuration
      summary: Delete a product in the Association group
      description: Deletes the product in the existing group
      operationId: deleteProduct_1
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: string
          example: ORG001
        - name: groupId
          in: path
          required: true
          schema:
            type: string
          example: group1
        - name: productId
          in: path
          required: true
          schema:
            type: string
          example: prod1
        - name: uom
          in: path
          required: true
          schema:
            type: string
          example: EACH
      responses:
        '202':
          description: Accepted
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ItemAssociationGroupDetailResponse'
components:
  schemas:
    ValidationConfigDetailRequest:
      required:
        - propertyName
        - validationType
      type: object
      properties:
        validationType:
          type: string
          description: The type of value for validation
          example: STRING
          enum:
            - STRING
            - NUMBER
            - DATE
        propertyName:
          type: string
          description: The name of the property which should be validated
          example: description
        minLength:
          type: integer
          description: Minimal length
          format: int32
          example: 3
        maxLength:
          type: integer
          description: Maximal length
          format: int32
          example: 5
        minValue:
          type: number
          description: Minimal value
          format: double
          example: 3.5
        maxValue:
          type: number
          description: Maximal value
          format: double
          example: 12.6
        pattern:
          type: string
          description: Pattern value for validation
          example: '"[a-z]*"'
        defaultPatternName:
          type: string
          description: Default pattern name
          example: e-mail
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
      description: Request contain Validation Config information.
    ValidationConfigDetailResponse:
      required:
        - propertyName
        - updateTime
        - validationType
      type: object
      properties:
        validationType:
          type: string
          description: The type of value for validation
          example: STRING
          enum:
            - STRING
            - NUMBER
            - DATE
        propertyName:
          type: string
          description: The name of the property which should be validated
          example: description
        minLength:
          type: integer
          description: Minimal length
          format: int32
          example: 3
        maxLength:
          type: integer
          description: Maximal length
          format: int32
          example: 5
        minValue:
          type: number
          description: Minimal value
          format: double
          example: 3.5
        maxValue:
          type: number
          description: Maximal value
          format: double
          example: 12.6
        pattern:
          type: string
          description: Pattern value for validation
          example: '"[a-z]*"'
        defaultPatternName:
          type: string
          description: Default pattern name
          example: e-mail
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    DescriptionDetailRequest:
      required:
        - long
        - short
      type: object
      properties:
        short:
          type: string
          description: Short and precise description of product
          example: Camera
        long:
          type: string
          description: Detailed description of product
          example: Camera, Full-frame Mirror less Interchangeable Lens Camera (ABC12DE/F)
    DimensionDetailRequest:
      required:
        - uom
        - value
      type: object
      properties:
        value:
          type: number
          description: Dimension Unit Value
          format: double
          example: 10
        uom:
          type: string
          description: Dimension Unit
          example: in
          enum:
            - cm
            - in
            - m
            - ft
            - cm, in, m, ft
    DimensionsDetailRequest:
      required:
        - height
        - length
        - width
      type: object
      properties:
        length:
          $ref: '#/components/schemas/DimensionDetailRequest'
        height:
          $ref: '#/components/schemas/DimensionDetailRequest'
        width:
          $ref: '#/components/schemas/DimensionDetailRequest'
    LocalTime:
      type: object
      properties:
        hour:
          type: integer
          format: int32
        minute:
          type: integer
          format: int32
        second:
          type: integer
          format: int32
        nano:
          type: integer
          format: int32
      description: Product Launch Time
      example: '12:00:00'
    PriceDetailRequest:
      required:
        - currency
        - type
        - value
      type: object
      properties:
        type:
          type: string
          description: Selling price of product
          example: Selling Price
        value:
          type: number
          description: Product Price
          format: double
          example: 20
        currency:
          type: string
          description: Currency of Price
          example: USD
    ProductDetailRequest:
      required:
        - enabled
        - orgId
        - productCategory
        - productClass
        - productId
        - uom
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productId:
          type: string
          description: Product Id
          example: '1266009'
        uom:
          type: string
          description: Unit of measure
          example: EACH
        productCategory:
          type: string
          description: Product Category
          example: Camera
        productClass:
          type: string
          description: Product Class
          example: Electronics
        productType:
          type: string
          description: Product Type
          example: Hazmat
        productLaunchDate:
          type: string
          description: Product Launch Date
          format: date
          example: '2018-06-21'
        productLaunchTime:
          $ref: '#/components/schemas/LocalTime'
        trackingLevel:
          type: string
          description: Tracking Level of inventory
          example: EPC
          enum:
            - EPC
            - SKU
            - EPC, SKU
        supplierSourcing:
          type: boolean
          description: This flag shows whether we should take into account product supplier association
          example: true
        trackInventory:
          type: boolean
          description: Flag that enables Inventory tracking
          example: true
        status:
          type: string
          description: Status
          example: Enabled
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        sourcingClassification:
          type: string
          description: Uses for business logic customization
          example: DC
        shipAlone:
          type: boolean
          description: Need to ship separately
          example: true
        gtin:
          type: string
          description: Global Trade Item Number(GTIN)
          example: '12345678'
        description:
          $ref: '#/components/schemas/DescriptionDetailRequest'
        weight:
          $ref: '#/components/schemas/WeightDetailRequest'
        dimensions:
          $ref: '#/components/schemas/DimensionsDetailRequest'
        prices:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PriceDetailRequest'
        streetDate:
          type: string
          description: Product street date
          format: date
          example: '2020-03-21'
        streetDateType:
          type: string
          description: Type of product street date
          example: DELIVER
          enum:
            - SHIP
            - DELIVER
            - SHIP, DELIVER
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    WeightDetailRequest:
      required:
        - uom
        - value
      type: object
      properties:
        value:
          type: number
          description: Weight Value
          format: double
          example: 2
        uom:
          type: string
          description: Weight UOM
          example: kg
          enum:
            - kg
            - gm
            - lb
            - kg, gm, lb
    DescriptionDetailResponse:
      required:
        - long
        - short
      type: object
      properties:
        short:
          type: string
          description: Short and precise description of product
          example: Camera
        long:
          type: string
          description: Detailed description of product
          example: Camera, Full-frame Mirror less Interchangeable Lens Camera (ABC12DE/F)
    DimensionDetailResponse:
      required:
        - uom
        - value
      type: object
      properties:
        value:
          type: number
          description: Dimension Unit
          format: double
          example: 10
        uom:
          type: string
          description: Dimension Unit
          example: in
    DimensionsDetailResponse:
      required:
        - height
        - length
        - width
      type: object
      properties:
        length:
          $ref: '#/components/schemas/DimensionDetailResponse'
        height:
          $ref: '#/components/schemas/DimensionDetailResponse'
        width:
          $ref: '#/components/schemas/DimensionDetailResponse'
    PriceDetailResponse:
      required:
        - currency
        - type
        - value
      type: object
      properties:
        type:
          type: string
          description: Selling price of product
          example: Selling Price
        value:
          type: number
          description: Product Price
          format: double
          example: 20
        currency:
          type: string
          description: Currency of Price
          example: USD
    ProductDetailResponse:
      required:
        - enabled
        - orgId
        - productCategory
        - productClass
        - productId
        - productType
        - uom
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productId:
          type: string
          description: Product Id
          example: '1266009'
        uom:
          type: string
          description: Unit of measure
          example: EACH
        productCategory:
          type: string
          description: Product Category
          example: Camera
        productClass:
          type: string
          description: Product Class
          example: Electronics
        productType:
          type: string
          description: Product Type
          example: Hazmat
        productLaunchDate:
          type: string
          description: Product Launch Date
          format: date
          example: '2018-06-21'
        productLaunchTime:
          $ref: '#/components/schemas/LocalTime'
        trackingLevel:
          type: string
          description: Tracking Level of inventory
          example: EPC
          enum:
            - EPC
            - SKU
        supplierSourcing:
          type: boolean
          description: This flag shows whether we should take into account product supplier association
          example: true
        trackInventory:
          type: boolean
          description: Flag that enables Inventory tracking
          example: true
        status:
          type: string
          description: Status
          example: Enabled
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        sourcingClassification:
          type: string
          description: Uses for business logic customization
          example: DC
        shipAlone:
          type: boolean
          description: Need to ship separately
          example: true
        gtin:
          type: string
          description: Global Trade Item Number(GTIN)
          example: '12345678'
        description:
          $ref: '#/components/schemas/DescriptionDetailResponse'
        weight:
          $ref: '#/components/schemas/WeightDetailResponse'
        dimensions:
          $ref: '#/components/schemas/DimensionsDetailResponse'
        prices:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PriceDetailResponse'
        streetDate:
          type: string
          description: Product street date
          format: date
          example: '2020-03-21'
        streetDateType:
          type: string
          description: Type of product street date
          example: DELIVER
          enum:
            - SHIP
            - DELIVER
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    WeightDetailResponse:
      required:
        - uom
        - value
      type: object
      properties:
        value:
          type: number
          description: Weight Value
          format: double
          example: 2
        uom:
          type: string
          description: Weight UOM
          example: kg
    ProductSupplierAssociationDetailRequest:
      required:
        - enabled
        - locationId
        - locationType
        - orgId
        - productId
        - sequence
        - uom
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productId:
          type: string
          description: Product Id
          example: '1266009'
        uom:
          type: string
          description: Unit of measure
          example: EACH
        locationType:
          type: string
          description: Type of location
          example: STORE
        locationId:
          type: string
          description: Location Id
          example: S001
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        sequence:
          type: integer
          description: Sequence priority
          format: int32
          example: 1
        leadTimeQuantity:
          type: number
          description: Supplier Lead Time Quantity
          format: double
          example: 10.5
        supplierMessage:
          type: string
          description: Supplier message
          example: 2 days to 4 days
        leadTimeMin:
          type: integer
          description: Supplier Minimum Lead Time in days
          format: int32
          example: 2
        leadTimeMax:
          type: integer
          description: Supplier Maximum Lead Time in days
          format: int32
          example: 4
        leadTimePreference:
          type: string
          description: Supplier Lead Time Preference
          example: MIN
          enum:
            - MIN
            - MAX
            - MIN, MAX
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    ProductSupplierAssociationDetailResponse:
      required:
        - enabled
        - locationId
        - locationType
        - orgId
        - productId
        - sequence
        - uom
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productId:
          type: string
          description: Product Id
          example: '1266009'
        uom:
          type: string
          description: Unit of measure
          example: EACH
        locationType:
          type: string
          description: Type of location
          example: STORE
        locationId:
          type: string
          description: Location Id
          example: S001
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        sequence:
          type: integer
          description: Sequence priority
          format: int32
          example: 1
        leadTimeQuantity:
          type: number
          description: Supplier Lead Time Quantity
          format: double
          example: 10.5
        supplierMessage:
          type: string
          description: Supplier message
          example: 2 days to 4 days
        leadTimeMin:
          type: integer
          description: Supplier Minimum Lead Time in days
          format: int32
          example: 2
        leadTimeMax:
          type: integer
          description: Supplier Maximum Lead Time in days
          format: int32
          example: 4
        leadTimePreference:
          type: string
          description: Supplier Lead Time Preference
          example: MIN
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    ProductGtinDetailRequest:
      required:
        - gtin
        - orgId
        - productIds
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        gtin:
          type: string
          description: Global Trade Item Number(GTIN)
          example: '12345678'
        productIds:
          uniqueItems: true
          type: array
          description: List of products linked with a Gtin
          example:
            - '1266010'
            - '1266009'
          items:
            type: string
            description: List of products linked with a Gtin
            example: '["1266010","1266009"]'
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    ProductGtinDetailResponse:
      required:
        - gtin
        - orgId
        - productIds
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        gtin:
          type: string
          description: Global Trade Item Number(GTIN)
          example: '12345678'
        productIds:
          uniqueItems: true
          type: array
          description: List of products linked with a Gtin
          example:
            - '1266010'
            - '1266009'
          items:
            type: string
            description: List of products linked with a Gtin
            example: '["1266010","1266009"]'
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    AtpEligibilityFactorDetailRequest:
      type: object
      properties:
        locationCount:
          type: integer
          description: Minimum Location count to be considered for ATP
          format: int32
          example: 2
        minLocationAtp:
          type: integer
          description: Minimum ATP to be present at location level while calculating ATP for any Product
          format: int32
          example: 2
        minNetworkAtp:
          type: integer
          description: Minimum ATP to be present at network level while calculating ATP for any Product
          format: int32
          example: 2
    MinMaxDetailRequest:
      required:
        - max
        - min
      type: object
      properties:
        min:
          type: integer
          description: Location Processing Minimum Time in mins
          format: int32
          example: 2
        max:
          type: integer
          description: Location Processing Maximum Time in mins
          format: int32
          example: 5
    ProductFulfillmentTypeDetailRequest:
      required:
        - enabled
        - fulfillmentType
        - orgId
        - productId
        - sellingChannel
        - uom
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productId:
          type: string
          description: Product Id
          example: '1266009'
        uom:
          type: string
          description: Unit of measure
          example: EACH
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailRequest'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        safetyStock:
          minimum: 0
          type: number
          description: Safety stock value
          format: double
          example: 2
        shelfLife:
          minimum: 0
          type: number
          description: The number of days shelf life for perishable products
          example: 5
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        atpEligibilityFactor:
          $ref: '#/components/schemas/AtpEligibilityFactorDetailRequest'
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    AtpEligibilityFactorDetailResponse:
      type: object
      properties:
        locationCount:
          type: integer
          description: Minimum Location count to be considered for ATP
          format: int32
          example: 2
        minLocationAtp:
          type: integer
          description: Minimum ATP to be present at location level while calculating ATP for any Product
          format: int32
          example: 2
        minNetworkAtp:
          type: integer
          description: Minimum ATP to be present at network level while calculating ATP for any Product
          format: int32
          example: 2
    MinMaxDetailResponse:
      required:
        - max
        - min
      type: object
      properties:
        min:
          type: integer
          description: Location Processing Minimum Time in mins
          format: int32
          example: 2
        max:
          type: integer
          description: Location Processing Maximum Time in mins
          format: int32
          example: 5
      description: System processing time by transaction type
      example:
        PRE_SOURCING:
          min: 1
          max: 3
    ProductFulfillmentTypeDetailResponse:
      required:
        - enabled
        - fulfillmentType
        - orgId
        - productId
        - sellingChannel
        - uom
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productId:
          type: string
          description: Product Id
          example: '1266009'
        uom:
          type: string
          description: Unit of measure
          example: EACH
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailResponse'
          description: System processing time by transaction type
          example:
            PRE_SOURCING:
              min: 1
              max: 3
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        safetyStock:
          type: number
          description: Safety stock value
          format: double
          example: 2
        shelfLife:
          type: integer
          description: The number of days shelf life for perishable products
          format: int32
          example: 5
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        atpEligibilityFactor:
          $ref: '#/components/schemas/AtpEligibilityFactorDetailResponse'
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    ProductFulfillmentServiceDetailRequest:
      required:
        - enabled
        - fulfillmentService
        - orgId
        - productId
        - sellingChannel
        - uom
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productId:
          type: string
          description: Product Id
          example: '1266009'
        uom:
          type: string
          description: Unit of measure
          example: EACH
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentService:
          type: string
          description: Fulfillment Service
          example: EXPRESS
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    ProductFulfillmentServiceDetailResponse:
      required:
        - enabled
        - fulfillmentService
        - orgId
        - productId
        - sellingChannel
        - uom
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productId:
          type: string
          description: Product Id
          example: '1266009'
        uom:
          type: string
          description: Unit of measure
          example: EACH
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentService:
          type: string
          description: Fulfillment Service
          example: EXPRESS
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    ProductClassDetailRequest:
      required:
        - enabled
        - orgId
        - productClass
        - sellingChannel
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        productClass:
          type: string
          description: Product Class
          example: Electronics
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    ProductClassDetailResponse:
      required:
        - enabled
        - orgId
        - productClass
        - sellingChannel
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        productClass:
          type: string
          description: Product Class
          example: Electronics
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    ProductClassLocationTypeFulfillmentTypeDetailRequest:
      required:
        - enabled
        - fulfillmentType
        - locationType
        - orgId
        - productClass
        - sellingChannel
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productClass:
          type: string
          description: Product Class
          example: Electronics
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        locationType:
          type: string
          description: Type of location
          example: STORE
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailRequest'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        safetyStock:
          minimum: 0
          type: number
          description: Safety stock value
          format: double
          example: 2
        shelfLife:
          minimum: 0
          type: number
          description: The number of days shelf life for perishable products
          example: 5
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    ProductClassLocationTypeFulfillmentTypeDetailResponse:
      required:
        - enabled
        - fulfillmentType
        - locationType
        - orgId
        - productClass
        - sellingChannel
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productClass:
          type: string
          description: Product Class
          example: Electronics
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        locationType:
          type: string
          description: Type of location
          example: STORE
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailResponse'
          description: System processing time by transaction type
          example:
            PRE_SOURCING:
              min: 1
              max: 3
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        safetyStock:
          type: number
          description: Safety stock value
          format: double
          example: 2
        shelfLife:
          type: integer
          description: The number of days shelf life for perishable products
          format: int32
          example: 5
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    ProductClassLocationTypeFulfillmentServiceDetailRequest:
      required:
        - enabled
        - fulfillmentService
        - locationType
        - orgId
        - productClass
        - sellingChannel
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productClass:
          type: string
          description: Product Class
          example: Electronics
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        locationType:
          type: string
          description: Type of location
          example: STORE
        fulfillmentService:
          type: string
          description: Fulfillment Service
          example: EXPRESS
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    ProductClassLocationTypeFulfillmentServiceDetailResponse:
      required:
        - enabled
        - fulfillmentService
        - locationType
        - orgId
        - productClass
        - sellingChannel
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productClass:
          type: string
          description: Product Class
          example: Electronics
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        locationType:
          type: string
          description: Type of location
          example: STORE
        fulfillmentService:
          type: string
          description: Fulfillment Service
          example: EXPRESS
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    ProductClassFulfillmentTypeDetailRequest:
      required:
        - enabled
        - fulfillmentType
        - orgId
        - productClass
        - sellingChannel
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productClass:
          type: string
          description: Product Class
          example: Electronics
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailRequest'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        safetyStock:
          minimum: 0
          type: number
          description: Safety stock value
          format: double
          example: 2
        shelfLife:
          minimum: 0
          type: number
          description: The number of days shelf life for perishable products
          example: 5
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        atpEligibilityFactor:
          $ref: '#/components/schemas/AtpEligibilityFactorDetailRequest'
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    ProductClassFulfillmentTypeDetailResponse:
      required:
        - enabled
        - fulfillmentType
        - orgId
        - productClass
        - sellingChannel
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productClass:
          type: string
          description: Product Class
          example: Electronics
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailResponse'
          description: System processing time by transaction type
          example:
            PRE_SOURCING:
              min: 1
              max: 3
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        safetyStock:
          type: number
          description: Safety stock value
          format: double
          example: 2
        shelfLife:
          type: integer
          description: The number of days shelf life for perishable products
          format: int32
          example: 5
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        atpEligibilityFactor:
          $ref: '#/components/schemas/AtpEligibilityFactorDetailResponse'
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    ProductClassFulfillmentServiceDetailRequest:
      required:
        - enabled
        - fulfillmentService
        - orgId
        - productClass
        - sellingChannel
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productClass:
          type: string
          description: Product Class
          example: Electronics
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentService:
          type: string
          description: Fulfillment Service
          example: EXPRESS
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    ProductClassFulfillmentServiceDetailResponse:
      required:
        - enabled
        - fulfillmentService
        - orgId
        - productClass
        - sellingChannel
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productClass:
          type: string
          description: Product Class
          example: Electronics
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentService:
          type: string
          description: Fulfillment Service
          example: EXPRESS
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    ProductCategoryDetailRequest:
      required:
        - enabled
        - orgId
        - productCategory
        - productClass
        - sellingChannel
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productCategory:
          type: string
          description: Product Category
          example: Camera
        productClass:
          type: string
          description: Product Class
          example: Electronics
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    ProductCategoryDetailResponse:
      required:
        - enabled
        - orgId
        - productCategory
        - productClass
        - sellingChannel
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productCategory:
          type: string
          description: Product Category
          example: Camera
        productClass:
          type: string
          description: Product Class
          example: Electronics
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    ProductCategoryLocationTypeFulfillmentTypeDetailRequest:
      required:
        - enabled
        - fulfillmentType
        - locationType
        - orgId
        - productCategory
        - sellingChannel
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productCategory:
          type: string
          description: Product Category
          example: Camera
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        locationType:
          type: string
          description: Type of location
          example: STORE
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailRequest'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        safetyStock:
          minimum: 0
          type: number
          description: Safety stock value
          format: double
          example: 2
        shelfLife:
          minimum: 0
          type: number
          description: The number of days shelf life for perishable products
          example: 5
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    ProductCategoryLocationTypeFulfillmentTypeDetailResponse:
      required:
        - enabled
        - fulfillmentType
        - locationType
        - orgId
        - productCategory
        - sellingChannel
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productCategory:
          type: string
          description: Product Category
          example: Camera
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        locationType:
          type: string
          description: Type of location
          example: STORE
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailResponse'
          description: System processing time by transaction type
          example:
            PRE_SOURCING:
              min: 1
              max: 3
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        safetyStock:
          type: number
          description: Safety stock value
          format: double
          example: 2
        shelfLife:
          type: integer
          description: The number of days shelf life for perishable products
          format: int32
          example: 5
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    ProductCategoryLocationTypeFulfillmentServiceDetailRequest:
      required:
        - enabled
        - fulfillmentService
        - locationType
        - orgId
        - productCategory
        - sellingChannel
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productCategory:
          type: string
          description: Product Category
          example: Camera
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        locationType:
          type: string
          description: Type of location
          example: STORE
        fulfillmentService:
          type: string
          description: Fulfillment Service
          example: EXPRESS
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    ProductCategoryLocationTypeFulfillmentServiceDetailResponse:
      required:
        - enabled
        - fulfillmentService
        - locationType
        - orgId
        - productCategory
        - sellingChannel
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productCategory:
          type: string
          description: Product Category
          example: Camera
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        locationType:
          type: string
          description: Type of location
          example: STORE
        fulfillmentService:
          type: string
          description: Fulfillment Service
          example: EXPRESS
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    ProductCategoryFulfillmentTypeDetailRequest:
      required:
        - enabled
        - fulfillmentType
        - orgId
        - productCategory
        - sellingChannel
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productCategory:
          type: string
          description: Product Category
          example: Camera
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailRequest'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        safetyStock:
          minimum: 0
          type: number
          description: Safety stock value
          format: double
          example: 2
        shelfLife:
          minimum: 0
          type: number
          description: The number of days shelf life for perishable products
          example: 5
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        atpEligibilityFactor:
          $ref: '#/components/schemas/AtpEligibilityFactorDetailRequest'
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    ProductCategoryFulfillmentTypeDetailResponse:
      required:
        - enabled
        - fulfillmentType
        - orgId
        - productCategory
        - sellingChannel
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productCategory:
          type: string
          description: Product Category
          example: Camera
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailResponse'
          description: System processing time by transaction type
          example:
            PRE_SOURCING:
              min: 1
              max: 3
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        safetyStock:
          type: number
          description: Safety stock value
          format: double
          example: 2
        shelfLife:
          type: integer
          description: The number of days shelf life for perishable products
          format: int32
          example: 5
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        atpEligibilityFactor:
          $ref: '#/components/schemas/AtpEligibilityFactorDetailResponse'
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    ProductCategoryFulfillmentServiceDetailRequest:
      required:
        - enabled
        - fulfillmentService
        - orgId
        - productCategory
        - sellingChannel
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productCategory:
          type: string
          description: Product Category
          example: Camera
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentService:
          type: string
          description: Fulfillment Service
          example: EXPRESS
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    ProductCategoryFulfillmentServiceDetailResponse:
      required:
        - enabled
        - fulfillmentService
        - orgId
        - productCategory
        - sellingChannel
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productCategory:
          type: string
          description: Product Category
          example: Camera
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentService:
          type: string
          description: Fulfillment Service
          example: EXPRESS
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    ProductLocationTypeFulfillmentTypeDetailRequest:
      required:
        - enabled
        - fulfillmentType
        - locationType
        - orgId
        - productId
        - sellingChannel
        - uom
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productId:
          type: string
          description: Product Id
          example: '1266009'
        uom:
          type: string
          description: Unit of measure
          example: EACH
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        locationType:
          type: string
          description: Type of location
          example: STORE
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailRequest'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        safetyStock:
          minimum: 0
          type: number
          description: Safety stock value
          format: double
          example: 2
        shelfLife:
          minimum: 0
          type: number
          description: The number of days shelf life for perishable products
          example: 5
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    ProductLocationTypeFulfillmentTypeDetailResponse:
      required:
        - enabled
        - fulfillmentType
        - locationType
        - orgId
        - productId
        - sellingChannel
        - uom
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productId:
          type: string
          description: Product Id
          example: '1266009'
        uom:
          type: string
          description: Unit of measure
          example: EACH
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        locationType:
          type: string
          description: Type of location
          example: STORE
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailResponse'
          description: System processing time by transaction type
          example:
            PRE_SOURCING:
              min: 1
              max: 3
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        safetyStock:
          type: number
          description: Safety stock value
          format: double
          example: 2
        shelfLife:
          type: integer
          description: The number of days shelf life for perishable products
          format: int32
          example: 5
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    CalendarDetailRequest:
      required:
        - enabled
        - regularWeekShiftDetails
      type: object
      properties:
        calendarId:
          type: string
          description: Calendar Id
          example: CAL_001
        regularWeekShiftDetails:
          type: object
          additionalProperties:
            uniqueItems: true
            type: array
            description: Shift Detail
            example:
              MONDAY:
                - startTime: '00:00:00'
                  endTime: '23:59:59'
              TUESDAY:
                - startTime: '00:00:00'
                  endTime: '23:59:59'
              WEDNESDAY:
                - startTime: '00:00:00'
                  endTime: '23:59:59'
              THURSDAY:
                - startTime: '00:00:00'
                  endTime: '23:59:59'
              FRIDAY:
                - startTime: '00:00:00'
                  endTime: '23:59:59'
            items:
              $ref: '#/components/schemas/ShiftDetailRequest'
          description: Shift Detail
          example:
            MONDAY:
              - startTime: '00:00:00'
                endTime: '23:59:59'
            TUESDAY:
              - startTime: '00:00:00'
                endTime: '23:59:59'
            WEDNESDAY:
              - startTime: '00:00:00'
                endTime: '23:59:59'
            THURSDAY:
              - startTime: '00:00:00'
                endTime: '23:59:59'
            FRIDAY:
              - startTime: '00:00:00'
                endTime: '23:59:59'
        overrideDaysDetails:
          type: object
          additionalProperties:
            uniqueItems: true
            type: array
            description: Override days details
            example:
              '2018-12-31':
                - startTime: '00:00:00'
                  endTime: '23:59:59'
              '2018-11-30':
                - startTime: '00:00:00'
                  endTime: '23:59:59'
            items:
              $ref: '#/components/schemas/ShiftDetailRequest'
          description: Override days details
          example:
            '2018-12-31':
              - startTime: '00:00:00'
                endTime: '23:59:59'
            '2018-11-30':
              - startTime: '00:00:00'
                endTime: '23:59:59'
        enabled:
          type: boolean
          description: Calendar Enabled flag
          example: true
    ProductLocationTypeFulfillmentServiceDetailRequest:
      required:
        - enabled
        - fulfillmentService
        - locationType
        - orgId
        - productId
        - sellingChannel
        - uom
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productId:
          type: string
          description: Product Id
          example: '1266009'
        uom:
          type: string
          description: Unit of measure
          example: EACH
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        locationType:
          type: string
          description: Type of location
          example: STORE
        fulfillmentService:
          type: string
          description: Fulfillment Service
          example: EXPRESS
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        inboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        inboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailRequest'
        outboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        outboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailRequest'
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    ShiftDetailRequest:
      required:
        - endTime
        - startTime
      type: object
      properties:
        startTime:
          $ref: '#/components/schemas/LocalTime'
        endTime:
          $ref: '#/components/schemas/LocalTime'
      description: Override days details
      example:
        '2018-12-31':
          - startTime: '00:00:00'
            endTime: '23:59:59'
        '2018-11-30':
          - startTime: '00:00:00'
            endTime: '23:59:59'
    CalendarDetailResponse:
      required:
        - enabled
        - regularWeekShiftDetails
      type: object
      properties:
        calendarId:
          type: string
          description: Calendar Id
          example: CAL_001
        regularWeekShiftDetails:
          type: object
          additionalProperties:
            uniqueItems: true
            type: array
            description: Shift Detail
            example:
              MONDAY:
                - startTime: '00:00:00'
                  endTime: '23:59:59'
              TUESDAY:
                - startTime: '00:00:00'
                  endTime: '23:59:59'
              WEDNESDAY:
                - startTime: '00:00:00'
                  endTime: '23:59:59'
              THURSDAY:
                - startTime: '00:00:00'
                  endTime: '23:59:59'
              FRIDAY:
                - startTime: '00:00:00'
                  endTime: '23:59:59'
            items:
              $ref: '#/components/schemas/ShiftDetailResponse'
          description: Shift Detail
          example:
            MONDAY:
              - startTime: '00:00:00'
                endTime: '23:59:59'
            TUESDAY:
              - startTime: '00:00:00'
                endTime: '23:59:59'
            WEDNESDAY:
              - startTime: '00:00:00'
                endTime: '23:59:59'
            THURSDAY:
              - startTime: '00:00:00'
                endTime: '23:59:59'
            FRIDAY:
              - startTime: '00:00:00'
                endTime: '23:59:59'
        overrideDaysDetails:
          type: object
          additionalProperties:
            uniqueItems: true
            type: array
            description: Override days details
            example:
              '2018-12-31':
                - startTime: '00:00:00'
                  endTime: '23:59:59'
              '2018-11-30':
                - startTime: '00:00:00'
                  endTime: '23:59:59'
            items:
              $ref: '#/components/schemas/ShiftDetailResponse'
          description: Override days details
          example:
            '2018-12-31':
              - startTime: '00:00:00'
                endTime: '23:59:59'
            '2018-11-30':
              - startTime: '00:00:00'
                endTime: '23:59:59'
        enabled:
          type: boolean
          description: Calendar Enabled flag
          example: true
    ProductLocationTypeFulfillmentServiceDetailResponse:
      required:
        - enabled
        - fulfillmentService
        - locationType
        - orgId
        - productId
        - sellingChannel
        - uom
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productId:
          type: string
          description: Product Id
          example: '1266009'
        uom:
          type: string
          description: Unit of measure
          example: EACH
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        locationType:
          type: string
          description: Type of location
          example: STORE
        fulfillmentService:
          type: string
          description: Fulfillment Service
          example: EXPRESS
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        inboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        inboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        outboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        outboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    ShiftDetailResponse:
      required:
        - endTime
        - startTime
      type: object
      properties:
        startTime:
          $ref: '#/components/schemas/LocalTime'
        endTime:
          $ref: '#/components/schemas/LocalTime'
      description: Override days details
      example:
        '2018-12-31':
          - startTime: '00:00:00'
            endTime: '23:59:59'
        '2018-11-30':
          - startTime: '00:00:00'
            endTime: '23:59:59'
    ProductLocationFulfillmentTypeDetailRequest:
      required:
        - enabled
        - fulfillmentType
        - locationId
        - locationType
        - orgId
        - productId
        - sellingChannel
        - uom
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productId:
          type: string
          description: Product Id
          example: '1266009'
        uom:
          type: string
          description: Unit of measure
          example: EACH
        locationType:
          type: string
          description: Type of location
          example: STORE
        locationId:
          type: string
          description: Location Id
          example: S001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        enabled:
          type: boolean
          example: true
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailRequest'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        safetyStock:
          minimum: 0
          type: number
          description: Safety stock value
          format: double
          example: 2
        shelfLife:
          minimum: 0
          type: number
          description: The number of days shelf life for perishable products
          example: 5
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    ProductLocationFulfillmentTypeDetailResponse:
      required:
        - enabled
        - fulfillmentType
        - locationId
        - locationType
        - orgId
        - productId
        - sellingChannel
        - uom
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productId:
          type: string
          description: Product Id
          example: '1266009'
        uom:
          type: string
          description: Unit of measure
          example: EACH
        locationType:
          type: string
          description: Type of location
          example: STORE
        locationId:
          type: string
          description: Location Id
          example: S001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        enabled:
          type: boolean
          example: true
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailResponse'
          description: System processing time by transaction type
          example:
            PRE_SOURCING:
              min: 1
              max: 3
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        safetyStock:
          type: number
          description: Safety stock value
          format: double
          example: 2
        shelfLife:
          type: integer
          description: The number of days shelf life for perishable products
          format: int32
          example: 5
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    ProductLocationFulfillmentServiceDetailRequest:
      required:
        - enabled
        - fulfillmentService
        - locationId
        - locationType
        - orgId
        - productId
        - sellingChannel
        - uom
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productId:
          type: string
          description: Product Id
          example: '1266009'
        uom:
          type: string
          description: Unit of measure
          example: EACH
        locationType:
          type: string
          description: Type of location
          example: STORE
        locationId:
          type: string
          description: Location Id
          example: S001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentService:
          type: string
          description: Fulfillment Service
          example: EXPRESS
        enabled:
          type: boolean
          example: true
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        inboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        inboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailRequest'
        outboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        outboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailRequest'
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    ProductLocationFulfillmentServiceDetailResponse:
      required:
        - enabled
        - fulfillmentService
        - locationId
        - locationType
        - orgId
        - productId
        - sellingChannel
        - uom
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productId:
          type: string
          description: Product Id
          example: '1266009'
        uom:
          type: string
          description: Unit of measure
          example: EACH
        locationType:
          type: string
          description: Type of location
          example: STORE
        locationId:
          type: string
          description: Location Id
          example: S001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentService:
          type: string
          description: Fulfillment Service
          example: EXPRESS
        enabled:
          type: boolean
          example: true
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        inboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        inboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        outboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        outboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    PeriodicUpdatesConfigurationDetailRequest:
      required:
        - entityKey
        - entityType
        - fallBackValue
        - orgId
        - propertyName
        - propertyValue
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        entityType:
          type: string
          description: Name of the Enitity/table name
          example: LOCATION
        entityKey:
          type: object
          additionalProperties:
            type: object
            description: Primary key of the entity
            example: '{"orgId": ORG001, "locationId": LOC1, "locationType": STORE}'
          description: Primary key of the entity
          example: '{"orgId": ORG001, "locationId": LOC1, "locationType": STORE}'
        propertyName:
          type: string
          description: Property name of the entity to be scheduled
          example: priority
        startDateTime:
          type: string
          description: Property Start Date Time till minutes in UTC
          format: date-time
        endDateTime:
          type: string
          description: Property End Date Time till minutes in UTC
          format: date-time
        propertyValue:
          type: object
          description: Value of the property required during the startTime-endTime duration
          example: 5
        fallBackValue:
          type: object
          description: Value of the property required after the endTime duration
          example: 5
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    PeriodicUpdatesConfigurationDetailResponse:
      required:
        - entityKey
        - entityType
        - orgId
        - propertyName
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        entityType:
          type: string
          description: Name of the Enitity/table name
          example: LOCATION
        entityKey:
          type: object
          additionalProperties:
            type: object
            description: Primary key of the entity
            example: '{"orgId": ORG001, "locationId": LOC1, "locationType": STORE}'
          description: Primary key of the entity
          example: '{"orgId": ORG001, "locationId": LOC1, "locationType": STORE}'
        propertyName:
          type: string
          description: Property name of the entity to be scheduled
          example: priority
        startDateTime:
          type: string
          description: Property Start Date Time till minutes in UTC
          format: date-time
        endDateTime:
          type: string
          description: Property End Date Time till minutes in UTC
          format: date-time
        propertyValue:
          type: object
          description: Value of the property required during the startTime-endTime duration
          example: 5
        fallBackValue:
          type: object
          description: Value of the property required after the endTime duration
          example: 5
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    OrgDetailRequest:
      required:
        - orgId
        - systemHoldTime
        - systemLocale
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        systemHoldTime:
          type: integer
          description: System Hold Time in mins
          format: int32
          example: 45
        transactionalSystemHoldTime:
          type: object
          additionalProperties:
            type: integer
            description: System hold time by transaction type
            format: int32
          description: System hold time by transaction type
          example:
            PRE_SOURCING: 1
        systemLocale:
          type: string
          description: Locale
          example: America/New_York
        optimizationRuleId:
          type: string
          description: Optimization Rule Id
          example: MINIMIZE_DISTANCE
        transferOptimizationRuleId:
          type: string
          description: Transfer Optimization Rule Id
          example: MINIMIZE_TOLL_COST
        locationOrg:
          type: string
          description: Location org id
          example: locationOrg1
        configurationHierarchyOrg:
          type: string
          description: Configuration hierarchy org id
          example: configHierarchyOrg1
        transitOrg:
          type: string
          description: Transit org id
          example: transitOrg1
        availabilityOrg:
          type: string
          description: Availability org id
          example: availabilityOrg1
        fulfillmentOrg:
          type: string
          description: Fulfillment org id
          example: fulfillmentOrg1
        catalogOrg:
          type: string
          description: Catalog org id
          example: catalogOrg1
        eligibilityOrg:
          type: string
          description: Eligibility org id
          example: eligibilityOrg1
        inventoryOrg:
          type: string
          description: Inventory org id
          example: inventoryOrg1
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    OrgDetailResponse:
      required:
        - optimizationRuleId
        - orgId
        - systemHoldTime
        - systemLocale
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        systemHoldTime:
          type: integer
          description: System Hold Time in mins
          format: int32
          example: 45
        transactionalSystemHoldTime:
          type: object
          additionalProperties:
            type: integer
            description: System hold time by transaction type
            format: int32
          description: System hold time by transaction type
          example:
            PRE_SOURCING: 1
        systemLocale:
          type: string
          description: Locale
          example: America/New_York
        optimizationRuleId:
          type: string
          description: Optimization Rule Id
          example: MINIMIZE_DISTANCE
        transferOptimizationRuleId:
          type: string
          description: Transfer Optimization Rule Id
          example: MINIMIZE_TOLL_COST
        locationOrg:
          type: string
          description: Location org id
          example: locationOrg1
        configurationHierarchyOrg:
          type: string
          description: Configuration hierarchy org id
          example: configHierarchyOrg1
        transitOrg:
          type: string
          description: Transit org id
          example: transitOrg1
        availabilityOrg:
          type: string
          description: Availability org id
          example: availabilityOrg1
        fulfillmentOrg:
          type: string
          description: Fulfillment org id
          example: fulfillmentOrg1
        catalogOrg:
          type: string
          description: Catalog org id
          example: catalogOrg1
        eligibilityOrg:
          type: string
          description: Eligibility org id
          example: eligibilityOrg1
        inventoryOrg:
          type: string
          description: Inventory org id
          example: inventoryOrg1
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    OrgSellingChannelDetailRequest:
      required:
        - enabled
        - orgId
        - sellingChannel
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        systemHoldTime:
          type: integer
          description: System Hold Time in mins
          format: int32
          example: 45
        transactionalSystemHoldTime:
          type: object
          additionalProperties:
            type: integer
            description: System hold time by transaction type
            format: int32
          description: System hold time by transaction type
          example:
            PRE_SOURCING: 1
        optimizationRuleId:
          type: string
          description: Optimization Rule Id
          example: MINIMIZE_DISTANCE
        transferOptimizationRuleId:
          type: string
          description: Transfer Optimization Rule Id
          example: MINIMIZE_TOLL_COST
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    OrgSellingChannelDetailResponse:
      required:
        - enabled
        - orgId
        - sellingChannel
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        systemHoldTime:
          type: integer
          description: System Hold Time in mins
          format: int32
          example: 45
        transactionalSystemHoldTime:
          type: object
          additionalProperties:
            type: integer
            description: System hold time by transaction type
            format: int32
          description: System hold time by transaction type
          example:
            PRE_SOURCING: 1
        optimizationRuleId:
          type: string
          description: Optimization Rule Id
          example: MINIMIZE_DISTANCE
        transferOptimizationRuleId:
          type: string
          description: Transfer Optimization Rule Id
          example: MINIMIZE_TOLL_COST
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    AddressDetailRequest:
      required:
        - addressLine1
        - city
        - country
        - state
        - zipCode
      type: object
      properties:
        addressLine1:
          type: string
          description: Address Line 1
          example: 8204 Memorial Ln
        addressLine2:
          type: string
          description: Ohio Dr
          example: Ohio Dr
        city:
          type: string
          description: Location City
          example: Plano
        state:
          type: string
          description: Location State
          example: TX
        country:
          type: string
          description: Location Country Code
          example: US
        zipCode:
          type: string
          description: Location Zip Code
          example: '75024'
    ContactDetailRequest:
      type: object
      properties:
        firstName:
          type: string
          description: First name
          example: John
        lastName:
          type: string
          description: Last name
          example: Smith
        phone:
          type: string
          description: Phone number
          example: '+11234567890'
        email:
          type: string
          description: Email
          example: example@company.com
    LocationDetailRequest:
      required:
        - address
        - enabled
        - locationId
        - locationName
        - locationType
        - orgId
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        locationType:
          type: string
          description: Type of location
          example: STORE
        locationId:
          type: string
          description: Location Id
          example: S001
        locationName:
          type: string
          description: Location Name
          example: New York Store
        trackingLevel:
          type: string
          description: Tracking Level of inventory
          example: EPC
          enum:
            - EPC
            - SKU
            - EPC, SKU
        trackCapacity:
          type: boolean
          description: Flag that enables Capacity tracking
          example: true
        trackDeliveryCapacity:
          type: boolean
          description: Flag that enables Delivery TimeSlot Capacity tracking
          example: true
        enabled:
          type: boolean
          description: Location Enabled flag
          example: true
        priority:
          type: number
          description: Priority value of location type compared to other locations.
          format: double
          example: 2
        address:
          $ref: '#/components/schemas/AddressDetailRequest'
        contact:
          $ref: '#/components/schemas/ContactDetailRequest'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        workingCalendar:
          $ref: '#/components/schemas/CalendarDetailRequest'
        locale:
          type: string
          description: Locale
          example: America/New_York
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        stockoutDays:
          type: integer
          description: The number of days in which an item gets stocked out
          format: int32
          example: 5
        transferEnabled:
          type: boolean
          description: Flag that enables Location Transfer
          example: true
        inboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        inboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailRequest'
        outboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        outboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailRequest'
        futureInventoryProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
      description: Request contain Location information.
    AddressDetailResponse:
      required:
        - addressLine1
        - addressLine2
        - city
        - country
        - state
        - zipCode
      type: object
      properties:
        addressLine1:
          type: string
          description: Address Line 1
          example: 8204 Memorial Ln
        addressLine2:
          type: string
          description: Address Line 2
          example: Ohio Dr
        city:
          type: string
          description: Location City
          example: Plano
        state:
          type: string
          description: Location State
          example: TX
        country:
          type: string
          description: Location Country Code
          example: US
        zipCode:
          type: string
          description: Location Zip Code
          example: '75024'
    ContactDetailResponse:
      required:
        - email
        - firstName
        - phone
      type: object
      properties:
        firstName:
          type: string
          description: First name
          example: John
        lastName:
          type: string
          description: Last name
          example: Smith
        phone:
          type: string
          description: Phone number
          example: '+11234567890'
        email:
          type: string
          description: Email
          example: example@company.com
    LocationDetailResponse:
      required:
        - address
        - enabled
        - locale
        - locationId
        - locationName
        - locationType
        - orgId
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        locationType:
          type: string
          description: Type of location
          example: STORE
        locationId:
          type: string
          description: Location Id
          example: S001
        locationName:
          type: string
          description: Location Name
          example: New York Store
        trackingLevel:
          type: string
          description: Tracking Level of inventory
          example: EPC
          enum:
            - EPC
            - SKU
        trackCapacity:
          type: boolean
          description: Flag that enables Capacity tracking
          example: true
        trackDeliveryCapacity:
          type: boolean
          description: Flag that enables Delivery TimeSlot Capacity tracking
          example: true
        enabled:
          type: boolean
          description: Location Enabled flag
          example: true
        priority:
          type: number
          description: Priority value of location type compared to other locations.
          format: double
          example: 2
        address:
          $ref: '#/components/schemas/AddressDetailResponse'
        contact:
          $ref: '#/components/schemas/ContactDetailResponse'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        workingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        locale:
          type: string
          description: Locale
          example: America/New_York
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        stockoutDays:
          type: integer
          description: The number of days in which an item gets stocked out
          format: int32
          example: 5
        transferEnabled:
          type: boolean
          description: Flag that enables Location Transfer
          example: true
        inboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        inboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        outboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        outboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        futureInventoryProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    LocationTypeDetailRequest:
      required:
        - enabled
        - locationType
        - orgId
        - priority
        - sellingChannel
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        locationType:
          type: string
          description: Type of location
          example: STORE
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        enabled:
          type: boolean
          description: Location Enabled flag
          example: true
        trackCapacity:
          type: boolean
          description: Flag that enables Capacity tracking
          example: true
        trackDeliveryCapacity:
          type: boolean
          description: Flag that enables Delivery TimeSlot Capacity tracking
          example: true
        priority:
          type: number
          description: Priority value of location type compared to other location types.
          format: double
          example: 1.5
        workingCalendar:
          $ref: '#/components/schemas/CalendarDetailRequest'
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        stockoutDays:
          type: integer
          description: The number of days in which an item gets stocked out
          format: int32
          example: 5
        markdownProlongDays:
          type: integer
          description: Days count to prolong markdown if it is not defined
          format: int32
          example: 5
        markdownOptimizationEnabled:
          type: boolean
          description: Markdown optimization enabled flag
          example: true
        transferEnabled:
          type: boolean
          description: Flag that enables Location Transfer
          example: true
        inboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        inboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailRequest'
        outboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        outboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailRequest'
        futureInventoryProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    LocationTypeDetailResponse:
      required:
        - enabled
        - locationType
        - orgId
        - priority
        - sellingChannel
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        locationType:
          type: string
          description: Type of location
          example: STORE
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        enabled:
          type: boolean
          description: Location Enabled flag
          example: true
        trackCapacity:
          type: boolean
          description: Flag that enables Capacity tracking
          example: true
        trackDeliveryCapacity:
          type: boolean
          description: Flag that enables Delivery TimeSlot Capacity tracking
          example: true
        priority:
          type: number
          description: Priority value of location type compared to other location types.
          format: double
          example: 1.5
        workingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        stockoutDays:
          type: integer
          description: The number of days in which an item gets stocked out
          format: int32
          example: 5
        markdownProlongDays:
          type: integer
          description: Days count to prolong markdown if it is not defined
          format: int32
          example: 5
        markdownOptimizationEnabled:
          type: boolean
          description: Markdown optimization enabled flag
          example: true
        transferEnabled:
          type: boolean
          description: Flag that enables Location Transfer
          example: true
        inboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        inboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        outboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        outboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        futureInventoryProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    CutOffCalendarDetailRequest:
      required:
        - enabled
        - regularWeekCutOffs
      type: object
      properties:
        calendarId:
          type: string
          description: Calendar Id
          example: CAL_001
        regularWeekCutOffs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LocalTime'
          description: Regular Week CutOff Detail
          example:
            MONDAY: '23:59:59'
            TUESDAY: '23:59:59'
            WEDNESDAY: '23:59:59'
            THURSDAY: '23:59:59'
            FRIDAY: '23:59:59'
        overrideDaysCutOffs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LocalTime'
          description: Override CutOff days details
          example:
            '2018-12-31': '23:59:59'
            '2018-11-30': '23:59:59'
        enabled:
          type: boolean
          description: Calendar Enabled flag
          example: true
    LocationTypeAndFulfillmentTypeDetailRequest:
      required:
        - enabled
        - fulfillmentType
        - locationType
        - orgId
        - sellingChannel
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        locationType:
          type: string
          description: Type of location
          example: STORE
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        enabled:
          type: boolean
          description: Location Type and Fulfillment Enabled Flag
          example: true
        cutOff:
          $ref: '#/components/schemas/LocalTime'
        cutOffCalendar:
          $ref: '#/components/schemas/CutOffCalendarDetailRequest'
        workingCalendar:
          $ref: '#/components/schemas/CalendarDetailRequest'
        processingTimeBuffer:
          type: integer
          description: Processing Time Buffer in mins
          format: int32
          example: 2
        safetyStock:
          minimum: 0
          type: number
          description: Safety stock value
          format: double
          example: 2
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        transferEnabled:
          type: boolean
          description: Flag that enables Location Transfer
          example: true
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailRequest'
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    CutOffCalendarDetailResponse:
      required:
        - enabled
        - regularWeekCutOffs
      type: object
      properties:
        calendarId:
          type: string
          description: Calendar Id
          example: CAL_001
        regularWeekCutOffs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LocalTime'
          description: Regular Week CutOff Detail
          example:
            MONDAY: '23:59:59'
            TUESDAY: '23:59:59'
            WEDNESDAY: '23:59:59'
            THURSDAY: '23:59:59'
            FRIDAY: '23:59:59'
        overrideDaysCutOffs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LocalTime'
          description: Override CutOff days details
          example:
            '2018-12-31': '23:59:59'
            '2018-11-30': '23:59:59'
        enabled:
          type: boolean
          description: Calendar Enabled flag
          example: true
    LocationTypeAndFulfillmentTypeDetailResponse:
      required:
        - enabled
        - fulfillmentType
        - locationType
        - orgId
        - sellingChannel
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        locationType:
          type: string
          description: Type of location
          example: STORE
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        enabled:
          type: boolean
          description: Location Type and Fulfillment Enabled Flag
          example: true
        cutOff:
          $ref: '#/components/schemas/LocalTime'
        cutOffCalendar:
          $ref: '#/components/schemas/CutOffCalendarDetailResponse'
        workingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        processingTimeBuffer:
          type: integer
          description: Processing Time Buffer in mins
          format: int32
          example: 2
        safetyStock:
          type: number
          description: Safety stock value
          format: double
          example: 2
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        transferEnabled:
          type: boolean
          description: Flag that enables Location Transfer
          example: true
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailResponse'
          description: System processing time by transaction type
          example:
            PRE_SOURCING:
              min: 1
              max: 3
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    DistanceDetailRequest:
      required:
        - uom
        - value
      type: object
      properties:
        value:
          type: number
          description: Distance Limit Value
          format: double
          example: 2
        uom:
          type: string
          description: Distance Limit UOM
          example: mi
          enum:
            - km
            - m
            - mi
            - km, m, mi
      description: Distance Limit
      example:
        value: 2
        uom: mi
    LocationTypeAndFulfillmentServiceDetailRequest:
      required:
        - enabled
        - fulfillmentService
        - locationType
        - orgId
        - sellingChannel
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        locationType:
          type: string
          description: Type of location
          example: STORE
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentService:
          type: string
          description: Fulfillment Service of item
          example: EXPRESS
        enabled:
          type: boolean
          description: Location Fulfillment Type Enabled
          example: true
        distanceLimit:
          $ref: '#/components/schemas/DistanceDetailRequest'
        cutOff:
          $ref: '#/components/schemas/LocalTime'
        cutOffCalendar:
          $ref: '#/components/schemas/CutOffCalendarDetailRequest'
        workingCalendar:
          $ref: '#/components/schemas/CalendarDetailRequest'
        transferCalendar:
          $ref: '#/components/schemas/CalendarDetailRequest'
        deliveryCalendar:
          $ref: '#/components/schemas/CalendarDetailRequest'
        processingTimeBuffer:
          type: integer
          description: Processing Time Buffer in mins
          format: int32
          example: 2
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        transitBuffer:
          type: integer
          description: Transit buffer in days
          format: int32
          example: 3
        deliveryBuffer:
          type: integer
          description: Delivery buffer in days
          format: int32
          example: 2
        transferEnabled:
          type: boolean
          description: Flag that enables Location Transfer
          example: true
        inboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        inboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailRequest'
        outboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        outboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailRequest'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    DistanceDetailResponse:
      required:
        - uom
        - value
      type: object
      properties:
        value:
          type: number
          description: Distance Limit Value
          format: double
          example: 2
        uom:
          type: string
          description: Distance Limit UOM
          example: mi
          enum:
            - km
            - m
            - mi
      description: Distance Limit
      example:
        value: 2
        uom: mi
    LocationTypeAndFulfillmentServiceDetailResponse:
      required:
        - deliveryBuffer
        - enabled
        - fulfillmentService
        - locationType
        - orgId
        - sellingChannel
        - temporaryDisableExpirationTime
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        locationType:
          type: string
          description: Type of location
          example: STORE
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentService:
          type: string
          description: Fulfillment Service of item
          example: EXPRESS
        enabled:
          type: boolean
          description: Location Fulfillment Type Enabled
          example: true
        distanceLimit:
          $ref: '#/components/schemas/DistanceDetailResponse'
        cutOff:
          $ref: '#/components/schemas/LocalTime'
        cutOffCalendar:
          $ref: '#/components/schemas/CutOffCalendarDetailResponse'
        workingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        transferCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        deliveryCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        processingTimeBuffer:
          type: integer
          description: Processing Time Buffer in mins
          format: int32
          example: 2
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        transitBuffer:
          type: integer
          description: Transit buffer in days
          format: int32
          example: 3
        deliveryBuffer:
          type: integer
          description: Delivery buffer in days
          format: int32
          example: 2
        transferEnabled:
          type: boolean
          description: Flag that enables Location Transfer
          example: true
        inboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        inboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        outboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        outboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    CapacityRangeCostDetailRequest:
      required:
        - cost
        - max
        - min
      type: object
      properties:
        min:
          type: integer
          description: Capacity range cost min.
          format: int32
          example: 2
        max:
          type: integer
          description: Capacity range cost max.
          format: int32
          example: 5
        cost:
          type: number
          description: Capacity cost.
          format: double
          example: 5.1
      description: Capacity range cost.
      example:
        - min: 4
          max: 7
          cost: 5.2
        - min: 1
          max: 3
          cost: 5.5
    LocationTypeCapacityCostDetailRequest:
      required:
        - capacitySegment
        - cost
        - locationType
        - orgId
        - rangeCost
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        locationType:
          type: string
          description: Type of location
          example: STORE
        capacitySegment:
          type: string
          description: Capacity Segment
          example: B2B
        cost:
          type: number
          description: Capacity cost.
          format: double
          example: 5.1
        rangeCost:
          type: array
          description: Capacity range cost.
          example:
            - min: 4
              max: 7
              cost: 5.2
            - min: 1
              max: 3
              cost: 5.5
          items:
            $ref: '#/components/schemas/CapacityRangeCostDetailRequest'
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
      description: Request contain Location Type Capacity Cost information.
    CapacityRangeCostDetailResponse:
      required:
        - cost
        - max
        - min
      type: object
      properties:
        min:
          type: integer
          description: Capacity range cost min.
          format: int32
          example: 2
        max:
          type: integer
          description: Capacity range cost max.
          format: int32
          example: 5
        cost:
          type: number
          description: Capacity cost.
          format: double
          example: 5.1
      description: Capacity range cost.
      example:
        - min: 4
          max: 7
          cost: 5.2
        - min: 1
          max: 3
          cost: 5.5
    LocationTypeCapacityCostDetailResponse:
      required:
        - capacitySegment
        - cost
        - locationType
        - orgId
        - rangeCost
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        locationType:
          type: string
          description: Type of location
          example: STORE
        capacitySegment:
          type: string
          description: Capacity Segment
          example: B2B
        cost:
          type: number
          description: Capacity cost.
          format: double
          example: 5.1
        rangeCost:
          type: array
          description: Capacity range cost.
          example:
            - min: 4
              max: 7
              cost: 5.2
            - min: 1
              max: 3
              cost: 5.5
          items:
            $ref: '#/components/schemas/CapacityRangeCostDetailResponse'
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    LocationAndFulfillmentTypeDetailRequest:
      required:
        - enabled
        - fulfillmentType
        - locationId
        - locationType
        - orgId
        - sellingChannel
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        locationType:
          type: string
          description: Type of location
          example: STORE
        locationId:
          type: string
          description: Location Id
          example: S001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        enabled:
          type: boolean
          description: Location Fulfillment Type Enabled
          example: true
        cutOff:
          $ref: '#/components/schemas/LocalTime'
        cutOffCalendar:
          $ref: '#/components/schemas/CutOffCalendarDetailRequest'
        workingCalendar:
          $ref: '#/components/schemas/CalendarDetailRequest'
        processingTimeBuffer:
          type: integer
          description: Processing Time Buffer in mins
          format: int32
          example: 2
        safetyStock:
          minimum: 0
          type: number
          description: Safety stock value
          format: double
          example: 2
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        transferEnabled:
          type: boolean
          description: Flag that enables Location Transfer
          example: true
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailRequest'
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    LocationAndFulfillmentTypeDetailResponse:
      required:
        - enabled
        - fulfillmentType
        - locationId
        - locationType
        - orgId
        - sellingChannel
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        locationType:
          type: string
          description: Type of location
          example: STORE
        locationId:
          type: string
          description: Location Id
          example: S001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        enabled:
          type: boolean
          description: Location Fulfillment Type Enabled
          example: true
        cutOff:
          $ref: '#/components/schemas/LocalTime'
        cutOffCalendar:
          $ref: '#/components/schemas/CutOffCalendarDetailResponse'
        workingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        processingTimeBuffer:
          type: integer
          description: Processing Time Buffer in mins
          format: int32
          example: 2
        safetyStock:
          type: number
          description: Safety stock value
          format: double
          example: 2
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        transferEnabled:
          type: boolean
          description: Flag that enables Location Transfer
          example: true
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailResponse'
          description: System processing time by transaction type
          example:
            PRE_SOURCING:
              min: 1
              max: 3
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    LocationAndFulfillmentServiceDetailRequest:
      required:
        - enabled
        - fulfillmentService
        - locationId
        - locationType
        - orgId
        - sellingChannel
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        locationType:
          type: string
          description: Type of location
          example: STORE
        locationId:
          type: string
          description: Location Id
          example: S001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentService:
          type: string
          description: Fulfillment Service of item
          example: EXPRESS
        enabled:
          type: boolean
          description: Fulfillment Service Enabled
          example: true
        distanceLimit:
          $ref: '#/components/schemas/DistanceDetailRequest'
        cutOff:
          $ref: '#/components/schemas/LocalTime'
        cutOffCalendar:
          $ref: '#/components/schemas/CutOffCalendarDetailRequest'
        workingCalendar:
          $ref: '#/components/schemas/CalendarDetailRequest'
        transferCalendar:
          $ref: '#/components/schemas/CalendarDetailRequest'
        deliveryCalendar:
          $ref: '#/components/schemas/CalendarDetailRequest'
        processingTimeBuffer:
          type: integer
          description: Processing Time Buffer in mins
          format: int32
          example: 2
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        transitBuffer:
          type: integer
          description: Transit buffer in days
          format: int32
          example: 3
        deliveryBuffer:
          type: integer
          description: Delivery buffer in days
          format: int32
          example: 2
        transferEnabled:
          type: boolean
          description: Flag that enables Location Transfer
          example: true
        inboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        inboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailRequest'
        outboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        outboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailRequest'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    LocationAndFulfillmentServiceDetailResponse:
      required:
        - enabled
        - fulfillmentService
        - locationId
        - locationType
        - orgId
        - sellingChannel
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        locationType:
          type: string
          description: Type of location
          example: STORE
        locationId:
          type: string
          description: Location Id
          example: S001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentService:
          type: string
          description: Fulfillment Service of item
          example: EXPRESS
        enabled:
          type: boolean
          description: Fulfillment Service Enabled
          example: true
        distanceLimit:
          $ref: '#/components/schemas/DistanceDetailResponse'
        cutOff:
          $ref: '#/components/schemas/LocalTime'
        cutOffCalendar:
          $ref: '#/components/schemas/CutOffCalendarDetailResponse'
        workingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        transferCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        deliveryCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        processingTimeBuffer:
          type: integer
          description: Processing Time Buffer in mins
          format: int32
          example: 2
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        transitBuffer:
          type: integer
          description: Transit buffer in days
          format: int32
          example: 3
        deliveryBuffer:
          type: integer
          description: Delivery buffer in days
          format: int32
          example: 2
        transferEnabled:
          type: boolean
          description: Flag that enables Location Transfer
          example: true
        inboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        inboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        outboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        outboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    LocationCapacityCostDetailRequest:
      required:
        - capacitySegment
        - cost
        - locationId
        - locationType
        - orgId
        - rangeCost
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        locationType:
          type: string
          description: Type of location
          example: STORE
        locationId:
          type: string
          description: Location Id
          example: S001
        capacitySegment:
          type: string
          description: Capacity Segment
          example: B2B
        cost:
          type: number
          description: Capacity cost.
          format: double
          example: 5.1
        rangeCost:
          type: array
          description: Capacity range cost.
          example:
            - min: 4
              max: 7
              cost: 5.2
            - min: 1
              max: 3
              cost: 5.5
          items:
            $ref: '#/components/schemas/CapacityRangeCostDetailRequest'
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
      description: Request contain Location Capacity Cost information.
    LocationCapacityCostDetailResponse:
      required:
        - capacitySegment
        - cost
        - locationId
        - locationType
        - orgId
        - rangeCost
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        locationType:
          type: string
          description: Type of location
          example: STORE
        locationId:
          type: string
          description: Location Id
          example: S001
        capacitySegment:
          type: string
          description: Capacity Segment
          example: B2B
        cost:
          type: number
          description: Capacity cost.
          format: double
          example: 5.1
        rangeCost:
          type: array
          description: Capacity range cost.
          example:
            - min: 4
              max: 7
              cost: 5.2
            - min: 1
              max: 3
              cost: 5.5
          items:
            $ref: '#/components/schemas/CapacityRangeCostDetailResponse'
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    ItemAssociationSubstitutionDetailRequest:
      required:
        - orgId
        - parentItem
        - parentUom
        - quantity
        - sequenceId
        - substitutionId
        - uom
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        parentItem:
          type: string
          description: Item Association parent item
          example: Prod1
        parentUom:
          type: string
          description: Unit Of Measure for parentItem
          example: EACH
        sequenceId:
          type: integer
          description: Item Association sequence
          format: int32
          example: 1
        substitutionId:
          type: string
          description: Item Association product Id
          example: Prod1
        uom:
          type: string
          description: Item Association uom
          example: EACH
        quantity:
          type: integer
          description: Item Association quantity
          format: int32
          example: 1
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
      description: Request contain item association information.
    ItemAssociationSubstitutionDetailResponse:
      required:
        - orgId
        - parentItem
        - parentUom
        - quantity
        - sequenceId
        - substitutionId
        - uom
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        parentItem:
          type: string
          description: Item Association parent item
          example: Prod1
        parentUom:
          type: string
          description: Unit Of Measure for parentItem
          example: EACH
        sequenceId:
          type: integer
          description: Item Association sequence
          format: int32
          example: 1
        substitutionId:
          type: string
          description: Item Association product Id
          example: Prod1
        uom:
          type: string
          description: Item Association uom
          example: EACH
        quantity:
          type: integer
          description: Item Association quantity
          format: int32
          example: 1
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    ItemAssociationSubstitutionTypeDetailRequest:
      required:
        - orgId
        - parentItem
        - parentUom
        - substitutionType
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        parentItem:
          type: string
          description: Item Association parent item
          example: Prod1
        parentUom:
          type: string
          description: Unit Of Measure for parentItem
          example: EACH
        substitutionType:
          type: string
          description: Item Association substitution type
          example: REGULAR
          enum:
            - REGULAR
            - OPTIMIZE
            - REGULAR, OPTIMIZE
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
      description: Request contain item association information.
    ItemAssociationSubstitutionTypeDetailResponse:
      required:
        - orgId
        - parentItem
        - parentUom
        - substitutionType
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        parentItem:
          type: string
          description: Item Association parent item
          example: Prod1
        parentUom:
          type: string
          description: Unit Of Measure for parentItem
          example: EACH
        substitutionType:
          type: string
          description: Item Association substitution type
          example: REGULAR
          enum:
            - REGULAR
            - OPTIMIZE
            - REGULAR, OPTIMIZE
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    ItemAssociationGroupDetailRequest:
      required:
        - groupId
        - orgId
        - productIds
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        groupId:
          type: string
          description: Item Association group id
          example: '123'
        productIds:
          uniqueItems: true
          type: array
          description: Item Association product group
          example:
            - productId: Prod1
              uom: PIECE
          items:
            $ref: '#/components/schemas/ProductGroupDetailRequest'
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
      description: Request contain item association information.
    ProductGroupDetailRequest:
      required:
        - productId
        - uom
      type: object
      properties:
        productId:
          type: string
          description: Item Association product Id
          example: Prod1
        uom:
          type: string
          description: Item Association uom
          example: EACH
      description: item information
      example:
        - productId: Prod1
          uom: PIECE
    ItemAssociationGroupDetailResponse:
      required:
        - groupId
        - orgId
        - productIds
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        groupId:
          type: string
          description: Item Association group id
          example: '123'
        productIds:
          uniqueItems: true
          type: array
          description: Item Association product group
          example:
            - productId: Prod1
              uom: PIECE
          items:
            $ref: '#/components/schemas/ProductGroupDetailResponse'
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    ProductGroupDetailResponse:
      required:
        - productId
        - uom
      type: object
      properties:
        productId:
          type: string
          description: Item Association product Id
          example: Prod1
        uom:
          type: string
          description: Item Association uom
          example: EACH
      description: Item Association product group
      example:
        - productId: Prod1
          uom: PIECE
    ItemAssociationBundleDetailRequest:
      required:
        - bundleId
        - deliveryConstraint
        - eligibilityLevel
        - orgId
        - productIds
        - productSubstitutionEnabled
        - safetyStockLevel
        - shippingConstraint
        - uom
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        bundleId:
          type: string
          description: Item Association bundle id
          example: bundle1
        uom:
          type: string
          description: Item Association uom
          example: EACH
        deliveryConstraint:
          type: string
          description: Item Association substitution type
          example: DELIVER_TOGETHER
          enum:
            - DELIVER_TOGETHER
            - DELIVER_SEPARATE
            - DELIVER_TOGETHER
        shippingConstraint:
          type: string
          description: Item Association substitution type
          example: SHIP_TOGETHER
          enum:
            - SHIP_TOGETHER
            - SHIP_SEPARATE
            - SHIP_TOGETHER
        productIds:
          uniqueItems: true
          type: array
          description: Item Association product bundle
          example:
            - productId: Prod1
              uom: PIECE
              quantity: '1'
          items:
            $ref: '#/components/schemas/ProductBundleDetailRequest'
        eligibilityLevel:
          type: string
          description: Item Association substitution type
          example: BUNDLE
          enum:
            - BUNDLE
            - COMPONENT
            - BUNDLE
        safetyStockLevel:
          type: string
          description: Item Association substitution type
          example: BUNDLE
          enum:
            - BUNDLE
            - COMPONENT
            - BUNDLE
        productSubstitutionEnabled:
          type: boolean
          description: whether support product substitution inside bundle products
          example: false
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
      description: Request contain item association information.
    ProductBundleDetailRequest:
      required:
        - productId
        - quantity
        - uom
      type: object
      properties:
        productId:
          type: string
          description: Item Association product Id
          example: Prod1
        uom:
          type: string
          description: Item Association uom
          example: EACH
        quantity:
          minimum: 1
          type: integer
          description: Item Association quantity
          format: int32
          example: 1
      description: Item Association product bundle
      example:
        - productId: Prod1
          uom: PIECE
          quantity: '1'
    ItemAssociationBundleDetailResponse:
      required:
        - bundleId
        - deliveryConstraint
        - eligibilityLevel
        - orgId
        - productIds
        - productSubstitutionEnabled
        - safetyStockLevel
        - shippingConstraint
        - uom
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        bundleId:
          type: string
          description: Item Association bundle id
          example: bundle1
        uom:
          type: string
          description: Item Association uom
          example: EACH
        deliveryConstraint:
          type: string
          description: Item Association substitution type
          example: DELIVER_TOGETHER
          enum:
            - DELIVER_TOGETHER
            - DELIVER_SEPARATE
            - DELIVER_TOGETHER
        shippingConstraint:
          type: string
          description: Item Association substitution type
          example: SHIP_TOGETHER
          enum:
            - SHIP_TOGETHER
            - SHIP_SEPARATE
            - SHIP_TOGETHER
        productIds:
          uniqueItems: true
          type: array
          description: Item Association product bundle
          example:
            - productId: Prod1
              uom: PIECE
              quantity: '1'
          items:
            $ref: '#/components/schemas/ProductBundleDetailRequest'
        eligibilityLevel:
          type: string
          description: Item Association substitution type
          example: BUNDLE
          enum:
            - BUNDLE
            - COMPONENT
            - BUNDLE
        safetyStockLevel:
          type: string
          description: Item Association substitution type
          example: BUNDLE
          enum:
            - BUNDLE
            - COMPONENT
            - BUNDLE
        productSubstitutionEnabled:
          type: boolean
          description: whether support product substitution inside bundle products
          example: false
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    ItemAssociationAliasDetailRequest:
      required:
        - orgId
        - productAlias
        - productId
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productAlias:
          type: string
          description: Item Association product alias
          example: Prod1
        productId:
          type: string
          description: Item Association product Id
          example: Prod1
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
      description: Request contain item association alias information.
    ItemAssociationAliasDetailResponse:
      required:
        - orgId
        - productAlias
        - productId
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productAlias:
          type: string
          description: Item Association product alias
          example: Prod1
        productId:
          type: string
          description: Item Association product Id
          example: Prod1
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    ItemAssociationAliasTransposeDetailRequest:
      required:
        - orgId
        - productAliases
        - productId
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productId:
          type: string
          description: Item Association product Id
          example: Prod1
        productAliases:
          uniqueItems: true
          type: array
          description: Item Association product aliases
          example:
            - '1266010'
            - '1266009'
          items:
            type: string
            description: Item Association product aliases
            example: '["1266010","1266009"]'
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    ItemAssociationAliasTransposeDetailResponse:
      required:
        - orgId
        - productAliases
        - productId
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productId:
          type: string
          description: Item Association product Id
          example: Prod1
        productAliases:
          uniqueItems: true
          type: array
          description: Item Association product aliases
          example:
            - '1266010'
            - '1266009'
          items:
            type: string
            description: Item Association product aliases
            example: '["1266010","1266009"]'
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    FulfillmentTypeDetailRequest:
      required:
        - enabled
        - fulfillmentType
        - orgId
        - sellingChannel
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailRequest'
        nonCarrierFulfillment:
          type: boolean
          description: Flag for non-carrier fulfillment
          example: true
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        cutOff:
          $ref: '#/components/schemas/LocalTime'
        cutOffCalendar:
          $ref: '#/components/schemas/CutOffCalendarDetailRequest'
        workingCalendar:
          $ref: '#/components/schemas/CalendarDetailRequest'
        processingTimeBuffer:
          type: integer
          description: Processing Time Buffer in mins
          format: int32
          example: 2
        safetyStock:
          minimum: 0
          type: number
          description: Safety stock value
          format: double
          example: 2
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        atpEligibilityFactor:
          $ref: '#/components/schemas/AtpEligibilityFactorDetailRequest'
        transferFulfillmentType:
          type: string
          description: Transfer Fulfillment Type
          example: PICK
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    FulfillmentTypeDetailResponse:
      required:
        - enabled
        - fulfillmentType
        - orgId
        - sellingChannel
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailResponse'
          description: System processing time by transaction type
          example:
            PRE_SOURCING:
              min: 1
              max: 3
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        nonCarrierFulfillment:
          type: boolean
          description: Flag for non-carrier fulfillment
          example: true
        cutOff:
          $ref: '#/components/schemas/LocalTime'
        cutOffCalendar:
          $ref: '#/components/schemas/CutOffCalendarDetailResponse'
        workingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        processingTimeBuffer:
          type: integer
          description: Processing Time Buffer in mins
          format: int32
          example: 2
        safetyStock:
          type: number
          description: Safety stock value
          format: double
          example: 2
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        atpEligibilityFactor:
          $ref: '#/components/schemas/AtpEligibilityFactorDetailResponse'
        transferFulfillmentType:
          type: string
          description: Transfer Fulfillment Type
          example: PICK
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    FulfillmentServiceDetailRequest:
      required:
        - enabled
        - fulfillmentService
        - orgId
        - sellingChannel
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentService:
          type: string
          description: Fulfillment Service
          example: EXPRESS
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        cutOff:
          $ref: '#/components/schemas/LocalTime'
        cutOffCalendar:
          $ref: '#/components/schemas/CutOffCalendarDetailRequest'
        distanceLimit:
          $ref: '#/components/schemas/DistanceDetailRequest'
        workingCalendar:
          $ref: '#/components/schemas/CalendarDetailRequest'
        processingTimeBuffer:
          type: integer
          description: Processing Time Buffer in mins
          format: int32
          example: 2
        defaultTransitTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        defaultTransitTimeByCustomerRef:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailRequest'
          description: Default Transit Time by CustomerRef
          example:
            REF_1:
              min: 1
              max: 3
        transferCalendar:
          $ref: '#/components/schemas/CalendarDetailRequest'
        deliveryCalendar:
          $ref: '#/components/schemas/CalendarDetailRequest'
        transitBuffer:
          type: integer
          description: Transit buffer in days
          format: int32
          example: 3
        deliveryBuffer:
          type: integer
          description: Delivery buffer in days
          format: int32
          example: 2
        deliveryThreshold:
          type: integer
          description: Delivery Threshold in days
          format: int32
          example: 2
        minOverrideTransitTime:
          type: object
          additionalProperties:
            type: integer
            description: TNT Days is Map of Integer and Integer
            format: int32
          description: TNT Days is Map of Integer and Integer
          example:
            '1': '2'
            '3': '2'
        maxOverrideTransitTime:
          type: object
          additionalProperties:
            type: integer
            description: TNT Days is Map of Integer and Integer
            format: int32
          description: TNT Days is Map of Integer and Integer
          example:
            '1': '2'
            '3': '2'
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailRequest'
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    FulfillmentServiceDetailResponse:
      required:
        - enabled
        - fulfillmentService
        - orgId
        - sellingChannel
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentService:
          type: string
          description: Fulfillment Service
          example: EXPRESS
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        cutOff:
          $ref: '#/components/schemas/LocalTime'
        cutOffCalendar:
          $ref: '#/components/schemas/CutOffCalendarDetailResponse'
        distanceLimit:
          $ref: '#/components/schemas/DistanceDetailResponse'
        workingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        processingTimeBuffer:
          type: integer
          description: Processing Time Buffer in mins
          format: int32
          example: 2
        defaultTransitTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        defaultTransitTimeByCustomerRef:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailResponse'
          description: Default Transit Time by CustomerRef
          example:
            REF_1:
              min: 1
              max: 3
        transferCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        deliveryCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        transitBuffer:
          type: integer
          description: Transit buffer in days
          format: int32
          example: 3
        deliveryBuffer:
          type: integer
          description: Delivery buffer in days
          format: int32
          example: 2
        deliveryThreshold:
          type: integer
          description: Delivery Threshold in days
          format: int32
          example: 2
        minOverrideTransitTime:
          type: object
          additionalProperties:
            type: integer
            description: TNT Days is Map of Integer and Integer
            format: int32
          description: TNT Days is Map of Integer and Integer
          example:
            '1': '2'
            '3': '2'
        maxOverrideTransitTime:
          type: object
          additionalProperties:
            type: integer
            description: TNT Days is Map of Integer and Integer
            format: int32
          description: TNT Days is Map of Integer and Integer
          example:
            '1': '2'
            '3': '2'
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    FulfillmentServiceAssociationDetailRequest:
      required:
        - enabled
        - fulfillmentService
        - fulfillmentType
        - orgId
        - sellingChannel
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        fulfillmentService:
          type: string
          description: Fulfillment Service
          example: EXPRESS
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        deliveryTimeSlotEnable:
          type: boolean
          description: Indicates the fulfillment association is eligible for delivery slot configuration
          example: false
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    FulfillmentServiceAssociationDetailResponse:
      required:
        - enabled
        - fulfillmentService
        - fulfillmentType
        - orgId
        - sellingChannel
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        fulfillmentService:
          type: string
          description: Fulfillment Service
          example: EXPRESS
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        deliveryTimeSlotEnable:
          type: boolean
          description: Indicates the fulfillment association is eligible for delivery slot configuration
          example: false
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    LocationTypeDynamicPriorityDetailRequest:
      required:
        - enabled
        - locationType
        - orgId
        - priority
        - scoreType
        - sellingChannel
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        locationType:
          type: string
          description: Type of location
          example: STORE
        scoreType:
          type: string
          description: Score type
          example: Replenishment
        enabled:
          type: boolean
          description: 'true'
          example: false
        priority:
          type: number
          description: Priority
          format: double
          example: 10.2
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    LocationTypeDynamicPriorityDetailResponse:
      required:
        - enabled
        - locationType
        - orgId
        - priority
        - scoreType
        - sellingChannel
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        locationType:
          type: string
          description: Type of location
          example: STORE
        scoreType:
          type: string
          description: Score type
          example: Replenishment
        enabled:
          type: boolean
          description: 'true'
          example: false
        priority:
          type: number
          description: Priority
          format: double
          example: 10.2
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    LocationDynamicPriorityDetailRequest:
      required:
        - enabled
        - locationId
        - locationType
        - orgId
        - priority
        - scoreType
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        locationType:
          type: string
          description: Type of location
          example: STORE
        locationId:
          type: string
          description: Location Id
          example: S001
        scoreType:
          type: string
          description: Score type
          example: Replenishment
        enabled:
          type: boolean
          description: 'true'
          example: false
        priority:
          type: number
          description: Priority
          format: double
          example: 10.2
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    LocationDynamicPriorityDetailResponse:
      required:
        - enabled
        - locationId
        - locationType
        - orgId
        - priority
        - scoreType
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        locationType:
          type: string
          description: Type of location
          example: STORE
        locationId:
          type: string
          description: Location Id
          example: S001
        scoreType:
          type: string
          description: Score type
          example: Replenishment
        enabled:
          type: boolean
          description: 'true'
          example: false
        priority:
          type: number
          description: Priority
          format: double
          example: 10.2
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    ConfigurationHierarchyDetailRequest:
      required:
        - configurationType
        - entities
        - operationType
        - orgId
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        configurationType:
          type: string
          description: Configuration Type.
          example: LOCATION_FULFILLMENT_SERVICE_DELIVERY_BUFFER
        operationType:
          type: string
          description: Operation to be applied on the configuration.
          example: SEQUENCE
          enum:
            - SEQUENCE, MIN, MAX, ALL_TRUE
        entities:
          type: object
          additionalProperties:
            type: string
            description: Sequence in which the entities should be considered.
            example: '{"1":"TRANSIT_TIME_FULFILLMENT_SERVICE","2":"LOCATION_FULFILLMENT_SERVICE","3":"LOCATION_TYPE_FULFILLMENT_SERVICE","4":"FULFILLMENT_SERVICE"}'
          description: Sequence in which the entities should be considered.
          example:
            '1': TRANSIT_TIME_FULFILLMENT_SERVICE
            '2': LOCATION_FULFILLMENT_SERVICE
            '3': LOCATION_TYPE_FULFILLMENT_SERVICE
            '4': FULFILLMENT_SERVICE
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    ConfigurationHierarchyDetailResponse:
      required:
        - configurationType
        - entities
        - operationType
        - orgId
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        configurationType:
          type: string
          description: Configuration Type.
          example: LOCATION_FULFILLMENT_SERVICE_DELIVERY_BUFFER
        operationType:
          type: string
          description: Operation to be applied on the configuration.
          example: SEQUENCE
          enum:
            - SEQUENCE, MIN, MAX, ALL_TRUE
        entities:
          type: object
          additionalProperties:
            type: string
            description: Sequence in which the entities should be considered.
            example: '{"1":"TRANSIT_TIME_FULFILLMENT_SERVICE","2":"LOCATION_FULFILLMENT_SERVICE","3":"LOCATION_TYPE_FULFILLMENT_SERVICE","4":"FULFILLMENT_SERVICE"}'
          description: Sequence in which the entities should be considered.
          example:
            '1': TRANSIT_TIME_FULFILLMENT_SERVICE
            '2': LOCATION_FULFILLMENT_SERVICE
            '3': LOCATION_TYPE_FULFILLMENT_SERVICE
            '4': FULFILLMENT_SERVICE
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    CalendarDefinitionDetailRequest:
      required:
        - calendarDescription
        - calendarId
        - enabled
        - orgId
        - regularWeekShiftDetails
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        calendarId:
          type: string
          description: Calendar Id
          example: CAL_001
        calendarDescription:
          type: string
          description: Short and precise description for Calendar
          example: Seasonal
        regularWeekShiftDetails:
          type: object
          additionalProperties:
            uniqueItems: true
            type: array
            description: Shift Detail
            example:
              MONDAY:
                - startTime: '00:00:00'
                  endTime: '23:59:59'
              TUESDAY:
                - startTime: '00:00:00'
                  endTime: '23:59:59'
              WEDNESDAY:
                - startTime: '00:00:00'
                  endTime: '23:59:59'
              THURSDAY:
                - startTime: '00:00:00'
                  endTime: '23:59:59'
              FRIDAY:
                - startTime: '00:00:00'
                  endTime: '23:59:59'
            items:
              $ref: '#/components/schemas/ShiftDetailRequest'
          description: Shift Detail
          example:
            MONDAY:
              - startTime: '00:00:00'
                endTime: '23:59:59'
            TUESDAY:
              - startTime: '00:00:00'
                endTime: '23:59:59'
            WEDNESDAY:
              - startTime: '00:00:00'
                endTime: '23:59:59'
            THURSDAY:
              - startTime: '00:00:00'
                endTime: '23:59:59'
            FRIDAY:
              - startTime: '00:00:00'
                endTime: '23:59:59'
        overrideDaysDetails:
          type: object
          additionalProperties:
            uniqueItems: true
            type: array
            description: Override days details
            example:
              '2018-12-31':
                - startTime: '00:00:00'
                  endTime: '23:59:59'
              '2018-11-30':
                - startTime: '00:00:00'
                  endTime: '23:59:59'
            items:
              $ref: '#/components/schemas/ShiftDetailRequest'
          description: Override days details
          example:
            '2018-12-31':
              - startTime: '00:00:00'
                endTime: '23:59:59'
            '2018-11-30':
              - startTime: '00:00:00'
                endTime: '23:59:59'
        enabled:
          type: boolean
          description: Calendar Enabled flag
          example: true
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    CalendarDefinitionDetailResponse:
      required:
        - calendarId
        - enabled
        - orgId
        - regularWeekShiftDetails
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        calendarId:
          type: string
          description: Calendar Id
          example: CAL_001
        calendarDescription:
          type: string
          description: Short and precise description for Calendar
          example: Seasonal
        regularWeekShiftDetails:
          type: object
          additionalProperties:
            uniqueItems: true
            type: array
            description: Shift Detail
            example:
              MONDAY:
                - startTime: '00:00:00'
                  endTime: '23:59:59'
              TUESDAY:
                - startTime: '00:00:00'
                  endTime: '23:59:59'
              WEDNESDAY:
                - startTime: '00:00:00'
                  endTime: '23:59:59'
              THURSDAY:
                - startTime: '00:00:00'
                  endTime: '23:59:59'
              FRIDAY:
                - startTime: '00:00:00'
                  endTime: '23:59:59'
            items:
              $ref: '#/components/schemas/ShiftDetailResponse'
          description: Shift Detail
          example:
            MONDAY:
              - startTime: '00:00:00'
                endTime: '23:59:59'
            TUESDAY:
              - startTime: '00:00:00'
                endTime: '23:59:59'
            WEDNESDAY:
              - startTime: '00:00:00'
                endTime: '23:59:59'
            THURSDAY:
              - startTime: '00:00:00'
                endTime: '23:59:59'
            FRIDAY:
              - startTime: '00:00:00'
                endTime: '23:59:59'
        overrideDaysDetails:
          type: object
          additionalProperties:
            uniqueItems: true
            type: array
            description: Override days details
            example:
              '2018-12-31':
                - startTime: '00:00:00'
                  endTime: '23:59:59'
              '2018-11-30':
                - startTime: '00:00:00'
                  endTime: '23:59:59'
            items:
              $ref: '#/components/schemas/ShiftDetailResponse'
          description: Override days details
          example:
            '2018-12-31':
              - startTime: '00:00:00'
                endTime: '23:59:59'
            '2018-11-30':
              - startTime: '00:00:00'
                endTime: '23:59:59'
        enabled:
          type: boolean
          description: Calendar Enabled flag
          example: true
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    ValidationConfigDetail:
      type: object
      properties:
        validationType:
          type: string
          enum:
            - STRING
            - NUMBER
            - DATE
        propertyName:
          type: string
        minLength:
          type: integer
          format: int32
        maxLength:
          type: integer
          format: int32
        minValue:
          type: number
          format: double
        maxValue:
          type: number
          format: double
        pattern:
          type: string
        defaultPatternName:
          type: string
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    DescriptionDetail:
      type: object
      properties:
        shortDescription:
          type: string
        longDescription:
          type: string
    DimensionDetail:
      type: object
      properties:
        value:
          type: number
          format: double
        uom:
          type: string
          enum:
            - cm
            - in
            - m
            - ft
    DimensionsDetail:
      type: object
      properties:
        length:
          $ref: '#/components/schemas/DimensionDetail'
        height:
          $ref: '#/components/schemas/DimensionDetail'
        width:
          $ref: '#/components/schemas/DimensionDetail'
    PriceDetail:
      type: object
      properties:
        type:
          type: string
        value:
          type: number
          format: double
        currency:
          type: object
          properties:
            currencyCode:
              type: string
            defaultFractionDigits:
              type: integer
              format: int32
            numericCode:
              type: integer
              format: int32
            displayName:
              type: string
            symbol:
              type: string
            numericCodeAsString:
              type: string
    ProductDetail:
      type: object
      properties:
        orgId:
          type: string
        productId:
          type: string
        productCategory:
          type: string
        productClass:
          type: string
        productType:
          type: string
        productLaunchDate:
          type: string
          format: date
        productLaunchTime:
          $ref: '#/components/schemas/LocalTime'
        status:
          type: string
        enabled:
          type: boolean
        uom:
          type: string
        trackingLevel:
          type: string
          enum:
            - EPC
            - SKU
        supplierSourcing:
          type: boolean
        trackInventory:
          type: boolean
        sourcingClassification:
          type: string
        shipAlone:
          type: boolean
        gtin:
          type: string
        description:
          $ref: '#/components/schemas/DescriptionDetail'
        weight:
          $ref: '#/components/schemas/WeightDetail'
        dimensions:
          $ref: '#/components/schemas/DimensionsDetail'
        prices:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PriceDetail'
        streetDate:
          type: string
          format: date
        streetDateType:
          type: string
          enum:
            - SHIP
            - DELIVER
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    WeightDetail:
      type: object
      properties:
        value:
          type: number
          format: double
        uom:
          type: string
          enum:
            - kg
            - gm
            - lb
    ProductSupplierAssociationDetail:
      type: object
      properties:
        orgId:
          type: string
        productId:
          type: string
        uom:
          type: string
        locationType:
          type: string
        locationId:
          type: string
        enabled:
          type: boolean
        sequence:
          type: integer
          format: int32
        leadTimeQuantity:
          type: number
          format: double
        supplierMessage:
          type: string
        leadTimeMin:
          type: integer
          format: int32
        leadTimeMax:
          type: integer
          format: int32
        leadTimePreference:
          type: string
          enum:
            - MIN
            - MAX
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    GtinDetail:
      type: object
      properties:
        orgId:
          type: string
        gtin:
          type: string
        productIds:
          uniqueItems: true
          type: array
          items:
            type: string
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    AtpEligibilityFactorDetail:
      type: object
      properties:
        locationCount:
          type: integer
          format: int32
        minLocationAtp:
          type: integer
          format: int32
        minNetworkAtp:
          type: integer
          format: int32
    MinMaxDetail:
      type: object
      properties:
        min:
          type: integer
          format: int32
        max:
          type: integer
          format: int32
    ProductFulfillmentTypeDetail:
      type: object
      properties:
        orgId:
          type: string
        productId:
          type: string
        uom:
          type: string
        sellingChannel:
          type: string
        fulfillmentType:
          type: string
        enabled:
          type: boolean
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetail'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        safetyStock:
          type: number
          format: double
        shelfLife:
          type: integer
          format: int32
        temporaryDisableExpirationTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
        atpEligibilityFactor:
          $ref: '#/components/schemas/AtpEligibilityFactorDetail'
    ProductFulfillmentServiceDetail:
      type: object
      properties:
        orgId:
          type: string
        productId:
          type: string
        uom:
          type: string
        sellingChannel:
          type: string
        fulfillmentService:
          type: string
        enabled:
          type: boolean
        temporaryDisableExpirationTime:
          type: string
          format: date-time
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    ProductClassDetail:
      type: object
      properties:
        orgId:
          type: string
        sellingChannel:
          type: string
        productClass:
          type: string
        enabled:
          type: boolean
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    ProductClassLocationTypeFulfillmentTypeDetail:
      type: object
      properties:
        orgId:
          type: string
        productClass:
          type: string
        sellingChannel:
          type: string
        locationType:
          type: string
        fulfillmentType:
          type: string
        enabled:
          type: boolean
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetail'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        safetyStock:
          type: number
          format: double
        shelfLife:
          type: integer
          format: int32
        temporaryDisableExpirationTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    ProductClassLocationTypeFulfillmentServiceDetail:
      type: object
      properties:
        orgId:
          type: string
        productClass:
          type: string
        sellingChannel:
          type: string
        locationType:
          type: string
        fulfillmentService:
          type: string
        enabled:
          type: boolean
        temporaryDisableExpirationTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
    ProductClassFulfillmentTypeDetail:
      type: object
      properties:
        orgId:
          type: string
        productClass:
          type: string
        sellingChannel:
          type: string
        fulfillmentType:
          type: string
        enabled:
          type: boolean
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetail'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        safetyStock:
          type: number
          format: double
        shelfLife:
          type: integer
          format: int32
        temporaryDisableExpirationTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
        atpEligibilityFactor:
          $ref: '#/components/schemas/AtpEligibilityFactorDetail'
    ProductClassFulfillmentServiceDetail:
      type: object
      properties:
        orgId:
          type: string
        productClass:
          type: string
        sellingChannel:
          type: string
        fulfillmentService:
          type: string
        enabled:
          type: boolean
        temporaryDisableExpirationTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
    ProductClassCategoryTransposeDetailRequest:
      required:
        - orgId
        - productCategory
        - productClass
        - productId
        - uom
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productClass:
          type: string
          description: Product Class
          example: Electronics
        productCategory:
          type: string
          description: Product Category
          example: Camera
        productId:
          type: string
          description: Product Id
          example: '1266009'
        uom:
          type: string
          description: Unit of measure
          example: EACH
        updateUser:
          type: string
          description: Updated User
          example: THOR
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
    ProductClassCategoryTransposeDetailResponse:
      required:
        - orgId
        - productCategory
        - productClass
        - productId
        - uom
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productCategory:
          type: string
          description: Product Category
          example: Camera
        productClass:
          type: string
          description: Product Class
          example: Electronics
        productId:
          type: string
          description: Product Id
          example: '1266009'
        uom:
          type: string
          description: Unit of measure
          example: EACH
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    ProductClassCategoryTransposeDetail:
      type: object
      properties:
        orgId:
          type: string
        productClass:
          type: string
        productCategory:
          type: string
        productId:
          type: string
        uom:
          type: string
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    ProductCategoryDetail:
      type: object
      properties:
        orgId:
          type: string
        productCategory:
          type: string
        productClass:
          type: string
        sellingChannel:
          type: string
        enabled:
          type: boolean
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    ProductCategoryLocationTypeFulfillmentTypeDetail:
      type: object
      properties:
        orgId:
          type: string
        productCategory:
          type: string
        sellingChannel:
          type: string
        locationType:
          type: string
        fulfillmentType:
          type: string
        enabled:
          type: boolean
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetail'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        safetyStock:
          type: number
          format: double
        shelfLife:
          type: integer
          format: int32
        temporaryDisableExpirationTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    ProductCategoryLocationTypeFulfillmentServiceDetail:
      type: object
      properties:
        orgId:
          type: string
        productCategory:
          type: string
        sellingChannel:
          type: string
        locationType:
          type: string
        fulfillmentService:
          type: string
        enabled:
          type: boolean
        temporaryDisableExpirationTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
    ProductCategoryFulfillmentTypeDetail:
      type: object
      properties:
        orgId:
          type: string
        productCategory:
          type: string
        sellingChannel:
          type: string
        fulfillmentType:
          type: string
        enabled:
          type: boolean
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetail'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        safetyStock:
          type: number
          format: double
        shelfLife:
          type: integer
          format: int32
        temporaryDisableExpirationTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
        atpEligibilityFactor:
          $ref: '#/components/schemas/AtpEligibilityFactorDetail'
    ProductCategoryFulfillmentServiceDetail:
      type: object
      properties:
        orgId:
          type: string
        productCategory:
          type: string
        sellingChannel:
          type: string
        fulfillmentService:
          type: string
        enabled:
          type: boolean
        temporaryDisableExpirationTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
    ProductLocationTypeFulfillmentTypeDetail:
      type: object
      properties:
        orgId:
          type: string
        productId:
          type: string
        uom:
          type: string
        sellingChannel:
          type: string
        locationType:
          type: string
        fulfillmentType:
          type: string
        enabled:
          type: boolean
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetail'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        safetyStock:
          type: number
          format: double
        shelfLife:
          type: integer
          format: int32
        temporaryDisableExpirationTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    CalendarDetail:
      type: object
      properties:
        calendarId:
          type: string
        regularWeekShiftDetails:
          type: object
          additionalProperties:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/ShiftDetail'
        overrideDaysDetails:
          type: object
          additionalProperties:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/ShiftDetail'
        enabled:
          type: boolean
    ProductLocationTypeFulfillmentServiceDetail:
      type: object
      properties:
        orgId:
          type: string
        productId:
          type: string
        uom:
          type: string
        sellingChannel:
          type: string
        locationType:
          type: string
        fulfillmentService:
          type: string
        enabled:
          type: boolean
        temporaryDisableExpirationTime:
          type: string
          format: date-time
        inboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        inboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetail'
        outboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        outboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetail'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    ShiftDetail:
      type: object
      properties:
        startTime:
          $ref: '#/components/schemas/LocalTime'
        endTime:
          $ref: '#/components/schemas/LocalTime'
    ProductLocationFulfillmentTypeDetail:
      type: object
      properties:
        orgId:
          type: string
        productId:
          type: string
        uom:
          type: string
        locationType:
          type: string
        locationId:
          type: string
        sellingChannel:
          type: string
        fulfillmentType:
          type: string
        enabled:
          type: boolean
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetail'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        safetyStock:
          type: number
          format: double
        shelfLife:
          type: integer
          format: int32
        temporaryDisableExpirationTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    ProductLocationFulfillmentServiceDetail:
      type: object
      properties:
        orgId:
          type: string
        productId:
          type: string
        uom:
          type: string
        locationType:
          type: string
        locationId:
          type: string
        sellingChannel:
          type: string
        fulfillmentService:
          type: string
        enabled:
          type: boolean
        temporaryDisableExpirationTime:
          type: string
          format: date-time
        inboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        inboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetail'
        outboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        outboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetail'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    OrgDetail:
      type: object
      properties:
        orgId:
          type: string
        systemHoldTime:
          type: integer
          format: int32
        transactionalSystemHoldTime:
          type: object
          additionalProperties:
            type: integer
            format: int32
        systemLocale:
          type: object
          properties:
            id:
              type: string
            rules:
              type: object
              properties:
                fixedOffset:
                  type: boolean
                transitions:
                  type: array
                  items:
                    type: object
                    properties:
                      offsetBefore:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      offsetAfter:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      duration:
                        type: object
                        properties:
                          seconds:
                            type: integer
                            format: int64
                          nano:
                            type: integer
                            format: int32
                          negative:
                            type: boolean
                          zero:
                            type: boolean
                          units:
                            type: array
                            items:
                              type: object
                              properties:
                                dateBased:
                                  type: boolean
                                timeBased:
                                  type: boolean
                                durationEstimated:
                                  type: boolean
                      gap:
                        type: boolean
                      dateTimeBefore:
                        type: string
                        format: date-time
                      dateTimeAfter:
                        type: string
                        format: date-time
                      overlap:
                        type: boolean
                      instant:
                        type: string
                        format: date-time
                transitionRules:
                  type: array
                  items:
                    type: object
                    properties:
                      month:
                        type: string
                        enum:
                          - JANUARY
                          - FEBRUARY
                          - MARCH
                          - APRIL
                          - MAY
                          - JUNE
                          - JULY
                          - AUGUST
                          - SEPTEMBER
                          - OCTOBER
                          - NOVEMBER
                          - DECEMBER
                      timeDefinition:
                        type: string
                        enum:
                          - UTC
                          - WALL
                          - STANDARD
                      standardOffset:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      offsetBefore:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      offsetAfter:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      dayOfWeek:
                        type: string
                        enum:
                          - MONDAY
                          - TUESDAY
                          - WEDNESDAY
                          - THURSDAY
                          - FRIDAY
                          - SATURDAY
                          - SUNDAY
                      dayOfMonthIndicator:
                        type: integer
                        format: int32
                      localTime:
                        $ref: '#/components/schemas/LocalTime'
                      midnightEndOfDay:
                        type: boolean
        optimizationRuleId:
          type: string
        transferOptimizationRuleId:
          type: string
        locationOrg:
          type: string
        configurationHierarchyOrg:
          type: string
        transitOrg:
          type: string
        availabilityOrg:
          type: string
        fulfillmentOrg:
          type: string
        catalogOrg:
          type: string
        eligibilityOrg:
          type: string
        inventoryOrg:
          type: string
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    OrgSellingChannelDetail:
      type: object
      properties:
        orgId:
          type: string
        sellingChannel:
          type: string
        enabled:
          type: boolean
        systemHoldTime:
          type: integer
          format: int32
        transactionalSystemHoldTime:
          type: object
          additionalProperties:
            type: integer
            format: int32
        optimizationRuleId:
          type: string
        transferOptimizationRuleId:
          type: string
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    AddressDetail:
      type: object
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        state:
          type: string
        country:
          type: string
        zipCode:
          type: string
    ContactDetail:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        phone:
          type: string
        email:
          type: string
    LocationDetail:
      type: object
      properties:
        orgId:
          type: string
        locationType:
          type: string
        locationId:
          type: string
        locationName:
          type: string
        trackingLevel:
          type: string
          enum:
            - EPC
            - SKU
        trackCapacity:
          type: boolean
        trackDeliveryCapacity:
          type: boolean
        enabled:
          type: boolean
        priority:
          type: number
          format: double
        address:
          $ref: '#/components/schemas/AddressDetail'
        contact:
          $ref: '#/components/schemas/ContactDetail'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        workingCalendar:
          $ref: '#/components/schemas/CalendarDetail'
        locale:
          type: object
          properties:
            id:
              type: string
            rules:
              type: object
              properties:
                fixedOffset:
                  type: boolean
                transitions:
                  type: array
                  items:
                    type: object
                    properties:
                      offsetBefore:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      offsetAfter:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      duration:
                        type: object
                        properties:
                          seconds:
                            type: integer
                            format: int64
                          nano:
                            type: integer
                            format: int32
                          negative:
                            type: boolean
                          zero:
                            type: boolean
                          units:
                            type: array
                            items:
                              type: object
                              properties:
                                dateBased:
                                  type: boolean
                                timeBased:
                                  type: boolean
                                durationEstimated:
                                  type: boolean
                      gap:
                        type: boolean
                      dateTimeBefore:
                        type: string
                        format: date-time
                      dateTimeAfter:
                        type: string
                        format: date-time
                      overlap:
                        type: boolean
                      instant:
                        type: string
                        format: date-time
                transitionRules:
                  type: array
                  items:
                    type: object
                    properties:
                      month:
                        type: string
                        enum:
                          - JANUARY
                          - FEBRUARY
                          - MARCH
                          - APRIL
                          - MAY
                          - JUNE
                          - JULY
                          - AUGUST
                          - SEPTEMBER
                          - OCTOBER
                          - NOVEMBER
                          - DECEMBER
                      timeDefinition:
                        type: string
                        enum:
                          - UTC
                          - WALL
                          - STANDARD
                      standardOffset:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      offsetBefore:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      offsetAfter:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      dayOfWeek:
                        type: string
                        enum:
                          - MONDAY
                          - TUESDAY
                          - WEDNESDAY
                          - THURSDAY
                          - FRIDAY
                          - SATURDAY
                          - SUNDAY
                      dayOfMonthIndicator:
                        type: integer
                        format: int32
                      localTime:
                        $ref: '#/components/schemas/LocalTime'
                      midnightEndOfDay:
                        type: boolean
        temporaryDisableExpirationTime:
          type: string
          format: date-time
        stockoutDays:
          type: integer
          format: int32
        transferEnabled:
          type: boolean
        inboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        inboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetail'
        outboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        outboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetail'
        futureInventoryProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    TemporaryDisableExpirationTimeRequest:
      required:
        - temporaryDisableExpirationTime
      type: object
      properties:
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
      description: Request contain temporary disable expiration time information.
    LocationTypeDetail:
      type: object
      properties:
        orgId:
          type: string
        locationType:
          type: string
        sellingChannel:
          type: string
        enabled:
          type: boolean
        trackCapacity:
          type: boolean
        trackDeliveryCapacity:
          type: boolean
        priority:
          type: number
          format: double
        workingCalendar:
          $ref: '#/components/schemas/CalendarDetail'
        temporaryDisableExpirationTime:
          type: string
          format: date-time
        stockoutDays:
          type: integer
          format: int32
        markdownProlongDays:
          type: integer
          format: int32
        markdownOptimizationEnabled:
          type: boolean
        transferEnabled:
          type: boolean
        inboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        inboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetail'
        outboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        outboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetail'
        futureInventoryProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    CutOffCalendarDetail:
      type: object
      properties:
        calendarId:
          type: string
        regularWeekCutOffs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LocalTime'
        overrideDaysCutOffs:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LocalTime'
        enabled:
          type: boolean
    LocationTypeAndFulfillmentTypeDetail:
      type: object
      properties:
        orgId:
          type: string
        locationType:
          type: string
        sellingChannel:
          type: string
        fulfillmentType:
          type: string
        enabled:
          type: boolean
        cutOff:
          $ref: '#/components/schemas/LocalTime'
        cutOffCalendar:
          $ref: '#/components/schemas/CutOffCalendarDetail'
        workingCalendar:
          $ref: '#/components/schemas/CalendarDetail'
        processingTimeBuffer:
          type: integer
          format: int32
        safetyStock:
          type: number
          format: double
        temporaryDisableExpirationTime:
          type: string
          format: date-time
        transferEnabled:
          type: boolean
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetail'
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    DistanceDetail:
      type: object
      properties:
        value:
          type: number
          format: double
        uom:
          type: string
          enum:
            - km
            - m
            - mi
    LocationTypeAndFulfillmentServiceDetail:
      type: object
      properties:
        orgId:
          type: string
        locationType:
          type: string
        sellingChannel:
          type: string
        fulfillmentService:
          type: string
        enabled:
          type: boolean
        distanceLimit:
          $ref: '#/components/schemas/DistanceDetail'
        cutOff:
          $ref: '#/components/schemas/LocalTime'
        cutOffCalendar:
          $ref: '#/components/schemas/CutOffCalendarDetail'
        workingCalendar:
          $ref: '#/components/schemas/CalendarDetail'
        transferCalendar:
          $ref: '#/components/schemas/CalendarDetail'
        deliveryCalendar:
          $ref: '#/components/schemas/CalendarDetail'
        processingTimeBuffer:
          type: integer
          format: int32
        temporaryDisableExpirationTime:
          type: string
          format: date-time
        transitBuffer:
          type: integer
          format: int32
        deliveryBuffer:
          type: integer
          format: int32
        transferEnabled:
          type: boolean
        inboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        inboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetail'
        outboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        outboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetail'
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
    CapacityRangeCostDetail:
      type: object
      properties:
        min:
          type: integer
          format: int32
        max:
          type: integer
          format: int32
        cost:
          type: number
          format: double
    LocationTypeCapacityCostDetail:
      type: object
      properties:
        orgId:
          type: string
        locationType:
          type: string
        capacitySegment:
          type: string
        cost:
          type: number
          format: double
        rangeCost:
          type: array
          items:
            $ref: '#/components/schemas/CapacityRangeCostDetail'
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    LocationAndFulfillmentTypeDetail:
      type: object
      properties:
        orgId:
          type: string
        locationType:
          type: string
        locationId:
          type: string
        sellingChannel:
          type: string
        fulfillmentType:
          type: string
        enabled:
          type: boolean
        cutOff:
          $ref: '#/components/schemas/LocalTime'
        cutOffCalendar:
          $ref: '#/components/schemas/CutOffCalendarDetail'
        workingCalendar:
          $ref: '#/components/schemas/CalendarDetail'
        processingTimeBuffer:
          type: integer
          format: int32
        safetyStock:
          type: number
          format: double
        temporaryDisableExpirationTime:
          type: string
          format: date-time
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        transferEnabled:
          type: boolean
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetail'
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    LocationAndFulfillmentServiceDetail:
      type: object
      properties:
        orgId:
          type: string
        locationType:
          type: string
        locationId:
          type: string
        sellingChannel:
          type: string
        fulfillmentService:
          type: string
        enabled:
          type: boolean
        distanceLimit:
          $ref: '#/components/schemas/DistanceDetail'
        cutOff:
          $ref: '#/components/schemas/LocalTime'
        cutOffCalendar:
          $ref: '#/components/schemas/CutOffCalendarDetail'
        workingCalendar:
          $ref: '#/components/schemas/CalendarDetail'
        transferCalendar:
          $ref: '#/components/schemas/CalendarDetail'
        deliveryCalendar:
          $ref: '#/components/schemas/CalendarDetail'
        processingTimeBuffer:
          type: integer
          format: int32
        temporaryDisableExpirationTime:
          type: string
          format: date-time
        transitBuffer:
          type: integer
          format: int32
        deliveryBuffer:
          type: integer
          format: int32
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        transferEnabled:
          type: boolean
        inboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        inboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetail'
        outboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        outboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetail'
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    LocationCapacityCostDetail:
      type: object
      properties:
        orgId:
          type: string
        locationType:
          type: string
        locationId:
          type: string
        capacitySegment:
          type: string
        cost:
          type: number
          format: double
        rangeCost:
          type: array
          items:
            $ref: '#/components/schemas/CapacityRangeCostDetail'
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    KafkaRestProxyRequest:
      required:
        - key
        - operation
        - topic
        - value
      type: object
      properties:
        topic:
          type: string
          description: Kafka topic
          example: product
        key:
          type: object
          additionalProperties:
            type: object
            description: Key to publish
            example:
              orgId: ORG001
              productId: '1266009'
              uom: EACH
          description: Key to publish
          example:
            orgId: ORG001
            productId: '1266009'
            uom: EACH
        value:
          type: object
          additionalProperties:
            type: object
            description: Value to publish
            example:
              enabled: true
              gtin: '12345678'
              orgId: ORG001
              productCategory: Camera
              productClass: Electronics
              productId: '1266009'
              productLaunchDate: '2018-06-21'
              productType: Hazmat
              shipAlone: true
              sourcingClassification: DC
              status: Enabled
              uom: EACH
              updateUser: THOR
          description: Value to publish
          example:
            enabled: true
            gtin: '12345678'
            orgId: ORG001
            productCategory: Camera
            productClass: Electronics
            productId: '1266009'
            productLaunchDate: '2018-06-21'
            productType: Hazmat
            shipAlone: true
            sourcingClassification: DC
            status: Enabled
            uom: EACH
            updateUser: THOR
        operation:
          type: string
          description: Publish Operation - Create / Delete / Patch
          example: CREATE
          enum:
            - CREATE
            - UPDATE
            - DELETE
            - RELOAD
            - EVICT
            - UPDATE_TRANSIENT
            - PATCH
            - UPDATE_OR_CREATE
            - CLEAR_ALL
            - CREATE, DELETE, PATCH
        isFullyQualifiedTopicName:
          type: boolean
          description: Is provided topic name fully qualified? If true, then topic name will not be modified.
          example: false
          default: false
      description: Request contain Kafka message information.
    KafkaRequest:
      required:
        - key
        - operation
        - value
      type: object
      properties:
        key:
          type: object
          additionalProperties:
            type: object
            description: Key to publish
            example:
              orgId: ORG001
              productId: '1266009'
              uom: EACH
          description: Key to publish
          example:
            orgId: ORG001
            productId: '1266009'
            uom: EACH
        value:
          type: object
          additionalProperties:
            type: object
            description: Value to publish
            example:
              enabled: true
              gtin: '12345678'
              orgId: ORG001
              productCategory: Camera
              productClass: Electronics
              productId: '1266009'
              productLaunchDate: '2018-06-21'
              productType: Hazmat
              shipAlone: true
              sourcingClassification: DC
              status: Enabled
              uom: EACH
              updateUser: THOR
          description: Value to publish
          example:
            enabled: true
            gtin: '12345678'
            orgId: ORG001
            productCategory: Camera
            productClass: Electronics
            productId: '1266009'
            productLaunchDate: '2018-06-21'
            productType: Hazmat
            shipAlone: true
            sourcingClassification: DC
            status: Enabled
            uom: EACH
            updateUser: THOR
        operation:
          type: string
          description: Publish Operation - Create / Delete / Patch
          example: CREATE
          enum:
            - CREATE
            - UPDATE
            - DELETE
            - RELOAD
            - EVICT
            - UPDATE_TRANSIENT
            - PATCH
            - UPDATE_OR_CREATE
            - CLEAR_ALL
            - CREATE, DELETE, PATCH
    ItemAssociationSubstitutionTypeDetail:
      type: object
      properties:
        orgId:
          type: string
        parentItem:
          type: string
        parentUom:
          type: string
        substitutionType:
          type: string
          enum:
            - REGULAR
            - OPTIMIZE
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    ItemAssociationSubstitutionDetail:
      type: object
      properties:
        orgId:
          type: string
        parentItem:
          type: string
        parentUom:
          type: string
        sequenceId:
          type: integer
          format: int32
        substitutionId:
          type: string
        uom:
          type: string
        quantity:
          type: integer
          format: int32
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    ItemAssociationGroupDetail:
      type: object
      properties:
        orgId:
          type: string
        groupId:
          type: string
        productIds:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ProductGroupDetail'
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    ProductGroupDetail:
      type: object
      properties:
        productId:
          type: string
        uom:
          type: string
    ItemAssociationBundleDetail:
      type: object
      properties:
        orgId:
          type: string
        bundleId:
          type: string
        uom:
          type: string
        deliveryConstraint:
          type: string
          enum:
            - DELIVER_TOGETHER
            - DELIVER_SEPARATE
        shippingConstraint:
          type: string
          enum:
            - SHIP_TOGETHER
            - SHIP_SEPARATE
        productIds:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ProductBundleDetail'
        eligibilityLevel:
          type: string
          enum:
            - BUNDLE
            - COMPONENT
        safetyStockLevel:
          type: string
          enum:
            - BUNDLE
            - COMPONENT
        productSubstitutionEnabled:
          type: boolean
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    ProductBundleDetail:
      type: object
      properties:
        productId:
          type: string
        uom:
          type: string
        quantity:
          type: integer
          format: int32
    ItemAssociationAliasDetail:
      type: object
      properties:
        orgId:
          type: string
        productAlias:
          type: string
        productId:
          type: string
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    ItemAssociationAliasTransposeDetail:
      type: object
      properties:
        orgId:
          type: string
        productId:
          type: string
        productAliases:
          uniqueItems: true
          type: array
          items:
            type: string
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    FulfillmentTypeDetail:
      type: object
      properties:
        orgId:
          type: string
        sellingChannel:
          type: string
        fulfillmentType:
          type: string
        enabled:
          type: boolean
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetail'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        cutOff:
          $ref: '#/components/schemas/LocalTime'
        cutOffCalendar:
          $ref: '#/components/schemas/CutOffCalendarDetail'
        workingCalendar:
          $ref: '#/components/schemas/CalendarDetail'
        processingTimeBuffer:
          type: integer
          format: int32
        safetyStock:
          type: number
          format: double
        temporaryDisableExpirationTime:
          type: string
          format: date-time
        nonCarrierFulfillment:
          type: boolean
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
        atpEligibilityFactor:
          $ref: '#/components/schemas/AtpEligibilityFactorDetail'
        transferFulfillmentType:
          type: string
    FulfillmentServiceDetail:
      type: object
      properties:
        orgId:
          type: string
        sellingChannel:
          type: string
        fulfillmentService:
          type: string
        enabled:
          type: boolean
        cutOff:
          $ref: '#/components/schemas/LocalTime'
        cutOffCalendar:
          $ref: '#/components/schemas/CutOffCalendarDetail'
        distanceLimit:
          $ref: '#/components/schemas/DistanceDetail'
        workingCalendar:
          $ref: '#/components/schemas/CalendarDetail'
        processingTimeBuffer:
          type: integer
          format: int32
        defaultTransitTimeByCustomerRef:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetail'
        defaultTransitTime:
          $ref: '#/components/schemas/MinMaxDetail'
        transferCalendar:
          $ref: '#/components/schemas/CalendarDetail'
        deliveryCalendar:
          $ref: '#/components/schemas/CalendarDetail'
        transitBuffer:
          type: integer
          format: int32
        deliveryBuffer:
          type: integer
          format: int32
        minOverrideTransitTime:
          type: object
          additionalProperties:
            type: integer
            format: int32
        maxOverrideTransitTime:
          type: object
          additionalProperties:
            type: integer
            format: int32
        temporaryDisableExpirationTime:
          type: string
          format: date-time
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetail'
        deliveryThreshold:
          type: integer
          format: int32
    FulfillmentServiceAssociationDetail:
      type: object
      properties:
        orgId:
          type: string
        sellingChannel:
          type: string
        fulfillmentType:
          type: string
        fulfillmentService:
          type: string
        enabled:
          type: boolean
        deliveryTimeSlotEnable:
          type: boolean
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    LocationTypeDynamicPriorityDetail:
      type: object
      properties:
        orgId:
          type: string
        sellingChannel:
          type: string
        locationType:
          type: string
        scoreType:
          type: string
        enabled:
          type: boolean
        priority:
          type: number
          format: double
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    LocationDynamicPriorityDetail:
      type: object
      properties:
        orgId:
          type: string
        locationType:
          type: string
        locationId:
          type: string
        scoreType:
          type: string
        enabled:
          type: boolean
        priority:
          type: number
          format: double
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    ConfigurationHierarchyDetail:
      type: object
      properties:
        orgId:
          type: string
        configurationType:
          type: string
        operationType:
          type: string
        entities:
          type: object
          additionalProperties:
            type: string
            enum:
              - LOCATION
              - LOCATION_FULFILLMENT_TYPE
              - LOCATION_FULFILLMENT_SERVICE
              - LOCATION_CAPACITY_COST
              - LOCATION_TYPE
              - LOCATION_TYPE_FULFILLMENT_TYPE
              - LOCATION_TYPE_FULFILLMENT_SERVICE
              - LOCATION_TYPE_CAPACITY_COST
              - PRODUCT
              - PRODUCT_FULFILLMENT_SERVICE
              - PRODUCT_FULFILLMENT_TYPE
              - PRODUCT_LOCATION_TYPE_FULFILLMENT_SERVICE
              - PRODUCT_LOCATION_TYPE_FULFILLMENT_TYPE
              - PRODUCT_LOCATION_FULFILLMENT_SERVICE
              - PRODUCT_LOCATION_FULFILLMENT_TYPE
              - PRODUCT_CATEGORY
              - PRODUCT_CATEGORY_FULFILLMENT_SERVICE
              - PRODUCT_CATEGORY_FULFILLMENT_TYPE
              - PRODUCT_CATEGORY_LOCATION_TYPE_FULFILLMENT_SERVICE
              - PRODUCT_CATEGORY_LOCATION_TYPE_FULFILLMENT_TYPE
              - PRODUCT_CLASS
              - PRODUCT_CLASS_FULFILLMENT_SERVICE
              - PRODUCT_CLASS_FULFILLMENT_TYPE
              - PRODUCT_CLASS_LOCATION_TYPE_FULFILLMENT_SERVICE
              - PRODUCT_CLASS_LOCATION_TYPE_FULFILLMENT_TYPE
              - PRODUCT_GTIN
              - FULFILLMENT_TYPE
              - FULFILLMENT_SERVICE
              - FULFILLMENT_SERVICE_ASSOCIATION
              - ORG
              - ORG_ASSOCIATION
              - ORG_SELLING_CHANNEL
              - CONFIGURATION_HIERARCHY
              - LOCATION_TYPE_DYNAMIC_PRIORITY
              - LOCATION_DYNAMIC_PRIORITY
              - CALENDAR
              - CALENDAR_DEFINITION
              - PRODUCT_SUPPLIER_ASSOCIATION
              - ITEM_ASSOCIATION_GROUP
              - ITEM_ASSOCIATION_BUNDLE
              - ITEM_ASSOCIATION_ALIAS
              - ITEM_ASSOCIATION_SUBSTITUTION
              - ITEM_ASSOCIATION_SUBSTITUTION_GET_ALL
              - ITEM_ASSOCIATION_SUBSTITUTION_TYPE
              - ITEM_ASSOCIATION_ALIAS_TRANSPOSE
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    CalendarDefinitionDetail:
      type: object
      properties:
        orgId:
          type: string
        calendarId:
          type: string
        calendarDescription:
          type: string
        regularWeekShiftDetails:
          type: object
          additionalProperties:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/ShiftDetail'
        overrideDaysDetails:
          type: object
          additionalProperties:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/ShiftDetail'
        enabled:
          type: boolean
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    BackupLoadResponse:
      required:
        - backupId
        - backupLoadState
        - endTime
        - startTime
        - tableName
        - tokenCompleted
        - tokenFailed
        - totalTokens
      type: object
      properties:
        tableName:
          type: string
          description: table name whose backup needs to be taken
          example: product
        backupId:
          type: string
          description: id that uniquely identified a table backup
          example: e480e66b-254f-4023-ba7e-af0d84877bfb
        backupLoadState:
          type: string
          description: Status of backup warm up for certain org id and table name.
          example: ACTIVE
        totalTokens:
          type: integer
          description: Total count of token ranges.
          format: int32
          example: 1000
        tokenCompleted:
          type: integer
          description: Count of processed token ranges.
          format: int32
          example: 500
        tokenFailed:
          type: integer
          description: Count of failed token ranges.
          format: int32
          example: 500
        startTime:
          type: string
          description: start time of backup
          format: date-time
        endTime:
          type: string
          description: time when backup has finished and all records are pushed to topic
          format: date-time
        tokenDetails:
          type: array
          items:
            $ref: '#/components/schemas/BackupLoadTokenResponse'
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    BackupLoadTokenResponse:
      required:
        - backupLoadState
        - end
        - endTime
        - start
        - startTime
        - tokenRangeType
        - value
      type: object
      properties:
        start:
          type: integer
          description: start token value
          format: int64
          example: -5184488354621606000
        end:
          type: integer
          description: end token value
          format: int64
          example: -5171173001483055000
        value:
          type: integer
          description: token value when type is in LESS_OR_EQUAL OR GREATER
          format: int64
          example: -8856435308137992000
        tokenRangeType:
          type: string
          description: token type
          example: BETWEEN/GREATER/LESS_OR_EQUAL
        backupLoadState:
          type: string
          description: Status of backup warm up for certain org id and table name.
          example: ACTIVE
          enum:
            - INACTIVE
            - ACTIVE
            - FINISHED
            - ERROR
            - ABORT
        startTime:
          type: string
          description: start time of token backup
          format: date-time
        endTime:
          type: string
          description: time when token has finished and all records for this token are pushed to topic
          format: date-time
    BackupLoadTokenRequest:
      required:
        - tableName
        - tokenDetails
      type: object
      properties:
        tableName:
          type: string
          description: table name whose backup needs to be taken
          example: product
        tokenDetails:
          type: array
          items:
            $ref: '#/components/schemas/CassandraTokenRangeCacheDetail'
    CassandraTokenRangeCacheDetail:
      type: object
      properties:
        start:
          type: integer
          format: int64
        end:
          type: integer
          format: int64
        value:
          type: integer
          format: int64
        tokenRangeType:
          type: string
    ProductBundleDetailDeleteRequest:
      required:
        - productId
        - uom
      type: object
      properties:
        productId:
          type: string
          description: Item Association product Id
          example: Prod1
        uom:
          type: string
          description: Item Association uom
          example: EACH
    ProductSupplierDetailsByProductResponse:
      required:
        - orgId
        - productId
        - uom
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productId:
          type: string
          description: Product Id
          example: '1266009'
        uom:
          type: string
          description: Unit of measure
          example: EACH
        supplierDetails:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SupplierResponse'
    SupplierResponse:
      required:
        - enabled
        - locationId
        - locationType
        - sequence
        - updateTime
      type: object
      properties:
        locationType:
          type: string
          description: Type of location
          example: STORE
        locationId:
          type: string
          description: Location Id
          example: S001
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        sequence:
          type: integer
          description: Sequence priority
          format: int32
          example: 1
        leadTimeQuantity:
          type: number
          description: Supplier Lead Time Quantity
          format: double
          example: 10.5
        supplierMessage:
          type: string
          description: Supplier message
          example: 2 days to 4 days
        leadTimeMin:
          type: integer
          description: Supplier Minimum Lead Time in days
          format: int32
          example: 2
        leadTimeMax:
          type: integer
          description: Supplier Maximum Lead Time in days
          format: int32
          example: 4
        leadTimePreference:
          type: string
          description: Supplier Lead Time Preference
          example: MIN
        updateTime:
          type: string
          description: Updated Time
          format: date-time
          example: '2018-06-21T00:00:00Z'
        updateUser:
          type: string
          description: Updated User
          example: THOR
    CachedProductSupplierAssociationAggregatedValue:
      type: object
      properties:
        locationTypeDetailMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/SupplierAssociationDetail'
    SupplierAssociationDetail:
      type: object
      properties:
        enabled:
          type: boolean
        sequence:
          type: integer
          format: int32
        leadTimeQuantity:
          type: number
          format: double
        supplierMessage:
          type: string
        leadTimeMin:
          type: integer
          format: int32
        leadTimeMax:
          type: integer
          format: int32
        leadTimePreference:
          type: string
          enum:
            - MIN
            - MAX
        meta:
          type: object
          additionalProperties:
            type: string
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    CachedMinMaxDetail:
      type: object
      properties:
        min:
          type: integer
          format: int32
        max:
          type: integer
          format: int32
    CachedProductFulfillmentTypeAggregatedValue:
      type: object
      properties:
        productFulfillmentType:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FulfillmentTypeDetail'
    ProductClassKeyResponse:
      required:
        - orgId
        - productClass
        - sellingChannel
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        productClass:
          type: string
          description: Product Class
          example: Electronics
    CachedProductClassLocationTypeFulfillmentTypeAggregatedValue:
      type: object
      properties:
        productClassLocationTypeFulfillmentType:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ClassLocationTypeFulfillmentTypeDetail'
    ClassLocationTypeFulfillmentTypeDetail:
      type: object
      properties:
        enabled:
          type: boolean
        temporaryDisableExpirationTime:
          type: string
          format: date-time
        safetyStock:
          type: number
          format: double
        shelfLife:
          type: integer
          format: int32
        systemProcessingTime:
          $ref: '#/components/schemas/CachedMinMaxDetail'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CachedMinMaxDetail'
        locationProcessingTime:
          $ref: '#/components/schemas/CachedMinMaxDetail'
        meta:
          type: object
          additionalProperties:
            type: string
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    CachedProductClassLocationTypeFulfillmentServiceAggregatedValue:
      type: object
      properties:
        productClassLocationTypeFulfillmentService:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ClassLocationTypeFulfillmentServiceDetail'
    ClassLocationTypeFulfillmentServiceDetail:
      type: object
      properties:
        enabled:
          type: boolean
        temporaryDisableExpirationTime:
          type: string
          format: date-time
        locationProcessingTime:
          $ref: '#/components/schemas/CachedMinMaxDetail'
        meta:
          type: object
          additionalProperties:
            type: string
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    ProductKeyResponse:
      required:
        - orgId
        - productId
        - uom
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productId:
          type: string
          description: Product Id
          example: '1266009'
        uom:
          type: string
          description: Unit of measure
          example: EACH
    ProductCategoryKeyResponse:
      required:
        - orgId
        - productCategory
        - productClass
        - sellingChannel
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productCategory:
          type: string
          description: Product Category
          example: Camera
        productClass:
          type: string
          description: Product Class
          example: Electronics
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
    CachedProductCategoryLocationTypeFulfillmentTypeAggregatedValue:
      type: object
      properties:
        productCategoryLocationTypeFulfillmentType:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CategoryLocationTypeFulfillmentTypeDetail'
    CategoryLocationTypeFulfillmentTypeDetail:
      type: object
      properties:
        enabled:
          type: boolean
        temporaryDisableExpirationTime:
          type: string
          format: date-time
        safetyStock:
          type: number
          format: double
        shelfLife:
          type: integer
          format: int32
        locationProcessingTime:
          $ref: '#/components/schemas/CachedMinMaxDetail'
        systemProcessingTime:
          $ref: '#/components/schemas/CachedMinMaxDetail'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CachedMinMaxDetail'
        meta:
          type: object
          additionalProperties:
            type: string
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    CachedProductCategoryLocationTypeFulfillmentServiceAggregatedValue:
      type: object
      properties:
        productCategoryLocationTypeFulfillmentService:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CategoryLocationTypeFulfillmentServiceDetail'
    CategoryLocationTypeFulfillmentServiceDetail:
      type: object
      properties:
        enabled:
          type: boolean
        temporaryDisableExpirationTime:
          type: string
          format: date-time
        locationProcessingTime:
          $ref: '#/components/schemas/CachedMinMaxDetail'
        meta:
          type: object
          additionalProperties:
            type: string
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    CachedProductLocationTypeFulfillmentTypeAggregatedValue:
      type: object
      properties:
        fulfillmentTypeByLocation:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LocationFulfillmentTypeDetail'
    LocationFulfillmentTypeDetail:
      type: object
      properties:
        enabled:
          type: boolean
        systemProcessingTime:
          $ref: '#/components/schemas/CachedMinMaxDetail'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CachedMinMaxDetail'
        locationProcessingTime:
          $ref: '#/components/schemas/CachedMinMaxDetail'
        safetyStock:
          type: number
          format: double
        shelfLife:
          type: integer
          format: int32
        temporaryDisableExpirationTime:
          type: string
          format: date-time
        meta:
          type: object
          additionalProperties:
            type: string
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    CachedCalendarDetail:
      type: object
      properties:
        calendarId:
          type: string
        regularWeekShiftDetails:
          type: object
          additionalProperties:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/CachedShiftDetail'
        overrideDaysDetails:
          type: object
          additionalProperties:
            uniqueItems: true
            type: array
            items:
              $ref: '#/components/schemas/CachedShiftDetail'
        enabled:
          type: boolean
    CachedProductLocationTypeFulfillmentServiceAggregatedValue:
      type: object
      properties:
        locationTypeFulfillmentServiceDetailMap:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LocationFulfillmentServiceDetail'
    CachedShiftDetail:
      type: object
      properties:
        startTime:
          $ref: '#/components/schemas/LocalTime'
        endTime:
          $ref: '#/components/schemas/LocalTime'
    LocationFulfillmentServiceDetail:
      type: object
      properties:
        enabled:
          type: boolean
        temporaryDisableExpirationTime:
          type: string
          format: date-time
        inboundProcessingTime:
          $ref: '#/components/schemas/CachedMinMaxDetail'
        inboundWorkingCalendar:
          $ref: '#/components/schemas/CachedCalendarDetail'
        outboundProcessingTime:
          $ref: '#/components/schemas/CachedMinMaxDetail'
        outboundWorkingCalendar:
          $ref: '#/components/schemas/CachedCalendarDetail'
        locationProcessingTime:
          $ref: '#/components/schemas/CachedMinMaxDetail'
        meta:
          type: object
          additionalProperties:
            type: string
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    CachedProductLocationFulfillmentTypeAggregatedValue:
      type: object
      properties:
        fulfillmentTypeByLocation:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LocationFulfillmentTypeDetail'
    CachedProductLocationFulfillmentServiceAggregatedValue:
      type: object
      properties:
        fulfillmentServiceByLocation:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LocationFulfillmentServiceDetail'
    OrgKeyResponse:
      required:
        - orgId
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
    OrgAndSellingChannelResponse:
      required:
        - orgId
        - sellingChannel
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
    LocationKeyResponse:
      required:
        - locationId
        - locationType
        - orgId
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        locationType:
          type: string
          description: Type of location
          example: STORE
        locationId:
          type: string
          description: Location Id
          example: S001
    LocationTypeKeyResponse:
      required:
        - locationType
        - orgId
        - sellingChannel
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        locationType:
          type: string
          description: Type of location
          example: STORE
    ItemAssociationSubstitutionGetAllDetailResponse:
      required:
        - orgId
        - parentItem
        - parentUom
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        parentItem:
          type: string
          description: Item Association parent item
          example: Prod1
        parentUom:
          type: string
          description: Unit Of Measure for parentItem
          example: EACH
        substitutionIds:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ProductSubstitutionDetailResponse'
    ProductSubstitutionDetailResponse:
      required:
        - quantity
        - sequenceId
        - substitutionId
        - uom
      type: object
      properties:
        sequenceId:
          type: integer
          description: Item Association sequence
          format: int32
          example: 1
        substitutionId:
          type: string
          description: Item Association product Id
          example: Prod1
        uom:
          type: string
          description: Item Association uom
          example: EACH
        quantity:
          type: integer
          description: Item Association quantity
          format: int32
          example: 1
    AssociationSubstitutionDetail:
      type: object
      properties:
        substitutionId:
          type: string
        uom:
          type: string
        quantity:
          type: integer
          format: int32
        updateTime:
          type: string
          format: date-time
        updateUser:
          type: string
    CachedItemAssociationSubstitutionAggregatedValue:
      type: object
      properties:
        itemAssociationSubstitution:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AssociationSubstitutionDetail'
    FulfillmentTypeKeyResponse:
      required:
        - fulfillmentType
        - orgId
        - sellingChannel
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
    FulfillmentServiceKeyResponse:
      required:
        - fulfillmentService
        - orgId
        - sellingChannel
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentService:
          type: string
          description: Fulfillment Service
          example: EXPRESS
    FulfillmentServiceAssociationKeyResponse:
      required:
        - fulfillmentService
        - fulfillmentType
        - orgId
        - sellingChannel
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        fulfillmentService:
          type: string
          description: Fulfillment Service
          example: EXPRESS
    CalculatedTrackingLevelServiceResponse:
      required:
        - calculatedTrackingLevel
        - locationId
        - locationTrackingLevel
        - locationType
        - orgId
        - productId
        - productTrackingLevel
        - uom
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productId:
          type: string
          description: Product Id
          example: '1266009'
        uom:
          type: string
          description: Unit of measure
          example: EACH
        locationId:
          type: string
          description: Location Id
          example: S001
        locationType:
          type: string
          description: Type of location
          example: STORE
        calculatedTrackingLevel:
          type: string
          description: Calculated Tracking Level of inventory
          example: EPC
        productTrackingLevel:
          type: string
          description: Tracking Level of inventory at product level
          example: EPC
        locationTrackingLevel:
          type: string
          description: Tracking Level of inventory at location level
          example: EPC
    CalculatedItemAssociationBundleProductResponse:
      required:
        - productId
        - quantity
        - uom
      type: object
      properties:
        productId:
          type: string
          description: Item Association product Id
          example: Prod1
        uom:
          type: string
          description: Item Association uom
          example: PIECE
        quantity:
          type: integer
          description: Item Association quantity
          format: int32
          example: 1
      description: Item Association product bundle
      example:
        - productId: Prod1
          uom: PIECE
          quantity: '1'
    CalculatedItemAssociationBundleResponse:
      required:
        - deliveryConstraint
        - eligibilityLevel
        - productIds
        - productSubstitutionEnabled
        - safetyStockLevel
        - shippingConstraint
        - updateTime
      type: object
      properties:
        deliveryConstraint:
          type: string
          description: Item Association substitution type
          example: DELIVER_TOGETHER
        shippingConstraint:
          type: string
          description: Item Association substitution type
          example: SHIP_TOGETHER
        productIds:
          uniqueItems: true
          type: array
          description: Item Association product bundle
          example:
            - productId: Prod1
              uom: PIECE
              quantity: '1'
          items:
            $ref: '#/components/schemas/CalculatedItemAssociationBundleProductResponse'
        eligibilityLevel:
          type: string
          description: Item Association substitution type
          example: BUNDLE
        safetyStockLevel:
          type: string
          description: Item Association substitution type
          example: BUNDLE
        productSubstitutionEnabled:
          type: boolean
          description: whether support product substitution inside bundle products
          example: false
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
    CalculatedItemAssociationSubstitutionProductResponse:
      required:
        - quantity
        - sequenceId
        - substitutionId
        - uom
      type: object
      properties:
        sequenceId:
          type: integer
          description: Item Association sequence
          format: int32
          example: 1
        substitutionId:
          type: string
          description: Product Id
          example: '1266009'
        uom:
          type: string
          description: Item Association uom
          example: PIECE
        quantity:
          type: integer
          description: Item Association quantity
          format: int32
          example: 1
    CalculatedItemAssociationSubstitutionResponse:
      required:
        - substitutionIds
        - substitutionType
        - updateTime
      type: object
      properties:
        substitutionType:
          type: string
          description: Item Association substitution type
          example: Prod1
        substitutionIds:
          type: array
          items:
            $ref: '#/components/schemas/CalculatedItemAssociationSubstitutionProductResponse'
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
    CalculatedProductFSResponse:
      required:
        - enabled
        - fulfillmentService
        - fulfillmentType
        - orgId
        - productCategory
        - productClass
        - productId
        - sellingChannel
        - status
        - uom
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        productId:
          type: string
          description: Product Id
          example: '1266009'
        uom:
          type: string
          description: Unit of measure
          example: EACH
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        fulfillmentService:
          type: string
          description: Fulfillment Service
          example: EXPRESS
        productCategory:
          type: string
          description: Product Category
          example: Camera
        productClass:
          type: string
          description: Product Class
          example: Electronics
        productType:
          type: string
          description: Product Type
          example: Hazmat
        productLaunchDate:
          type: string
          description: Product Launch Date
          format: date
          example: '2018-06-21'
        productLaunchTime:
          $ref: '#/components/schemas/LocalTime'
        streetDate:
          type: string
          description: Product street date
          format: date
          example: '2020-03-21'
        streetDateType:
          type: string
          description: Type of product street date
          example: DELIVER
          enum:
            - SHIP
            - DELIVER
        sourcingClassification:
          type: string
          description: Uses for business logic customization
          example: DC
        shipAlone:
          type: boolean
          description: Need to ship separately
          example: true
        status:
          type: string
          description: Status
          example: Enabled
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        description:
          $ref: '#/components/schemas/DescriptionDetailResponse'
        weight:
          $ref: '#/components/schemas/WeightDetailResponse'
        dimensions:
          $ref: '#/components/schemas/DimensionsDetailResponse'
        prices:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/PriceDetailResponse'
        trackInventory:
          type: boolean
          description: Flag that enables Inventory tracking
          example: true
        productLocationOverrides:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CalculatedProductLocationOverrideFSDetailResponse'
        productLocationTypeOverrides:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CalculatedProductLocationTypeOverrideFSDetailResponse'
        supplierSourcing:
          type: boolean
          description: Flag that enables supplier sourcing support for optimization.
          example: true
        supplierSourcingLocations:
          type: object
          additionalProperties:
            uniqueItems: true
            type: array
            description: Supplier sourcing location details by sequence priority.
            example:
              '1':
                - locationId: S001
                  locationType: STORE
              '2':
                - locationId: S001
                  locationType: STORE
            items:
              $ref: '#/components/schemas/LocationIdAndTypeResponse'
          description: Supplier sourcing location details by sequence priority.
          example:
            '1':
              - locationId: S001
                locationType: STORE
            '2':
              - locationId: S001
                locationType: STORE
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailResponse'
          description: System processing time by transaction type
          example:
            PRE_SOURCING:
              min: 1
              max: 3
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
        bundleDetail:
          $ref: '#/components/schemas/CalculatedItemAssociationBundleResponse'
        substitutionDetail:
          $ref: '#/components/schemas/CalculatedItemAssociationSubstitutionResponse'
    CalculatedProductLocationOverrideFSDetailResponse:
      required:
        - enabled
        - locationId
        - locationType
        - updateTime
      type: object
      properties:
        locationType:
          type: string
          description: Type of location
          example: STORE
        locationId:
          type: string
          description: Location Id
          example: S001
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        updateTime:
          type: string
          description: Record published time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailResponse'
          description: System processing time by transaction type
          example:
            PRE_SOURCING:
              min: 1
              max: 3
        inboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        inboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        outboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        outboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
    CalculatedProductLocationTypeOverrideFSDetailResponse:
      required:
        - enabled
        - locationType
        - updateTime
      type: object
      properties:
        locationType:
          type: string
          description: Type of location
          example: STORE
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailResponse'
          description: System processing time by transaction type
          example:
            PRE_SOURCING:
              min: 1
              max: 3
        inboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        inboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        outboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        outboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
    LocationIdAndTypeResponse:
      required:
        - locationId
        - locationType
      type: object
      properties:
        locationId:
          type: string
          description: Location Id
          example: S001
        locationType:
          type: string
          description: Type of location
          example: STORE
      description: Supplier sourcing location details by sequence priority.
      example:
        '1':
          - locationId: S001
            locationType: STORE
        '2':
          - locationId: S001
            locationType: STORE
    CalculatedProductFTResponse:
      required:
        - enabled
        - fulfillmentType
        - orgId
        - productCategory
        - productClass
        - productId
        - sellingChannel
        - uom
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        productId:
          type: string
          description: Product Id
          example: '1266009'
        uom:
          type: string
          description: Unit of measure
          example: EACH
        productClass:
          type: string
          description: Product Class
          example: Electronics
        productCategory:
          type: string
          description: Product Category
          example: Camera
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        trackInventory:
          type: boolean
          description: Flag that enables Inventory tracking
          example: true
        launchDate:
          type: string
          description: Product Launch Date
          format: date
          example: '2018-06-21'
        productLaunchTime:
          $ref: '#/components/schemas/LocalTime'
        gtin:
          type: string
          description: Global Trade Item Number(GTIN)
          example: '12345678'
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        safetyStock:
          type: number
          description: Safety stock value
          format: double
          example: 2
        shelfLife:
          type: integer
          description: The number of days shelf life for perishable products
          format: int32
          example: 5
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
        atpEligibilityFactor:
          $ref: '#/components/schemas/AtpEligibilityFactorDetailResponse'
        productLocationFtDetails:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CalculatedProductLocationFTOverrideDetailResponse'
        productLocationTypeFtDetails:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CalculatedProductLTOverrideFTDetailResponse'
    CalculatedProductLTOverrideFTDetailResponse:
      required:
        - enabled
        - locationType
        - updateTime
      type: object
      properties:
        locationType:
          type: string
          description: Type of location
          example: STORE
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailResponse'
          description: System processing time by transaction type
          example:
            PRE_SOURCING:
              min: 1
              max: 3
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        safetyStock:
          type: number
          description: Safety stock value
          format: double
          example: 2
        shelfLife:
          type: integer
          description: The number of days shelf life for perishable products
          format: int32
          example: 5
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
    CalculatedProductLocationFTOverrideDetailResponse:
      required:
        - enabled
        - locationId
        - locationType
        - updateTime
      type: object
      properties:
        locationId:
          type: string
          description: Location Id
          example: S001
        locationType:
          type: string
          description: Type of location
          example: STORE
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        safetyStock:
          type: number
          description: Safety stock value
          format: double
          example: 2
        shelfLife:
          type: integer
          description: The number of days shelf life for perishable products
          format: int32
          example: 5
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
    CalculatedProductLocationTypeOverrideFTDetailResponse:
      required:
        - enabled
        - fulfillmentType
        - locationType
        - sellingChannel
        - updateTime
      type: object
      properties:
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        locationType:
          type: string
          description: Type of location
          example: STORE
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailResponse'
          description: System processing time by transaction type
          example:
            PRE_SOURCING:
              min: 1
              max: 3
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        safetyStock:
          type: number
          description: Safety stock value
          format: double
          example: 2
        shelfLife:
          type: integer
          description: The number of days shelf life for perishable products
          format: int32
          example: 5
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
    CalculatedProductResponse:
      required:
        - enabled
        - orgId
        - productCategory
        - productClass
        - productId
        - trackInventory
        - uom
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productId:
          type: string
          description: Product Id
          example: '1266009'
        uom:
          type: string
          description: Unit of measure
          example: EACH
        trackInventory:
          type: boolean
          description: Flag that enables Inventory tracking
          example: true
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        gtin:
          type: string
          description: Global Trade Item Number(GTIN)
          example: '12345678'
        productLaunchDate:
          type: string
          description: Product Launch Date
          format: date
          example: '2018-06-21'
        productLaunchTime:
          $ref: '#/components/schemas/LocalTime'
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
        productClass:
          type: string
          description: Product Class
          example: Electronics
        productCategory:
          type: string
          description: Product Category
          example: Camera
        productLocationDetails:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ProductLocationAndProductResponse'
        fulfillmentDetails:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SellingChannelFTAndProductResponse'
        productLocationTypeFtOverrides:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CalculatedProductLocationTypeOverrideFTDetailResponse'
    ProductLocationAndProductResponse:
      required:
        - locationId
        - locationType
        - trackInventory
        - updateTime
      type: object
      properties:
        locationId:
          type: string
          description: Location Id
          example: S001
        locationType:
          type: string
          description: Type of location
          example: STORE
        trackInventory:
          type: boolean
          description: Flag that enables Inventory tracking
          example: true
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
        fulfillmentDetails:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SellingChannelFTAndProductLocationResponse'
    SellingChannelFTAndProductLocationResponse:
      required:
        - enabled
        - fulfillmentType
        - sellingChannel
        - updateTime
      type: object
      properties:
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        safetyStock:
          type: number
          description: Safety stock value
          format: double
          example: 2
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
    SellingChannelFTAndProductResponse:
      required:
        - enabled
        - fulfillmentType
        - sellingChannel
        - updateTime
      type: object
      properties:
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        safetyStock:
          type: number
          description: Safety stock value
          format: double
          example: 2
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
        atpEligibilityFactor:
          $ref: '#/components/schemas/AtpEligibilityFactorDetailResponse'
    CalculatedProductLocationFTResponse:
      required:
        - enabled
        - fulfillmentType
        - locationId
        - locationType
        - orgId
        - productId
        - sellingChannel
        - uom
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        productId:
          type: string
          description: Product Id
          example: '1266009'
        uom:
          type: string
          description: Unit of measure
          example: EACH
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        locationType:
          type: string
          description: Type of location
          example: STORE
        locationId:
          type: string
          description: Location Id
          example: S001
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        safetyStock:
          type: number
          description: Safety stock value
          format: double
          example: 2
        shelfLife:
          type: integer
          description: The number of days shelf life for perishable products
          format: int32
          example: 5
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
    CalculatedProductLocationFSResponse:
      required:
        - enabled
        - fulfillmentService
        - fulfillmentType
        - locationId
        - locationType
        - orgId
        - productId
        - sellingChannel
        - uom
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        productId:
          type: string
          description: Product Id
          example: '1266009'
        uom:
          type: string
          description: Unit of measure
          example: EACH
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        fulfillmentService:
          type: string
          description: Fulfillment Service
          example: EXPRESS
        locationType:
          type: string
          description: Type of location
          example: STORE
        locationId:
          type: string
          description: Location Id
          example: S001
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailResponse'
          description: System processing time by transaction type
          example:
            PRE_SOURCING:
              min: 1
              max: 3
        inboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        inboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        outboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        outboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
    CalculatedProductLocationTypeFTResponse:
      required:
        - enabled
        - fulfillmentType
        - locationType
        - orgId
        - productId
        - sellingChannel
        - uom
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productId:
          type: string
          description: Product Id
          example: '1266009'
        uom:
          type: string
          description: Unit of measure
          example: EACH
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        locationType:
          type: string
          description: Type of location
          example: STORE
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailResponse'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        safetyStock:
          type: number
          description: Safety stock value
          format: double
          example: 2
        shelfLife:
          type: integer
          description: The number of days shelf life for perishable products
          format: int32
          example: 5
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
    CalculatedProductLocationTypeFSResponse:
      required:
        - enabled
        - fulfillmentService
        - fulfillmentType
        - locationType
        - orgId
        - productId
        - sellingChannel
        - uom
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        productId:
          type: string
          description: Product Id
          example: '1266009'
        uom:
          type: string
          description: Unit of measure
          example: EACH
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        fulfillmentService:
          type: string
          description: Fulfillment Service
          example: EXPRESS
        locationType:
          type: string
          description: Type of location
          example: STORE
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailResponse'
          description: System processing time by transaction type
          example:
            PRE_SOURCING:
              min: 1
              max: 3
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        inboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        inboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        outboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        outboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
    CalculatedProductGtinResponse:
      required:
        - orgId
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        gtin:
          type: string
          description: Global Trade Item Number(GTIN)
          example: '12345678'
        productIds:
          uniqueItems: true
          type: array
          description: List of products linked with a Gtin
          example:
            - '1266010'
            - '1266009'
          items:
            type: string
            description: List of products linked with a Gtin
            example: '["1266010","1266009"]'
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
    CalculatedProductClassCategoryFSResponse:
      required:
        - enabled
        - fulfillmentService
        - fulfillmentType
        - orgId
        - productCategory
        - productClass
        - sellingChannel
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        fulfillmentService:
          type: string
          description: Fulfillment Service
          example: EXPRESS
        productCategory:
          type: string
          description: Product Category
          example: Camera
        productClass:
          type: string
          description: Product Class
          example: Electronics
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailResponse'
          description: System processing time by transaction type
          example:
            PRE_SOURCING:
              min: 1
              max: 3
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        locationTypeOverrides:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CalculatedProductClassCategoryLocationTypeOverridesFSResponse'
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
    CalculatedProductClassCategoryLocationTypeOverridesFSResponse:
      required:
        - enabled
        - locationType
        - updateTime
      type: object
      properties:
        locationType:
          type: string
          description: Type of location
          example: STORE
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailResponse'
          description: System processing time by transaction type
          example:
            PRE_SOURCING:
              min: 1
              max: 3
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
    CalculatedProductClassCategoryFTResponse:
      required:
        - enabled
        - fulfillmentType
        - orgId
        - productCategory
        - productClass
        - sellingChannel
        - temporaryDisableExpirationTime
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        productCategory:
          type: string
          description: Product Category
          example: Camera
        productClass:
          type: string
          description: Product Class
          example: Electronics
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        locationTypeOverrides:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CalculatedProductClassCategoryLocationTypeOverridesFTResponse'
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
        safetyStock:
          type: number
          description: Safety stock value
          format: double
          example: 2
        shelfLife:
          type: integer
          description: The number of days shelf life for perishable products
          format: int32
          example: 5
        atpEligibilityFactor:
          $ref: '#/components/schemas/AtpEligibilityFactorDetailResponse'
    CalculatedProductClassCategoryLocationTypeOverridesFTResponse:
      required:
        - enabled
        - locationType
        - updateTime
      type: object
      properties:
        locationType:
          type: string
          description: Type of location
          example: STORE
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
        safetyStock:
          type: number
          description: Safety stock value
          format: double
          example: 2
        shelfLife:
          type: integer
          description: The number of days shelf life for perishable products
          format: int32
          example: 5
    CalculatedProductClassCategoryLocationTypeFTResponse:
      required:
        - enabled
        - fulfillmentType
        - locationType
        - orgId
        - productCategory
        - productClass
        - sellingChannel
        - temporaryDisableExpirationTime
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        safetyStock:
          type: number
          description: Safety stock value
          format: double
          example: 2
        shelfLife:
          type: integer
          description: The number of days shelf life for perishable products
          format: int32
          example: 5
        productCategory:
          type: string
          description: Product Category
          example: Camera
        productClass:
          type: string
          description: Product Class
          example: Electronics
        locationType:
          type: string
          description: Type of location
          example: STORE
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
    CalculatedProductClassCategoryLocationTypeFSResponse:
      required:
        - enabled
        - fulfillmentService
        - fulfillmentType
        - locationType
        - orgId
        - productCategory
        - productClass
        - sellingChannel
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        fulfillmentService:
          type: string
          description: Fulfillment Service
          example: EXPRESS
        productCategory:
          type: string
          description: Product Category
          example: Camera
        productClass:
          type: string
          description: Product Class
          example: Electronics
        locationType:
          type: string
          description: Type of location
          example: STORE
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailResponse'
          description: System processing time by transaction type
          example:
            PRE_SOURCING:
              min: 1
              max: 3
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
    CalculatedProductAssociationResponse:
      required:
        - enabled
        - orgId
        - productCategory
        - productClass
        - productId
        - trackInventory
        - uom
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productId:
          type: string
          description: Product Id
          example: '1266009'
        uom:
          type: string
          description: Unit of measure
          example: EACH
        trackInventory:
          type: boolean
          description: Flag that enables Inventory tracking
          example: true
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        gtin:
          type: string
          description: Global Trade Item Number(GTIN)
          example: '12345678'
        productLaunchDate:
          type: string
          description: Product Launch Date
          format: date
          example: '2018-06-21'
        productLaunchTime:
          $ref: '#/components/schemas/LocalTime'
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
        productClass:
          type: string
          description: Product Class
          example: Electronics
        productCategory:
          type: string
          description: Product Category
          example: Camera
        bundleDetail:
          $ref: '#/components/schemas/CalculatedItemAssociationBundleResponse'
        substitutionDetail:
          $ref: '#/components/schemas/CalculatedItemAssociationSubstitutionResponse'
    CalculatedSellingChannelResponse:
      required:
        - locale
        - optimizationRuleId
        - orgId
        - sellingChannel
        - systemHoldTime
        - transferOptimizationRuleId
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        enabled:
          type: boolean
          description: Organization enabled flag
          example: true
        systemHoldTime:
          type: integer
          description: System hold time in minutes
          format: int32
          example: 45
        transactionalSystemHoldTime:
          type: object
          additionalProperties:
            type: integer
            description: System hold time by transaction type
            format: int32
          description: System hold time by transaction type
          example:
            PRE_SOURCING: 1
        optimizationRuleId:
          type: string
          description: Optimization Rule Id
          example: MINIMIZE_DISTANCE
        transferOptimizationRuleId:
          type: string
          description: Transfer Optimization Rule Id
          example: MINIMIZE_TOLL_COST
        locale:
          type: object
          properties:
            id:
              type: string
            rules:
              type: object
              properties:
                fixedOffset:
                  type: boolean
                transitions:
                  type: array
                  items:
                    type: object
                    properties:
                      offsetBefore:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      offsetAfter:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      duration:
                        type: object
                        properties:
                          seconds:
                            type: integer
                            format: int64
                          nano:
                            type: integer
                            format: int32
                          negative:
                            type: boolean
                          zero:
                            type: boolean
                          units:
                            type: array
                            items:
                              type: object
                              properties:
                                dateBased:
                                  type: boolean
                                timeBased:
                                  type: boolean
                                durationEstimated:
                                  type: boolean
                      gap:
                        type: boolean
                      dateTimeBefore:
                        type: string
                        format: date-time
                      dateTimeAfter:
                        type: string
                        format: date-time
                      overlap:
                        type: boolean
                      instant:
                        type: string
                        format: date-time
                transitionRules:
                  type: array
                  items:
                    type: object
                    properties:
                      month:
                        type: string
                        enum:
                          - JANUARY
                          - FEBRUARY
                          - MARCH
                          - APRIL
                          - MAY
                          - JUNE
                          - JULY
                          - AUGUST
                          - SEPTEMBER
                          - OCTOBER
                          - NOVEMBER
                          - DECEMBER
                      timeDefinition:
                        type: string
                        enum:
                          - UTC
                          - WALL
                          - STANDARD
                      standardOffset:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      offsetBefore:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      offsetAfter:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      dayOfWeek:
                        type: string
                        enum:
                          - MONDAY
                          - TUESDAY
                          - WEDNESDAY
                          - THURSDAY
                          - FRIDAY
                          - SATURDAY
                          - SUNDAY
                      dayOfMonthIndicator:
                        type: integer
                        format: int32
                      localTime:
                        $ref: '#/components/schemas/LocalTime'
                      midnightEndOfDay:
                        type: boolean
          description: Locale
          example: America/New_York
        locationOrg:
          type: string
          description: Location org id
          example: locationOrg1
        configurationHierarchyOrg:
          type: string
          description: Configuration hierarchy org id
          example: configHierarchyOrg1
        transitOrg:
          type: string
          description: Transit org id
          example: transitOrg1
        availabilityOrg:
          type: string
          description: Availability org id
          example: availabilityOrg1
        fulfillmentOrg:
          type: string
          description: Fulfillment org id
          example: fulfillmentOrg1
        catalogOrg:
          type: string
          description: Catalog org id
          example: catalogOrg1
        eligibilityOrg:
          type: string
          description: Eligibility org id
          example: eligibilityOrg1
        inventoryOrg:
          type: string
          description: Inventory org id
          example: inventoryOrg1
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
    CalculatedCapacityRangeCostResponse:
      required:
        - cost
        - max
        - min
      type: object
      properties:
        min:
          type: integer
          description: Capacity range cost min.
          format: int32
          example: 2
        max:
          type: integer
          description: Capacity range cost max.
          format: int32
          example: 5
        cost:
          type: number
          description: Capacity cost.
          format: double
          example: 5.1
      description: Capacity range cost.
      example:
        - min: 4
          max: 7
          cost: 5.2
        - min: 1
          max: 3
          cost: 5.5
    CalculatedLocationFSResponse:
      required:
        - capacityCostBySegment
        - city
        - countryCode
        - enabled
        - fulfillmentService
        - fulfillmentServiceAttributes
        - fulfillmentType
        - fulfillmentTypeAttributes
        - locale
        - locationId
        - locationProcessingTime
        - locationType
        - orgId
        - priority
        - sellingChannel
        - state
        - trackDeliveryCapacity
        - updateTime
        - zipCode
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        locationType:
          type: string
          description: Type of location
          example: STORE
        locationId:
          type: string
          description: Location Id
          example: S001
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        fulfillmentService:
          type: string
          description: Fulfillment Service
          example: EXPRESS
        enabled:
          type: boolean
          description: Location Enabled flag
          example: true
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        priority:
          type: number
          description: Priority value of location type compared to other locations.
          format: double
          example: 2
        locale:
          type: object
          properties:
            id:
              type: string
            rules:
              type: object
              properties:
                fixedOffset:
                  type: boolean
                transitions:
                  type: array
                  items:
                    type: object
                    properties:
                      offsetBefore:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      offsetAfter:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      duration:
                        type: object
                        properties:
                          seconds:
                            type: integer
                            format: int64
                          nano:
                            type: integer
                            format: int32
                          negative:
                            type: boolean
                          zero:
                            type: boolean
                          units:
                            type: array
                            items:
                              type: object
                              properties:
                                dateBased:
                                  type: boolean
                                timeBased:
                                  type: boolean
                                durationEstimated:
                                  type: boolean
                      gap:
                        type: boolean
                      dateTimeBefore:
                        type: string
                        format: date-time
                      dateTimeAfter:
                        type: string
                        format: date-time
                      overlap:
                        type: boolean
                      instant:
                        type: string
                        format: date-time
                transitionRules:
                  type: array
                  items:
                    type: object
                    properties:
                      month:
                        type: string
                        enum:
                          - JANUARY
                          - FEBRUARY
                          - MARCH
                          - APRIL
                          - MAY
                          - JUNE
                          - JULY
                          - AUGUST
                          - SEPTEMBER
                          - OCTOBER
                          - NOVEMBER
                          - DECEMBER
                      timeDefinition:
                        type: string
                        enum:
                          - UTC
                          - WALL
                          - STANDARD
                      standardOffset:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      offsetBefore:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      offsetAfter:
                        type: object
                        properties:
                          totalSeconds:
                            type: integer
                            format: int32
                          id:
                            type: string
                      dayOfWeek:
                        type: string
                        enum:
                          - MONDAY
                          - TUESDAY
                          - WEDNESDAY
                          - THURSDAY
                          - FRIDAY
                          - SATURDAY
                          - SUNDAY
                      dayOfMonthIndicator:
                        type: integer
                        format: int32
                      localTime:
                        $ref: '#/components/schemas/LocalTime'
                      midnightEndOfDay:
                        type: boolean
          description: Locale
          example: America/New_York
        city:
          type: string
          description: Location City
          example: Plano
        state:
          type: string
          description: Location State
          example: TX
        zipCode:
          type: string
          description: Location Zip Code
          example: '75024'
        countryCode:
          type: string
          description: Country code of customer
          example: US
        fulfillmentTypeAttributes:
          $ref: '#/components/schemas/CalculatedLocationFulfillmentTypeAttributesResponse'
        fulfillmentServiceAttributes:
          $ref: '#/components/schemas/CalculatedLocationFulfillmentServiceAttributesResponse'
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        stockoutDays:
          type: integer
          description: The number of days in which an item gets stocked out
          format: int32
          example: 5
        markdownProlongDays:
          type: integer
          description: Days count to prolong markdown if it is not defined
          format: int32
          example: 5
        dynamicPriorities:
          type: object
          additionalProperties:
            type: number
            description: A map of different score types and their respective priority
            format: double
          description: A map of different score types and their respective priority
          example:
            Replenishment: 4.5
            Inventory: 2.1
        trackCapacity:
          type: boolean
          description: Flag that enables Capacity tracking
          example: true
        trackDeliveryCapacity:
          type: boolean
          description: Flag that enables Delivery Capacity tracking
          example: true
        futureInventoryProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        capacityCostBySegment:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CapacityCostResponse'
          description: Capacity cost by segment
          example:
            B2B:
              cost: 8.2
              rangeCost:
                - min: 1
                  max: 2
                  cost: 3.4
                - min: 3
                  max: 4
                  cost: 6.8
        transferEnabled:
          type: boolean
          description: Flag that enables Location Transfer
          example: true
        inboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        inboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        outboundProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        outboundWorkingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
    CalculatedLocationFulfillmentServiceAttributesResponse:
      required:
        - cutOff
        - deliveryBuffer
        - processingTimeBuffer
        - transitBuffer
      type: object
      properties:
        cutOff:
          $ref: '#/components/schemas/LocalTime'
        cutOffCalendar:
          $ref: '#/components/schemas/CutOffCalendarDetailResponse'
        workingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        processingTimeBuffer:
          type: integer
          description: Processing Time Buffer in mins
          format: int32
          example: 2
        distanceLimit:
          $ref: '#/components/schemas/DistanceDetailResponse'
        transferCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        deliveryCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        transitBuffer:
          type: integer
          description: Transit buffer in days
          format: int32
          example: 3
        deliveryBuffer:
          type: integer
          description: Delivery buffer in days
          format: int32
          example: 2
      description: Calculated fulfillment service attributes
      example: Fulfillment service attributes
    CalculatedLocationFulfillmentTypeAttributesResponse:
      required:
        - cutOff
        - processingTimeBuffer
        - systemProcessingTime
      type: object
      properties:
        cutOff:
          $ref: '#/components/schemas/LocalTime'
        cutOffCalendar:
          $ref: '#/components/schemas/CutOffCalendarDetailResponse'
        workingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        processingTimeBuffer:
          type: integer
          description: Processing Time Buffer in mins
          format: int32
          example: 2
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailResponse'
          description: System processing time by transaction type
          example:
            PRE_SOURCING:
              min: 1
              max: 3
      description: Calculated fulfillment type attributes
      example: Fulfillment type attributes
    CapacityCostResponse:
      required:
        - cost
        - rangeCost
      type: object
      properties:
        cost:
          type: number
          description: Capacity cost.
          format: double
          example: 5.1
        rangeCost:
          type: array
          description: Capacity range cost.
          example:
            - min: 4
              max: 7
              cost: 5.2
            - min: 1
              max: 3
              cost: 5.5
          items:
            $ref: '#/components/schemas/CalculatedCapacityRangeCostResponse'
      description: Capacity cost by segment
      example:
        B2B:
          cost: 8.2
          rangeCost:
            - min: 1
              max: 2
              cost: 3.4
            - min: 3
              max: 4
              cost: 6.8
    CalculatedLocationFTResponse:
      required:
        - country
        - enabled
        - ftEnabled
        - fulfillmentType
        - locale
        - locationId
        - locationType
        - orgId
        - sellingChannel
        - trackCapacity
        - trackDeliveryCapacity
        - updateTime
        - zipCode
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        locationType:
          type: string
          description: Type of location
          example: STORE
        locationId:
          type: string
          description: Location Id
          example: S001
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        country:
          type: string
          description: Location Country Code
          example: US
        zipCode:
          type: string
          description: Location Zip Code
          example: '75024'
        locale:
          type: string
          description: Locale
          example: America/New_York
        trackCapacity:
          type: boolean
          description: Flag that enables Capacity tracking
          example: true
        trackDeliveryCapacity:
          type: boolean
          description: Flag that enables Delivery Capacity tracking
          example: true
        enabled:
          type: boolean
          description: Location Enabled flag
          example: true
        temporaryDisableExpirationTime:
          type: string
          description: Location Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        ftEnabled:
          type: boolean
          description: Location/Fulfillment Type Enabled Flag
          example: true
        ftTemporaryDisableExpirationTime:
          type: string
          description: Location/Fulfillment Type Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
        ftSafetyStock:
          type: number
          description: Safety stock value
          format: double
          example: 2
    CalculatedLocationResponse:
      required:
        - country
        - enabled
        - locale
        - locationId
        - locationType
        - orgId
        - trackCapacity
        - trackDeliveryCapacity
        - updateTime
        - zipCode
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        locationType:
          type: string
          description: Type of location
          example: STORE
        locationId:
          type: string
          description: Location Id
          example: S001
        country:
          type: string
          description: Location Country Code
          example: US
        zipCode:
          type: string
          description: Location Zip Code
          example: '75024'
        locale:
          type: string
          description: Locale
          example: America/New_York
        trackCapacity:
          type: boolean
          description: Flag that enables Capacity tracking
          example: true
        trackDeliveryCapacity:
          type: boolean
          description: Flag that enables Delivery Capacity tracking
          example: true
        enabled:
          type: boolean
          description: Location Enabled flag
          example: true
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
        sellingChannelAndFulfillmentType:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/SellingChannelFTAndLocationResponse'
    SellingChannelFTAndLocationResponse:
      required:
        - enabled
        - fulfillmentType
        - sellingChannel
        - updateTime
      type: object
      properties:
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
        safetyStock:
          type: number
          description: Safety stock value
          format: double
          example: 2
    CalculatedItemAssociationGroupResponse:
      required:
        - groupId
        - orgId
        - productIds
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        groupId:
          type: string
          description: Item Association Alias Group ID
          example: '123'
        productIds:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CalculatedProductGroupDetailResponse'
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
    CalculatedProductGroupDetailResponse:
      required:
        - productId
        - uom
      type: object
      properties:
        productId:
          type: string
          description: Organization code
          example: ORG001
        uom:
          type: string
          description: Item Association uom
          example: PIECE
    CalculatedItemAssociationAliasResponse:
      required:
        - orgId
        - productAlias
        - productId
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        productAlias:
          type: string
          description: Item Association product Alias
          example: Prod1
        productId:
          type: string
          description: Item Association product Id
          example: Prod1
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
    CalculatedFulfillmentTypeResponse:
      required:
        - enabled
        - fulfillmentType
        - orgId
        - sellingChannel
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
        safetyStock:
          type: number
          description: Safety stock value
          format: double
          example: 2
        atpEligibilityFactor:
          $ref: '#/components/schemas/AtpEligibilityFactorDetailResponse'
        cutOff:
          $ref: '#/components/schemas/LocalTime'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        processingTimeBuffer:
          type: integer
          description: Processing Time Buffer in mins
          format: int32
          example: 2
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailResponse'
          description: System processing time by transaction type
          example:
            PRE_SOURCING:
              min: 1
              max: 3
        workingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
    CalculatedFulfillmentServiceAttributesResponse:
      required:
        - cutOff
        - deliveryBuffer
        - processingTimeBuffer
        - transitBuffer
      type: object
      properties:
        cutOff:
          $ref: '#/components/schemas/LocalTime'
        cutOffCalendar:
          $ref: '#/components/schemas/CutOffCalendarDetailResponse'
        workingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        processingTimeBuffer:
          type: integer
          description: Processing Time Buffer in mins
          format: int32
          example: 2
        distanceLimit:
          $ref: '#/components/schemas/DistanceDetailResponse'
        transferCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        deliveryCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        transitBuffer:
          type: integer
          description: Transit buffer in days
          format: int32
          example: 3
        deliveryBuffer:
          type: integer
          description: Delivery buffer in days
          format: int32
          example: 2
      description: Calculated fulfillment service attributes
    CalculatedFulfillmentServiceResponse:
      required:
        - defaultTransitTime
        - deliveryThreshold
        - fulfillmentService
        - fulfillmentServiceAttributes
        - fulfillmentType
        - fulfillmentTypeAttributes
        - locationProcessingTime
        - orgId
        - sellingChannel
        - updateTime
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        sellingChannel:
          type: string
          description: Selling Channel of item
          example: dotcom
        fulfillmentService:
          type: string
          description: Fulfillment Service
          example: EXPRESS
        fulfillmentType:
          type: string
          description: Fulfillment Type
          example: SHIP
        enabled:
          type: boolean
          description: Enabled flag
          example: true
        defaultTransitTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        defaultTransitTimeByCustomerRef:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailResponse'
          description: Default Transit Time by CustomerRef
          example:
            REF_1:
              min: 1
              max: 3
        minOverrideTransitTime:
          type: object
          additionalProperties:
            type: integer
            description: TNT Days is Map of Integer and Integer
            format: int32
          description: TNT Days is Map of Integer and Integer
          example:
            '1': '2'
            '3': '2'
        maxOverrideTransitTime:
          type: object
          additionalProperties:
            type: integer
            description: TNT Days is Map of Integer and Integer
            format: int32
          description: TNT Days is Map of Integer and Integer
          example:
            '1': '2'
            '3': '2'
        temporaryDisableExpirationTime:
          type: string
          description: Temporary disable expiration time
          format: date-time
          example: '2018-06-26T23:24:08.255Z'
        locationProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        nonCarrierFulfillment:
          type: boolean
          description: Flag for non-carrier fulfillment
          example: true
        fulfillmentTypeAttributes:
          $ref: '#/components/schemas/CalculatedFulfillmentTypeAttributesResponse'
        fulfillmentServiceAttributes:
          $ref: '#/components/schemas/CalculatedFulfillmentServiceAttributesResponse'
        deliveryTimeSlotEnable:
          type: boolean
          description: Indicates the fulfillment association is eligible for delivery slot configuration
          example: true
        updateTime:
          type: string
          description: Calculated update time
          format: date-time
        deliveryThreshold:
          type: integer
          description: Delivery Threshold in days
          format: int32
          example: 2
        transferFulfillmentType:
          type: string
          description: Transfer Fulfillment Type
          example: PICK
    CalculatedFulfillmentTypeAttributesResponse:
      required:
        - cutOff
        - processingTimeBuffer
        - systemProcessingTime
      type: object
      properties:
        cutOff:
          $ref: '#/components/schemas/LocalTime'
        cutOffCalendar:
          $ref: '#/components/schemas/CutOffCalendarDetailResponse'
        workingCalendar:
          $ref: '#/components/schemas/CalendarDetailResponse'
        processingTimeBuffer:
          type: integer
          description: Processing Time Buffer in mins
          format: int32
          example: 2
        systemProcessingTime:
          $ref: '#/components/schemas/MinMaxDetailResponse'
        transactionalSystemProcessingTime:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MinMaxDetailResponse'
          description: System processing time by transaction type
          example:
            PRE_SOURCING:
              min: 1
              max: 3
      description: Calculated fulfillment type attributes
    CalendarDefinitionDetailKeyResponse:
      required:
        - calendarId
        - orgId
      type: object
      properties:
        orgId:
          type: string
          description: Organization code
          example: ORG001
        calendarId:
          type: string
          description: Calendar Id
          example: CAL_001
    CacheLoadStateDetail:
      type: object
      properties:
        cacheLoadState:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - FINISHED
    ValidationConfigDetailKey:
      type: object
      properties:
        validationType:
          type: string
          enum:
            - STRING
            - NUMBER
            - DATE
        propertyName:
          type: string
        orgId:
          type: string
    ProductDetailKey:
      type: object
      properties:
        orgId:
          type: string
        productId:
          type: string
        uom:
          type: string
    ProductSupplierAssociationDetailKey:
      type: object
      properties:
        orgId:
          type: string
        productId:
          type: string
        uom:
          type: string
        locationType:
          type: string
        locationId:
          type: string
    GtinDetailKey:
      type: object
      properties:
        orgId:
          type: string
        gtin:
          type: string
    ProductFulfillmentTypeDetailKey:
      type: object
      properties:
        orgId:
          type: string
        productId:
          type: string
        uom:
          type: string
        sellingChannel:
          type: string
        fulfillmentType:
          type: string
    ProductFulfillmentServiceDetailKey:
      type: object
      properties:
        orgId:
          type: string
        productId:
          type: string
        uom:
          type: string
        sellingChannel:
          type: string
        fulfillmentService:
          type: string
    ProductClassDetailKey:
      type: object
      properties:
        orgId:
          type: string
        sellingChannel:
          type: string
        productClass:
          type: string
    ProductClassLocationTypeFulfillmentTypeDetailKey:
      type: object
      properties:
        orgId:
          type: string
        productClass:
          type: string
        sellingChannel:
          type: string
        locationType:
          type: string
        fulfillmentType:
          type: string
    ProductClassLocationTypeFulfillmentServiceDetailKey:
      type: object
      properties:
        orgId:
          type: string
        productClass:
          type: string
        sellingChannel:
          type: string
        locationType:
          type: string
        fulfillmentService:
          type: string
    ProductClassFulfillmentTypeDetailKey:
      type: object
      properties:
        orgId:
          type: string
        productClass:
          type: string
        sellingChannel:
          type: string
        fulfillmentType:
          type: string
    ProductClassFulfillmentServiceDetailKey:
      type: object
      properties:
        orgId:
          type: string
        productClass:
          type: string
        sellingChannel:
          type: string
        fulfillmentService:
          type: string
    ProductCategoryDetailKey:
      type: object
      properties:
        orgId:
          type: string
        productCategory:
          type: string
        productClass:
          type: string
        sellingChannel:
          type: string
    ProductCategoryLocationTypeFulfillmentTypeDetailKey:
      type: object
      properties:
        orgId:
          type: string
        productCategory:
          type: string
        sellingChannel:
          type: string
        locationType:
          type: string
        fulfillmentType:
          type: string
    ProductCategoryLocationTypeFulfillmentServiceDetailKey:
      type: object
      properties:
        orgId:
          type: string
        productCategory:
          type: string
        sellingChannel:
          type: string
        locationType:
          type: string
        fulfillmentService:
          type: string
    ProductCategoryFulfillmentTypeDetailKey:
      type: object
      properties:
        orgId:
          type: string
        productCategory:
          type: string
        sellingChannel:
          type: string
        fulfillmentType:
          type: string
    ProductCategoryFulfillmentServiceDetailKey:
      type: object
      properties:
        orgId:
          type: string
        productCategory:
          type: string
        sellingChannel:
          type: string
        fulfillmentService:
          type: string
    ProductLocationTypeFulfillmentTypeDetailKey:
      type: object
      properties:
        orgId:
          type: string
        productId:
          type: string
        uom:
          type: string
        sellingChannel:
          type: string
        locationType:
          type: string
        fulfillmentType:
          type: string
    ProductLocationTypeFulfillmentServiceDetailKey:
      type: object
      properties:
        orgId:
          type: string
        productId:
          type: string
        uom:
          type: string
        sellingChannel:
          type: string
        locationType:
          type: string
        fulfillmentService:
          type: string
    ProductLocationFulfillmentTypeDetailKey:
      type: object
      properties:
        orgId:
          type: string
        productId:
          type: string
        uom:
          type: string
        locationType:
          type: string
        locationId:
          type: string
        sellingChannel:
          type: string
        fulfillmentType:
          type: string
    ProductLocationFulfillmentServiceDetailKey:
      type: object
      properties:
        orgId:
          type: string
        productId:
          type: string
        uom:
          type: string
        locationType:
          type: string
        locationId:
          type: string
        sellingChannel:
          type: string
        fulfillmentService:
          type: string
    OrgDetailKey:
      type: object
      properties:
        orgId:
          type: string
    OrgSellingChannelDetailKey:
      type: object
      properties:
        orgId:
          type: string
        sellingChannel:
          type: string
    LocationDetailKey:
      type: object
      properties:
        orgId:
          type: string
        locationType:
          type: string
        locationId:
          type: string
    LocationTypeDetailKey:
      type: object
      properties:
        orgId:
          type: string
        locationType:
          type: string
        sellingChannel:
          type: string
    LocationTypeAndFulfillmentTypeDetailKey:
      type: object
      properties:
        orgId:
          type: string
        locationType:
          type: string
        sellingChannel:
          type: string
        fulfillmentType:
          type: string
    LocationTypeAndFulfillmentServiceDetailKey:
      type: object
      properties:
        orgId:
          type: string
        locationType:
          type: string
        sellingChannel:
          type: string
        fulfillmentService:
          type: string
    LocationTypeCapacityCostDetailKey:
      type: object
      properties:
        orgId:
          type: string
        locationType:
          type: string
        capacitySegment:
          type: string
    LocationAndFulfillmentTypeDetailKey:
      type: object
      properties:
        orgId:
          type: string
        locationType:
          type: string
        locationId:
          type: string
        sellingChannel:
          type: string
        fulfillmentType:
          type: string
    LocationAndFulfillmentServiceDetailKey:
      type: object
      properties:
        orgId:
          type: string
        locationType:
          type: string
        locationId:
          type: string
        sellingChannel:
          type: string
        fulfillmentService:
          type: string
    LocationCapacityCostDetailKey:
      type: object
      properties:
        orgId:
          type: string
        locationType:
          type: string
        locationId:
          type: string
        capacitySegment:
          type: string
    ItemAssociationSubstitutionTypeDetailKey:
      type: object
      properties:
        orgId:
          type: string
        parentItem:
          type: string
        parentUom:
          type: string
    ItemAssociationSubstitutionDetailKey:
      type: object
      properties:
        orgId:
          type: string
        parentItem:
          type: string
        parentUom:
          type: string
        sequenceId:
          type: integer
          format: int32
    ItemAssociationGroupDetailKey:
      type: object
      properties:
        orgId:
          type: string
        groupId:
          type: string
    ItemAssociationBundleDetailKey:
      type: object
      properties:
        orgId:
          type: string
        bundleId:
          type: string
        uom:
          type: string
    ItemAssociationAliasDetailKey:
      type: object
      properties:
        orgId:
          type: string
        productAlias:
          type: string
    ItemAssociationAliasTransposeDetailKey:
      type: object
      properties:
        orgId:
          type: string
        productId:
          type: string
    FulfillmentTypeDetailKey:
      type: object
      properties:
        orgId:
          type: string
        sellingChannel:
          type: string
        fulfillmentType:
          type: string
    FulfillmentServiceDetailKey:
      type: object
      properties:
        orgId:
          type: string
        sellingChannel:
          type: string
        fulfillmentService:
          type: string
    FulfillmentServiceAssociationDetailKey:
      type: object
      properties:
        orgId:
          type: string
        sellingChannel:
          type: string
        fulfillmentType:
          type: string
        fulfillmentService:
          type: string
    LocationTypeDynamicPriorityDetailKey:
      type: object
      properties:
        orgId:
          type: string
        sellingChannel:
          type: string
        locationType:
          type: string
        scoreType:
          type: string
    LocationDynamicPriorityDetailKey:
      type: object
      properties:
        orgId:
          type: string
        locationType:
          type: string
        locationId:
          type: string
        scoreType:
          type: string
    ConfigurationHierarchyDetailKey:
      type: object
      properties:
        orgId:
          type: string
        configurationType:
          type: string
    CalendarDefinitionDetailKey:
      type: object
      properties:
        orgId:
          type: string
        calendarId:
          type: string
